
led_blink.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005ef8  080000c0  080000c0  000010c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000408  08005fb8  08005fb8  00006fb8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080063c0  080063c0  0000826c  2**0
                  CONTENTS
  4 .ARM          00000000  080063c0  080063c0  0000826c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080063c0  080063c0  0000826c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080063c0  080063c0  000073c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080063c4  080063c4  000073c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000026c  20000000  080063c8  00008000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  9 .bss          00000188  2000026c  08006634  0000826c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003f4  08006634  000083f4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000826c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003c17  00000000  00000000  00008294  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000013e9  00000000  00000000  0000beab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000548  00000000  00000000  0000d298  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000003cb  00000000  00000000  0000d7e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002099  00000000  00000000  0000dbab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00006745  00000000  00000000  0000fc44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0006fea6  00000000  00000000  00016389  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0008622f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002104  00000000  00000000  00086274  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000041  00000000  00000000  00088378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000026c 	.word	0x2000026c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08005f90 	.word	0x08005f90

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000270 	.word	0x20000270
 8000104:	08005f90 	.word	0x08005f90

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff69 	bl	8001314 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fea9 	bl	80011a4 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 ff5b 	bl	8001314 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ff51 	bl	8001314 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fed3 	bl	800122c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fec9 	bl	800122c <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	4657      	mov	r7, sl
 80004ac:	464e      	mov	r6, r9
 80004ae:	4645      	mov	r5, r8
 80004b0:	46de      	mov	lr, fp
 80004b2:	b5e0      	push	{r5, r6, r7, lr}
 80004b4:	b083      	sub	sp, #12
 80004b6:	9000      	str	r0, [sp, #0]
 80004b8:	9101      	str	r1, [sp, #4]
 80004ba:	030c      	lsls	r4, r1, #12
 80004bc:	004f      	lsls	r7, r1, #1
 80004be:	0fce      	lsrs	r6, r1, #31
 80004c0:	0a61      	lsrs	r1, r4, #9
 80004c2:	9c00      	ldr	r4, [sp, #0]
 80004c4:	031d      	lsls	r5, r3, #12
 80004c6:	0f64      	lsrs	r4, r4, #29
 80004c8:	430c      	orrs	r4, r1
 80004ca:	9900      	ldr	r1, [sp, #0]
 80004cc:	9200      	str	r2, [sp, #0]
 80004ce:	9301      	str	r3, [sp, #4]
 80004d0:	00c8      	lsls	r0, r1, #3
 80004d2:	0059      	lsls	r1, r3, #1
 80004d4:	0d4b      	lsrs	r3, r1, #21
 80004d6:	4699      	mov	r9, r3
 80004d8:	9a00      	ldr	r2, [sp, #0]
 80004da:	9b01      	ldr	r3, [sp, #4]
 80004dc:	0a6d      	lsrs	r5, r5, #9
 80004de:	0fd9      	lsrs	r1, r3, #31
 80004e0:	0f53      	lsrs	r3, r2, #29
 80004e2:	432b      	orrs	r3, r5
 80004e4:	469a      	mov	sl, r3
 80004e6:	9b00      	ldr	r3, [sp, #0]
 80004e8:	0d7f      	lsrs	r7, r7, #21
 80004ea:	00da      	lsls	r2, r3, #3
 80004ec:	4694      	mov	ip, r2
 80004ee:	464a      	mov	r2, r9
 80004f0:	46b0      	mov	r8, r6
 80004f2:	1aba      	subs	r2, r7, r2
 80004f4:	428e      	cmp	r6, r1
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b0      	b.n	800065c <__aeabi_dadd+0x1b4>
 80004fa:	2a00      	cmp	r2, #0
 80004fc:	dc00      	bgt.n	8000500 <__aeabi_dadd+0x58>
 80004fe:	e078      	b.n	80005f2 <__aeabi_dadd+0x14a>
 8000500:	4649      	mov	r1, r9
 8000502:	2900      	cmp	r1, #0
 8000504:	d100      	bne.n	8000508 <__aeabi_dadd+0x60>
 8000506:	e0e9      	b.n	80006dc <__aeabi_dadd+0x234>
 8000508:	49c9      	ldr	r1, [pc, #804]	@ (8000830 <__aeabi_dadd+0x388>)
 800050a:	428f      	cmp	r7, r1
 800050c:	d100      	bne.n	8000510 <__aeabi_dadd+0x68>
 800050e:	e195      	b.n	800083c <__aeabi_dadd+0x394>
 8000510:	2501      	movs	r5, #1
 8000512:	2a38      	cmp	r2, #56	@ 0x38
 8000514:	dc16      	bgt.n	8000544 <__aeabi_dadd+0x9c>
 8000516:	2180      	movs	r1, #128	@ 0x80
 8000518:	4653      	mov	r3, sl
 800051a:	0409      	lsls	r1, r1, #16
 800051c:	430b      	orrs	r3, r1
 800051e:	469a      	mov	sl, r3
 8000520:	2a1f      	cmp	r2, #31
 8000522:	dd00      	ble.n	8000526 <__aeabi_dadd+0x7e>
 8000524:	e1e7      	b.n	80008f6 <__aeabi_dadd+0x44e>
 8000526:	2120      	movs	r1, #32
 8000528:	4655      	mov	r5, sl
 800052a:	1a8b      	subs	r3, r1, r2
 800052c:	4661      	mov	r1, ip
 800052e:	409d      	lsls	r5, r3
 8000530:	40d1      	lsrs	r1, r2
 8000532:	430d      	orrs	r5, r1
 8000534:	4661      	mov	r1, ip
 8000536:	4099      	lsls	r1, r3
 8000538:	1e4b      	subs	r3, r1, #1
 800053a:	4199      	sbcs	r1, r3
 800053c:	4653      	mov	r3, sl
 800053e:	40d3      	lsrs	r3, r2
 8000540:	430d      	orrs	r5, r1
 8000542:	1ae4      	subs	r4, r4, r3
 8000544:	1b45      	subs	r5, r0, r5
 8000546:	42a8      	cmp	r0, r5
 8000548:	4180      	sbcs	r0, r0
 800054a:	4240      	negs	r0, r0
 800054c:	1a24      	subs	r4, r4, r0
 800054e:	0223      	lsls	r3, r4, #8
 8000550:	d400      	bmi.n	8000554 <__aeabi_dadd+0xac>
 8000552:	e10f      	b.n	8000774 <__aeabi_dadd+0x2cc>
 8000554:	0264      	lsls	r4, r4, #9
 8000556:	0a64      	lsrs	r4, r4, #9
 8000558:	2c00      	cmp	r4, #0
 800055a:	d100      	bne.n	800055e <__aeabi_dadd+0xb6>
 800055c:	e139      	b.n	80007d2 <__aeabi_dadd+0x32a>
 800055e:	0020      	movs	r0, r4
 8000560:	f001 fe5e 	bl	8002220 <__clzsi2>
 8000564:	0003      	movs	r3, r0
 8000566:	3b08      	subs	r3, #8
 8000568:	2120      	movs	r1, #32
 800056a:	0028      	movs	r0, r5
 800056c:	1aca      	subs	r2, r1, r3
 800056e:	40d0      	lsrs	r0, r2
 8000570:	409c      	lsls	r4, r3
 8000572:	0002      	movs	r2, r0
 8000574:	409d      	lsls	r5, r3
 8000576:	4322      	orrs	r2, r4
 8000578:	429f      	cmp	r7, r3
 800057a:	dd00      	ble.n	800057e <__aeabi_dadd+0xd6>
 800057c:	e173      	b.n	8000866 <__aeabi_dadd+0x3be>
 800057e:	1bd8      	subs	r0, r3, r7
 8000580:	3001      	adds	r0, #1
 8000582:	1a09      	subs	r1, r1, r0
 8000584:	002c      	movs	r4, r5
 8000586:	408d      	lsls	r5, r1
 8000588:	40c4      	lsrs	r4, r0
 800058a:	1e6b      	subs	r3, r5, #1
 800058c:	419d      	sbcs	r5, r3
 800058e:	0013      	movs	r3, r2
 8000590:	40c2      	lsrs	r2, r0
 8000592:	408b      	lsls	r3, r1
 8000594:	4325      	orrs	r5, r4
 8000596:	2700      	movs	r7, #0
 8000598:	0014      	movs	r4, r2
 800059a:	431d      	orrs	r5, r3
 800059c:	076b      	lsls	r3, r5, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	402b      	ands	r3, r5
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d2b      	adds	r3, r5, #4
 80005aa:	42ab      	cmp	r3, r5
 80005ac:	41ad      	sbcs	r5, r5
 80005ae:	426d      	negs	r5, r5
 80005b0:	1964      	adds	r4, r4, r5
 80005b2:	001d      	movs	r5, r3
 80005b4:	0223      	lsls	r3, r4, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e12d      	b.n	8000816 <__aeabi_dadd+0x36e>
 80005ba:	4a9d      	ldr	r2, [pc, #628]	@ (8000830 <__aeabi_dadd+0x388>)
 80005bc:	3701      	adds	r7, #1
 80005be:	4297      	cmp	r7, r2
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0d3      	b.n	800076c <__aeabi_dadd+0x2c4>
 80005c4:	4646      	mov	r6, r8
 80005c6:	499b      	ldr	r1, [pc, #620]	@ (8000834 <__aeabi_dadd+0x38c>)
 80005c8:	08ed      	lsrs	r5, r5, #3
 80005ca:	4021      	ands	r1, r4
 80005cc:	074a      	lsls	r2, r1, #29
 80005ce:	432a      	orrs	r2, r5
 80005d0:	057c      	lsls	r4, r7, #21
 80005d2:	024d      	lsls	r5, r1, #9
 80005d4:	0b2d      	lsrs	r5, r5, #12
 80005d6:	0d64      	lsrs	r4, r4, #21
 80005d8:	0524      	lsls	r4, r4, #20
 80005da:	432c      	orrs	r4, r5
 80005dc:	07f6      	lsls	r6, r6, #31
 80005de:	4334      	orrs	r4, r6
 80005e0:	0010      	movs	r0, r2
 80005e2:	0021      	movs	r1, r4
 80005e4:	b003      	add	sp, #12
 80005e6:	bcf0      	pop	{r4, r5, r6, r7}
 80005e8:	46bb      	mov	fp, r7
 80005ea:	46b2      	mov	sl, r6
 80005ec:	46a9      	mov	r9, r5
 80005ee:	46a0      	mov	r8, r4
 80005f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005f2:	2a00      	cmp	r2, #0
 80005f4:	d100      	bne.n	80005f8 <__aeabi_dadd+0x150>
 80005f6:	e084      	b.n	8000702 <__aeabi_dadd+0x25a>
 80005f8:	464a      	mov	r2, r9
 80005fa:	1bd2      	subs	r2, r2, r7
 80005fc:	2f00      	cmp	r7, #0
 80005fe:	d000      	beq.n	8000602 <__aeabi_dadd+0x15a>
 8000600:	e16d      	b.n	80008de <__aeabi_dadd+0x436>
 8000602:	0025      	movs	r5, r4
 8000604:	4305      	orrs	r5, r0
 8000606:	d100      	bne.n	800060a <__aeabi_dadd+0x162>
 8000608:	e127      	b.n	800085a <__aeabi_dadd+0x3b2>
 800060a:	1e56      	subs	r6, r2, #1
 800060c:	2a01      	cmp	r2, #1
 800060e:	d100      	bne.n	8000612 <__aeabi_dadd+0x16a>
 8000610:	e23b      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 8000612:	4d87      	ldr	r5, [pc, #540]	@ (8000830 <__aeabi_dadd+0x388>)
 8000614:	42aa      	cmp	r2, r5
 8000616:	d100      	bne.n	800061a <__aeabi_dadd+0x172>
 8000618:	e26a      	b.n	8000af0 <__aeabi_dadd+0x648>
 800061a:	2501      	movs	r5, #1
 800061c:	2e38      	cmp	r6, #56	@ 0x38
 800061e:	dc12      	bgt.n	8000646 <__aeabi_dadd+0x19e>
 8000620:	0032      	movs	r2, r6
 8000622:	2a1f      	cmp	r2, #31
 8000624:	dd00      	ble.n	8000628 <__aeabi_dadd+0x180>
 8000626:	e1f8      	b.n	8000a1a <__aeabi_dadd+0x572>
 8000628:	2620      	movs	r6, #32
 800062a:	0025      	movs	r5, r4
 800062c:	1ab6      	subs	r6, r6, r2
 800062e:	0007      	movs	r7, r0
 8000630:	4653      	mov	r3, sl
 8000632:	40b0      	lsls	r0, r6
 8000634:	40d4      	lsrs	r4, r2
 8000636:	40b5      	lsls	r5, r6
 8000638:	40d7      	lsrs	r7, r2
 800063a:	1e46      	subs	r6, r0, #1
 800063c:	41b0      	sbcs	r0, r6
 800063e:	1b1b      	subs	r3, r3, r4
 8000640:	469a      	mov	sl, r3
 8000642:	433d      	orrs	r5, r7
 8000644:	4305      	orrs	r5, r0
 8000646:	4662      	mov	r2, ip
 8000648:	1b55      	subs	r5, r2, r5
 800064a:	45ac      	cmp	ip, r5
 800064c:	4192      	sbcs	r2, r2
 800064e:	4653      	mov	r3, sl
 8000650:	4252      	negs	r2, r2
 8000652:	000e      	movs	r6, r1
 8000654:	464f      	mov	r7, r9
 8000656:	4688      	mov	r8, r1
 8000658:	1a9c      	subs	r4, r3, r2
 800065a:	e778      	b.n	800054e <__aeabi_dadd+0xa6>
 800065c:	2a00      	cmp	r2, #0
 800065e:	dc00      	bgt.n	8000662 <__aeabi_dadd+0x1ba>
 8000660:	e08e      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000662:	4649      	mov	r1, r9
 8000664:	2900      	cmp	r1, #0
 8000666:	d175      	bne.n	8000754 <__aeabi_dadd+0x2ac>
 8000668:	4661      	mov	r1, ip
 800066a:	4653      	mov	r3, sl
 800066c:	4319      	orrs	r1, r3
 800066e:	d100      	bne.n	8000672 <__aeabi_dadd+0x1ca>
 8000670:	e0f6      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000672:	1e51      	subs	r1, r2, #1
 8000674:	2a01      	cmp	r2, #1
 8000676:	d100      	bne.n	800067a <__aeabi_dadd+0x1d2>
 8000678:	e191      	b.n	800099e <__aeabi_dadd+0x4f6>
 800067a:	4d6d      	ldr	r5, [pc, #436]	@ (8000830 <__aeabi_dadd+0x388>)
 800067c:	42aa      	cmp	r2, r5
 800067e:	d100      	bne.n	8000682 <__aeabi_dadd+0x1da>
 8000680:	e0dc      	b.n	800083c <__aeabi_dadd+0x394>
 8000682:	2501      	movs	r5, #1
 8000684:	2938      	cmp	r1, #56	@ 0x38
 8000686:	dc14      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000688:	000a      	movs	r2, r1
 800068a:	2a1f      	cmp	r2, #31
 800068c:	dd00      	ble.n	8000690 <__aeabi_dadd+0x1e8>
 800068e:	e1a2      	b.n	80009d6 <__aeabi_dadd+0x52e>
 8000690:	2120      	movs	r1, #32
 8000692:	4653      	mov	r3, sl
 8000694:	1a89      	subs	r1, r1, r2
 8000696:	408b      	lsls	r3, r1
 8000698:	001d      	movs	r5, r3
 800069a:	4663      	mov	r3, ip
 800069c:	40d3      	lsrs	r3, r2
 800069e:	431d      	orrs	r5, r3
 80006a0:	4663      	mov	r3, ip
 80006a2:	408b      	lsls	r3, r1
 80006a4:	0019      	movs	r1, r3
 80006a6:	1e4b      	subs	r3, r1, #1
 80006a8:	4199      	sbcs	r1, r3
 80006aa:	4653      	mov	r3, sl
 80006ac:	40d3      	lsrs	r3, r2
 80006ae:	430d      	orrs	r5, r1
 80006b0:	18e4      	adds	r4, r4, r3
 80006b2:	182d      	adds	r5, r5, r0
 80006b4:	4285      	cmp	r5, r0
 80006b6:	4180      	sbcs	r0, r0
 80006b8:	4240      	negs	r0, r0
 80006ba:	1824      	adds	r4, r4, r0
 80006bc:	0223      	lsls	r3, r4, #8
 80006be:	d559      	bpl.n	8000774 <__aeabi_dadd+0x2cc>
 80006c0:	4b5b      	ldr	r3, [pc, #364]	@ (8000830 <__aeabi_dadd+0x388>)
 80006c2:	3701      	adds	r7, #1
 80006c4:	429f      	cmp	r7, r3
 80006c6:	d051      	beq.n	800076c <__aeabi_dadd+0x2c4>
 80006c8:	2101      	movs	r1, #1
 80006ca:	4b5a      	ldr	r3, [pc, #360]	@ (8000834 <__aeabi_dadd+0x38c>)
 80006cc:	086a      	lsrs	r2, r5, #1
 80006ce:	401c      	ands	r4, r3
 80006d0:	4029      	ands	r1, r5
 80006d2:	430a      	orrs	r2, r1
 80006d4:	07e5      	lsls	r5, r4, #31
 80006d6:	4315      	orrs	r5, r2
 80006d8:	0864      	lsrs	r4, r4, #1
 80006da:	e75f      	b.n	800059c <__aeabi_dadd+0xf4>
 80006dc:	4661      	mov	r1, ip
 80006de:	4653      	mov	r3, sl
 80006e0:	4319      	orrs	r1, r3
 80006e2:	d100      	bne.n	80006e6 <__aeabi_dadd+0x23e>
 80006e4:	e0bc      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80006e6:	1e51      	subs	r1, r2, #1
 80006e8:	2a01      	cmp	r2, #1
 80006ea:	d100      	bne.n	80006ee <__aeabi_dadd+0x246>
 80006ec:	e164      	b.n	80009b8 <__aeabi_dadd+0x510>
 80006ee:	4d50      	ldr	r5, [pc, #320]	@ (8000830 <__aeabi_dadd+0x388>)
 80006f0:	42aa      	cmp	r2, r5
 80006f2:	d100      	bne.n	80006f6 <__aeabi_dadd+0x24e>
 80006f4:	e16a      	b.n	80009cc <__aeabi_dadd+0x524>
 80006f6:	2501      	movs	r5, #1
 80006f8:	2938      	cmp	r1, #56	@ 0x38
 80006fa:	dd00      	ble.n	80006fe <__aeabi_dadd+0x256>
 80006fc:	e722      	b.n	8000544 <__aeabi_dadd+0x9c>
 80006fe:	000a      	movs	r2, r1
 8000700:	e70e      	b.n	8000520 <__aeabi_dadd+0x78>
 8000702:	4a4d      	ldr	r2, [pc, #308]	@ (8000838 <__aeabi_dadd+0x390>)
 8000704:	1c7d      	adds	r5, r7, #1
 8000706:	4215      	tst	r5, r2
 8000708:	d000      	beq.n	800070c <__aeabi_dadd+0x264>
 800070a:	e0d0      	b.n	80008ae <__aeabi_dadd+0x406>
 800070c:	0025      	movs	r5, r4
 800070e:	4662      	mov	r2, ip
 8000710:	4653      	mov	r3, sl
 8000712:	4305      	orrs	r5, r0
 8000714:	431a      	orrs	r2, r3
 8000716:	2f00      	cmp	r7, #0
 8000718:	d000      	beq.n	800071c <__aeabi_dadd+0x274>
 800071a:	e137      	b.n	800098c <__aeabi_dadd+0x4e4>
 800071c:	2d00      	cmp	r5, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_dadd+0x27a>
 8000720:	e1a8      	b.n	8000a74 <__aeabi_dadd+0x5cc>
 8000722:	2a00      	cmp	r2, #0
 8000724:	d100      	bne.n	8000728 <__aeabi_dadd+0x280>
 8000726:	e16a      	b.n	80009fe <__aeabi_dadd+0x556>
 8000728:	4663      	mov	r3, ip
 800072a:	1ac5      	subs	r5, r0, r3
 800072c:	4653      	mov	r3, sl
 800072e:	1ae2      	subs	r2, r4, r3
 8000730:	42a8      	cmp	r0, r5
 8000732:	419b      	sbcs	r3, r3
 8000734:	425b      	negs	r3, r3
 8000736:	1ad3      	subs	r3, r2, r3
 8000738:	021a      	lsls	r2, r3, #8
 800073a:	d400      	bmi.n	800073e <__aeabi_dadd+0x296>
 800073c:	e203      	b.n	8000b46 <__aeabi_dadd+0x69e>
 800073e:	4663      	mov	r3, ip
 8000740:	1a1d      	subs	r5, r3, r0
 8000742:	45ac      	cmp	ip, r5
 8000744:	4192      	sbcs	r2, r2
 8000746:	4653      	mov	r3, sl
 8000748:	4252      	negs	r2, r2
 800074a:	1b1c      	subs	r4, r3, r4
 800074c:	000e      	movs	r6, r1
 800074e:	4688      	mov	r8, r1
 8000750:	1aa4      	subs	r4, r4, r2
 8000752:	e723      	b.n	800059c <__aeabi_dadd+0xf4>
 8000754:	4936      	ldr	r1, [pc, #216]	@ (8000830 <__aeabi_dadd+0x388>)
 8000756:	428f      	cmp	r7, r1
 8000758:	d070      	beq.n	800083c <__aeabi_dadd+0x394>
 800075a:	2501      	movs	r5, #1
 800075c:	2a38      	cmp	r2, #56	@ 0x38
 800075e:	dca8      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000760:	2180      	movs	r1, #128	@ 0x80
 8000762:	4653      	mov	r3, sl
 8000764:	0409      	lsls	r1, r1, #16
 8000766:	430b      	orrs	r3, r1
 8000768:	469a      	mov	sl, r3
 800076a:	e78e      	b.n	800068a <__aeabi_dadd+0x1e2>
 800076c:	003c      	movs	r4, r7
 800076e:	2500      	movs	r5, #0
 8000770:	2200      	movs	r2, #0
 8000772:	e731      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000774:	2307      	movs	r3, #7
 8000776:	402b      	ands	r3, r5
 8000778:	2b00      	cmp	r3, #0
 800077a:	d000      	beq.n	800077e <__aeabi_dadd+0x2d6>
 800077c:	e710      	b.n	80005a0 <__aeabi_dadd+0xf8>
 800077e:	e093      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d074      	beq.n	800086e <__aeabi_dadd+0x3c6>
 8000784:	464a      	mov	r2, r9
 8000786:	1bd2      	subs	r2, r2, r7
 8000788:	2f00      	cmp	r7, #0
 800078a:	d100      	bne.n	800078e <__aeabi_dadd+0x2e6>
 800078c:	e0c7      	b.n	800091e <__aeabi_dadd+0x476>
 800078e:	4928      	ldr	r1, [pc, #160]	@ (8000830 <__aeabi_dadd+0x388>)
 8000790:	4589      	cmp	r9, r1
 8000792:	d100      	bne.n	8000796 <__aeabi_dadd+0x2ee>
 8000794:	e185      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000796:	2501      	movs	r5, #1
 8000798:	2a38      	cmp	r2, #56	@ 0x38
 800079a:	dc12      	bgt.n	80007c2 <__aeabi_dadd+0x31a>
 800079c:	2180      	movs	r1, #128	@ 0x80
 800079e:	0409      	lsls	r1, r1, #16
 80007a0:	430c      	orrs	r4, r1
 80007a2:	2a1f      	cmp	r2, #31
 80007a4:	dd00      	ble.n	80007a8 <__aeabi_dadd+0x300>
 80007a6:	e1ab      	b.n	8000b00 <__aeabi_dadd+0x658>
 80007a8:	2120      	movs	r1, #32
 80007aa:	0025      	movs	r5, r4
 80007ac:	1a89      	subs	r1, r1, r2
 80007ae:	0007      	movs	r7, r0
 80007b0:	4088      	lsls	r0, r1
 80007b2:	408d      	lsls	r5, r1
 80007b4:	40d7      	lsrs	r7, r2
 80007b6:	1e41      	subs	r1, r0, #1
 80007b8:	4188      	sbcs	r0, r1
 80007ba:	40d4      	lsrs	r4, r2
 80007bc:	433d      	orrs	r5, r7
 80007be:	4305      	orrs	r5, r0
 80007c0:	44a2      	add	sl, r4
 80007c2:	4465      	add	r5, ip
 80007c4:	4565      	cmp	r5, ip
 80007c6:	4192      	sbcs	r2, r2
 80007c8:	4252      	negs	r2, r2
 80007ca:	4452      	add	r2, sl
 80007cc:	0014      	movs	r4, r2
 80007ce:	464f      	mov	r7, r9
 80007d0:	e774      	b.n	80006bc <__aeabi_dadd+0x214>
 80007d2:	0028      	movs	r0, r5
 80007d4:	f001 fd24 	bl	8002220 <__clzsi2>
 80007d8:	0003      	movs	r3, r0
 80007da:	3318      	adds	r3, #24
 80007dc:	2b1f      	cmp	r3, #31
 80007de:	dc00      	bgt.n	80007e2 <__aeabi_dadd+0x33a>
 80007e0:	e6c2      	b.n	8000568 <__aeabi_dadd+0xc0>
 80007e2:	002a      	movs	r2, r5
 80007e4:	3808      	subs	r0, #8
 80007e6:	4082      	lsls	r2, r0
 80007e8:	429f      	cmp	r7, r3
 80007ea:	dd00      	ble.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a9      	b.n	8000942 <__aeabi_dadd+0x49a>
 80007ee:	1bdb      	subs	r3, r3, r7
 80007f0:	1c58      	adds	r0, r3, #1
 80007f2:	281f      	cmp	r0, #31
 80007f4:	dc00      	bgt.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e1ac      	b.n	8000b52 <__aeabi_dadd+0x6aa>
 80007f8:	0015      	movs	r5, r2
 80007fa:	3b1f      	subs	r3, #31
 80007fc:	40dd      	lsrs	r5, r3
 80007fe:	2820      	cmp	r0, #32
 8000800:	d005      	beq.n	800080e <__aeabi_dadd+0x366>
 8000802:	2340      	movs	r3, #64	@ 0x40
 8000804:	1a1b      	subs	r3, r3, r0
 8000806:	409a      	lsls	r2, r3
 8000808:	1e53      	subs	r3, r2, #1
 800080a:	419a      	sbcs	r2, r3
 800080c:	4315      	orrs	r5, r2
 800080e:	2307      	movs	r3, #7
 8000810:	2700      	movs	r7, #0
 8000812:	402b      	ands	r3, r5
 8000814:	e7b0      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000816:	08ed      	lsrs	r5, r5, #3
 8000818:	4b05      	ldr	r3, [pc, #20]	@ (8000830 <__aeabi_dadd+0x388>)
 800081a:	0762      	lsls	r2, r4, #29
 800081c:	432a      	orrs	r2, r5
 800081e:	08e4      	lsrs	r4, r4, #3
 8000820:	429f      	cmp	r7, r3
 8000822:	d00f      	beq.n	8000844 <__aeabi_dadd+0x39c>
 8000824:	0324      	lsls	r4, r4, #12
 8000826:	0b25      	lsrs	r5, r4, #12
 8000828:	057c      	lsls	r4, r7, #21
 800082a:	0d64      	lsrs	r4, r4, #21
 800082c:	e6d4      	b.n	80005d8 <__aeabi_dadd+0x130>
 800082e:	46c0      	nop			@ (mov r8, r8)
 8000830:	000007ff 	.word	0x000007ff
 8000834:	ff7fffff 	.word	0xff7fffff
 8000838:	000007fe 	.word	0x000007fe
 800083c:	08c0      	lsrs	r0, r0, #3
 800083e:	0762      	lsls	r2, r4, #29
 8000840:	4302      	orrs	r2, r0
 8000842:	08e4      	lsrs	r4, r4, #3
 8000844:	0013      	movs	r3, r2
 8000846:	4323      	orrs	r3, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e186      	b.n	8000b5a <__aeabi_dadd+0x6b2>
 800084c:	2580      	movs	r5, #128	@ 0x80
 800084e:	032d      	lsls	r5, r5, #12
 8000850:	4325      	orrs	r5, r4
 8000852:	032d      	lsls	r5, r5, #12
 8000854:	4cc3      	ldr	r4, [pc, #780]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000856:	0b2d      	lsrs	r5, r5, #12
 8000858:	e6be      	b.n	80005d8 <__aeabi_dadd+0x130>
 800085a:	4660      	mov	r0, ip
 800085c:	4654      	mov	r4, sl
 800085e:	000e      	movs	r6, r1
 8000860:	0017      	movs	r7, r2
 8000862:	08c5      	lsrs	r5, r0, #3
 8000864:	e7d8      	b.n	8000818 <__aeabi_dadd+0x370>
 8000866:	4cc0      	ldr	r4, [pc, #768]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000868:	1aff      	subs	r7, r7, r3
 800086a:	4014      	ands	r4, r2
 800086c:	e696      	b.n	800059c <__aeabi_dadd+0xf4>
 800086e:	4abf      	ldr	r2, [pc, #764]	@ (8000b6c <__aeabi_dadd+0x6c4>)
 8000870:	1c79      	adds	r1, r7, #1
 8000872:	4211      	tst	r1, r2
 8000874:	d16b      	bne.n	800094e <__aeabi_dadd+0x4a6>
 8000876:	0022      	movs	r2, r4
 8000878:	4302      	orrs	r2, r0
 800087a:	2f00      	cmp	r7, #0
 800087c:	d000      	beq.n	8000880 <__aeabi_dadd+0x3d8>
 800087e:	e0db      	b.n	8000a38 <__aeabi_dadd+0x590>
 8000880:	2a00      	cmp	r2, #0
 8000882:	d100      	bne.n	8000886 <__aeabi_dadd+0x3de>
 8000884:	e12d      	b.n	8000ae2 <__aeabi_dadd+0x63a>
 8000886:	4662      	mov	r2, ip
 8000888:	4653      	mov	r3, sl
 800088a:	431a      	orrs	r2, r3
 800088c:	d100      	bne.n	8000890 <__aeabi_dadd+0x3e8>
 800088e:	e0b6      	b.n	80009fe <__aeabi_dadd+0x556>
 8000890:	4663      	mov	r3, ip
 8000892:	18c5      	adds	r5, r0, r3
 8000894:	4285      	cmp	r5, r0
 8000896:	4180      	sbcs	r0, r0
 8000898:	4454      	add	r4, sl
 800089a:	4240      	negs	r0, r0
 800089c:	1824      	adds	r4, r4, r0
 800089e:	0223      	lsls	r3, r4, #8
 80008a0:	d502      	bpl.n	80008a8 <__aeabi_dadd+0x400>
 80008a2:	000f      	movs	r7, r1
 80008a4:	4bb0      	ldr	r3, [pc, #704]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 80008a6:	401c      	ands	r4, r3
 80008a8:	003a      	movs	r2, r7
 80008aa:	0028      	movs	r0, r5
 80008ac:	e7d8      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80008ae:	4662      	mov	r2, ip
 80008b0:	1a85      	subs	r5, r0, r2
 80008b2:	42a8      	cmp	r0, r5
 80008b4:	4192      	sbcs	r2, r2
 80008b6:	4653      	mov	r3, sl
 80008b8:	4252      	negs	r2, r2
 80008ba:	4691      	mov	r9, r2
 80008bc:	1ae3      	subs	r3, r4, r3
 80008be:	001a      	movs	r2, r3
 80008c0:	464b      	mov	r3, r9
 80008c2:	1ad2      	subs	r2, r2, r3
 80008c4:	0013      	movs	r3, r2
 80008c6:	4691      	mov	r9, r2
 80008c8:	021a      	lsls	r2, r3, #8
 80008ca:	d454      	bmi.n	8000976 <__aeabi_dadd+0x4ce>
 80008cc:	464a      	mov	r2, r9
 80008ce:	464c      	mov	r4, r9
 80008d0:	432a      	orrs	r2, r5
 80008d2:	d000      	beq.n	80008d6 <__aeabi_dadd+0x42e>
 80008d4:	e640      	b.n	8000558 <__aeabi_dadd+0xb0>
 80008d6:	2600      	movs	r6, #0
 80008d8:	2400      	movs	r4, #0
 80008da:	2500      	movs	r5, #0
 80008dc:	e67c      	b.n	80005d8 <__aeabi_dadd+0x130>
 80008de:	4da1      	ldr	r5, [pc, #644]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 80008e0:	45a9      	cmp	r9, r5
 80008e2:	d100      	bne.n	80008e6 <__aeabi_dadd+0x43e>
 80008e4:	e090      	b.n	8000a08 <__aeabi_dadd+0x560>
 80008e6:	2501      	movs	r5, #1
 80008e8:	2a38      	cmp	r2, #56	@ 0x38
 80008ea:	dd00      	ble.n	80008ee <__aeabi_dadd+0x446>
 80008ec:	e6ab      	b.n	8000646 <__aeabi_dadd+0x19e>
 80008ee:	2580      	movs	r5, #128	@ 0x80
 80008f0:	042d      	lsls	r5, r5, #16
 80008f2:	432c      	orrs	r4, r5
 80008f4:	e695      	b.n	8000622 <__aeabi_dadd+0x17a>
 80008f6:	0011      	movs	r1, r2
 80008f8:	4655      	mov	r5, sl
 80008fa:	3920      	subs	r1, #32
 80008fc:	40cd      	lsrs	r5, r1
 80008fe:	46a9      	mov	r9, r5
 8000900:	2a20      	cmp	r2, #32
 8000902:	d006      	beq.n	8000912 <__aeabi_dadd+0x46a>
 8000904:	2140      	movs	r1, #64	@ 0x40
 8000906:	4653      	mov	r3, sl
 8000908:	1a8a      	subs	r2, r1, r2
 800090a:	4093      	lsls	r3, r2
 800090c:	4662      	mov	r2, ip
 800090e:	431a      	orrs	r2, r3
 8000910:	4694      	mov	ip, r2
 8000912:	4665      	mov	r5, ip
 8000914:	1e6b      	subs	r3, r5, #1
 8000916:	419d      	sbcs	r5, r3
 8000918:	464b      	mov	r3, r9
 800091a:	431d      	orrs	r5, r3
 800091c:	e612      	b.n	8000544 <__aeabi_dadd+0x9c>
 800091e:	0021      	movs	r1, r4
 8000920:	4301      	orrs	r1, r0
 8000922:	d100      	bne.n	8000926 <__aeabi_dadd+0x47e>
 8000924:	e0c4      	b.n	8000ab0 <__aeabi_dadd+0x608>
 8000926:	1e51      	subs	r1, r2, #1
 8000928:	2a01      	cmp	r2, #1
 800092a:	d100      	bne.n	800092e <__aeabi_dadd+0x486>
 800092c:	e0fb      	b.n	8000b26 <__aeabi_dadd+0x67e>
 800092e:	4d8d      	ldr	r5, [pc, #564]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000930:	42aa      	cmp	r2, r5
 8000932:	d100      	bne.n	8000936 <__aeabi_dadd+0x48e>
 8000934:	e0b5      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000936:	2501      	movs	r5, #1
 8000938:	2938      	cmp	r1, #56	@ 0x38
 800093a:	dd00      	ble.n	800093e <__aeabi_dadd+0x496>
 800093c:	e741      	b.n	80007c2 <__aeabi_dadd+0x31a>
 800093e:	000a      	movs	r2, r1
 8000940:	e72f      	b.n	80007a2 <__aeabi_dadd+0x2fa>
 8000942:	4c89      	ldr	r4, [pc, #548]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000944:	1aff      	subs	r7, r7, r3
 8000946:	4014      	ands	r4, r2
 8000948:	0762      	lsls	r2, r4, #29
 800094a:	08e4      	lsrs	r4, r4, #3
 800094c:	e76a      	b.n	8000824 <__aeabi_dadd+0x37c>
 800094e:	4a85      	ldr	r2, [pc, #532]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000950:	4291      	cmp	r1, r2
 8000952:	d100      	bne.n	8000956 <__aeabi_dadd+0x4ae>
 8000954:	e0e3      	b.n	8000b1e <__aeabi_dadd+0x676>
 8000956:	4663      	mov	r3, ip
 8000958:	18c2      	adds	r2, r0, r3
 800095a:	4282      	cmp	r2, r0
 800095c:	4180      	sbcs	r0, r0
 800095e:	0023      	movs	r3, r4
 8000960:	4240      	negs	r0, r0
 8000962:	4453      	add	r3, sl
 8000964:	181b      	adds	r3, r3, r0
 8000966:	07dd      	lsls	r5, r3, #31
 8000968:	085c      	lsrs	r4, r3, #1
 800096a:	2307      	movs	r3, #7
 800096c:	0852      	lsrs	r2, r2, #1
 800096e:	4315      	orrs	r5, r2
 8000970:	000f      	movs	r7, r1
 8000972:	402b      	ands	r3, r5
 8000974:	e700      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000976:	4663      	mov	r3, ip
 8000978:	1a1d      	subs	r5, r3, r0
 800097a:	45ac      	cmp	ip, r5
 800097c:	4192      	sbcs	r2, r2
 800097e:	4653      	mov	r3, sl
 8000980:	4252      	negs	r2, r2
 8000982:	1b1c      	subs	r4, r3, r4
 8000984:	000e      	movs	r6, r1
 8000986:	4688      	mov	r8, r1
 8000988:	1aa4      	subs	r4, r4, r2
 800098a:	e5e5      	b.n	8000558 <__aeabi_dadd+0xb0>
 800098c:	2d00      	cmp	r5, #0
 800098e:	d000      	beq.n	8000992 <__aeabi_dadd+0x4ea>
 8000990:	e091      	b.n	8000ab6 <__aeabi_dadd+0x60e>
 8000992:	2a00      	cmp	r2, #0
 8000994:	d138      	bne.n	8000a08 <__aeabi_dadd+0x560>
 8000996:	2480      	movs	r4, #128	@ 0x80
 8000998:	2600      	movs	r6, #0
 800099a:	0324      	lsls	r4, r4, #12
 800099c:	e756      	b.n	800084c <__aeabi_dadd+0x3a4>
 800099e:	4663      	mov	r3, ip
 80009a0:	18c5      	adds	r5, r0, r3
 80009a2:	4285      	cmp	r5, r0
 80009a4:	4180      	sbcs	r0, r0
 80009a6:	4454      	add	r4, sl
 80009a8:	4240      	negs	r0, r0
 80009aa:	1824      	adds	r4, r4, r0
 80009ac:	2701      	movs	r7, #1
 80009ae:	0223      	lsls	r3, r4, #8
 80009b0:	d400      	bmi.n	80009b4 <__aeabi_dadd+0x50c>
 80009b2:	e6df      	b.n	8000774 <__aeabi_dadd+0x2cc>
 80009b4:	2702      	movs	r7, #2
 80009b6:	e687      	b.n	80006c8 <__aeabi_dadd+0x220>
 80009b8:	4663      	mov	r3, ip
 80009ba:	1ac5      	subs	r5, r0, r3
 80009bc:	42a8      	cmp	r0, r5
 80009be:	4180      	sbcs	r0, r0
 80009c0:	4653      	mov	r3, sl
 80009c2:	4240      	negs	r0, r0
 80009c4:	1ae4      	subs	r4, r4, r3
 80009c6:	2701      	movs	r7, #1
 80009c8:	1a24      	subs	r4, r4, r0
 80009ca:	e5c0      	b.n	800054e <__aeabi_dadd+0xa6>
 80009cc:	0762      	lsls	r2, r4, #29
 80009ce:	08c0      	lsrs	r0, r0, #3
 80009d0:	4302      	orrs	r2, r0
 80009d2:	08e4      	lsrs	r4, r4, #3
 80009d4:	e736      	b.n	8000844 <__aeabi_dadd+0x39c>
 80009d6:	0011      	movs	r1, r2
 80009d8:	4653      	mov	r3, sl
 80009da:	3920      	subs	r1, #32
 80009dc:	40cb      	lsrs	r3, r1
 80009de:	4699      	mov	r9, r3
 80009e0:	2a20      	cmp	r2, #32
 80009e2:	d006      	beq.n	80009f2 <__aeabi_dadd+0x54a>
 80009e4:	2140      	movs	r1, #64	@ 0x40
 80009e6:	4653      	mov	r3, sl
 80009e8:	1a8a      	subs	r2, r1, r2
 80009ea:	4093      	lsls	r3, r2
 80009ec:	4662      	mov	r2, ip
 80009ee:	431a      	orrs	r2, r3
 80009f0:	4694      	mov	ip, r2
 80009f2:	4665      	mov	r5, ip
 80009f4:	1e6b      	subs	r3, r5, #1
 80009f6:	419d      	sbcs	r5, r3
 80009f8:	464b      	mov	r3, r9
 80009fa:	431d      	orrs	r5, r3
 80009fc:	e659      	b.n	80006b2 <__aeabi_dadd+0x20a>
 80009fe:	0762      	lsls	r2, r4, #29
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	4302      	orrs	r2, r0
 8000a04:	08e4      	lsrs	r4, r4, #3
 8000a06:	e70d      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a08:	4653      	mov	r3, sl
 8000a0a:	075a      	lsls	r2, r3, #29
 8000a0c:	4663      	mov	r3, ip
 8000a0e:	08d8      	lsrs	r0, r3, #3
 8000a10:	4653      	mov	r3, sl
 8000a12:	000e      	movs	r6, r1
 8000a14:	4302      	orrs	r2, r0
 8000a16:	08dc      	lsrs	r4, r3, #3
 8000a18:	e714      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a1a:	0015      	movs	r5, r2
 8000a1c:	0026      	movs	r6, r4
 8000a1e:	3d20      	subs	r5, #32
 8000a20:	40ee      	lsrs	r6, r5
 8000a22:	2a20      	cmp	r2, #32
 8000a24:	d003      	beq.n	8000a2e <__aeabi_dadd+0x586>
 8000a26:	2540      	movs	r5, #64	@ 0x40
 8000a28:	1aaa      	subs	r2, r5, r2
 8000a2a:	4094      	lsls	r4, r2
 8000a2c:	4320      	orrs	r0, r4
 8000a2e:	1e42      	subs	r2, r0, #1
 8000a30:	4190      	sbcs	r0, r2
 8000a32:	0005      	movs	r5, r0
 8000a34:	4335      	orrs	r5, r6
 8000a36:	e606      	b.n	8000646 <__aeabi_dadd+0x19e>
 8000a38:	2a00      	cmp	r2, #0
 8000a3a:	d07c      	beq.n	8000b36 <__aeabi_dadd+0x68e>
 8000a3c:	4662      	mov	r2, ip
 8000a3e:	4653      	mov	r3, sl
 8000a40:	08c0      	lsrs	r0, r0, #3
 8000a42:	431a      	orrs	r2, r3
 8000a44:	d100      	bne.n	8000a48 <__aeabi_dadd+0x5a0>
 8000a46:	e6fa      	b.n	800083e <__aeabi_dadd+0x396>
 8000a48:	0762      	lsls	r2, r4, #29
 8000a4a:	4310      	orrs	r0, r2
 8000a4c:	2280      	movs	r2, #128	@ 0x80
 8000a4e:	08e4      	lsrs	r4, r4, #3
 8000a50:	0312      	lsls	r2, r2, #12
 8000a52:	4214      	tst	r4, r2
 8000a54:	d008      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a56:	08d9      	lsrs	r1, r3, #3
 8000a58:	4211      	tst	r1, r2
 8000a5a:	d105      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a5c:	4663      	mov	r3, ip
 8000a5e:	08d8      	lsrs	r0, r3, #3
 8000a60:	4653      	mov	r3, sl
 8000a62:	000c      	movs	r4, r1
 8000a64:	075b      	lsls	r3, r3, #29
 8000a66:	4318      	orrs	r0, r3
 8000a68:	0f42      	lsrs	r2, r0, #29
 8000a6a:	00c0      	lsls	r0, r0, #3
 8000a6c:	08c0      	lsrs	r0, r0, #3
 8000a6e:	0752      	lsls	r2, r2, #29
 8000a70:	4302      	orrs	r2, r0
 8000a72:	e6e7      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a74:	2a00      	cmp	r2, #0
 8000a76:	d100      	bne.n	8000a7a <__aeabi_dadd+0x5d2>
 8000a78:	e72d      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000a7a:	4663      	mov	r3, ip
 8000a7c:	08d8      	lsrs	r0, r3, #3
 8000a7e:	4653      	mov	r3, sl
 8000a80:	075a      	lsls	r2, r3, #29
 8000a82:	000e      	movs	r6, r1
 8000a84:	4302      	orrs	r2, r0
 8000a86:	08dc      	lsrs	r4, r3, #3
 8000a88:	e6cc      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a8a:	4663      	mov	r3, ip
 8000a8c:	1a1d      	subs	r5, r3, r0
 8000a8e:	45ac      	cmp	ip, r5
 8000a90:	4192      	sbcs	r2, r2
 8000a92:	4653      	mov	r3, sl
 8000a94:	4252      	negs	r2, r2
 8000a96:	1b1c      	subs	r4, r3, r4
 8000a98:	000e      	movs	r6, r1
 8000a9a:	4688      	mov	r8, r1
 8000a9c:	1aa4      	subs	r4, r4, r2
 8000a9e:	3701      	adds	r7, #1
 8000aa0:	e555      	b.n	800054e <__aeabi_dadd+0xa6>
 8000aa2:	4663      	mov	r3, ip
 8000aa4:	08d9      	lsrs	r1, r3, #3
 8000aa6:	4653      	mov	r3, sl
 8000aa8:	075a      	lsls	r2, r3, #29
 8000aaa:	430a      	orrs	r2, r1
 8000aac:	08dc      	lsrs	r4, r3, #3
 8000aae:	e6c9      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000ab0:	4660      	mov	r0, ip
 8000ab2:	4654      	mov	r4, sl
 8000ab4:	e6d4      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000ab6:	08c0      	lsrs	r0, r0, #3
 8000ab8:	2a00      	cmp	r2, #0
 8000aba:	d100      	bne.n	8000abe <__aeabi_dadd+0x616>
 8000abc:	e6bf      	b.n	800083e <__aeabi_dadd+0x396>
 8000abe:	0762      	lsls	r2, r4, #29
 8000ac0:	4310      	orrs	r0, r2
 8000ac2:	2280      	movs	r2, #128	@ 0x80
 8000ac4:	08e4      	lsrs	r4, r4, #3
 8000ac6:	0312      	lsls	r2, r2, #12
 8000ac8:	4214      	tst	r4, r2
 8000aca:	d0cd      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000acc:	08dd      	lsrs	r5, r3, #3
 8000ace:	4215      	tst	r5, r2
 8000ad0:	d1ca      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	08d8      	lsrs	r0, r3, #3
 8000ad6:	4653      	mov	r3, sl
 8000ad8:	075b      	lsls	r3, r3, #29
 8000ada:	000e      	movs	r6, r1
 8000adc:	002c      	movs	r4, r5
 8000ade:	4318      	orrs	r0, r3
 8000ae0:	e7c2      	b.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	08d9      	lsrs	r1, r3, #3
 8000ae6:	4653      	mov	r3, sl
 8000ae8:	075a      	lsls	r2, r3, #29
 8000aea:	430a      	orrs	r2, r1
 8000aec:	08dc      	lsrs	r4, r3, #3
 8000aee:	e699      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000af0:	4663      	mov	r3, ip
 8000af2:	08d8      	lsrs	r0, r3, #3
 8000af4:	4653      	mov	r3, sl
 8000af6:	075a      	lsls	r2, r3, #29
 8000af8:	000e      	movs	r6, r1
 8000afa:	4302      	orrs	r2, r0
 8000afc:	08dc      	lsrs	r4, r3, #3
 8000afe:	e6a1      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b00:	0011      	movs	r1, r2
 8000b02:	0027      	movs	r7, r4
 8000b04:	3920      	subs	r1, #32
 8000b06:	40cf      	lsrs	r7, r1
 8000b08:	2a20      	cmp	r2, #32
 8000b0a:	d003      	beq.n	8000b14 <__aeabi_dadd+0x66c>
 8000b0c:	2140      	movs	r1, #64	@ 0x40
 8000b0e:	1a8a      	subs	r2, r1, r2
 8000b10:	4094      	lsls	r4, r2
 8000b12:	4320      	orrs	r0, r4
 8000b14:	1e42      	subs	r2, r0, #1
 8000b16:	4190      	sbcs	r0, r2
 8000b18:	0005      	movs	r5, r0
 8000b1a:	433d      	orrs	r5, r7
 8000b1c:	e651      	b.n	80007c2 <__aeabi_dadd+0x31a>
 8000b1e:	000c      	movs	r4, r1
 8000b20:	2500      	movs	r5, #0
 8000b22:	2200      	movs	r2, #0
 8000b24:	e558      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b26:	4460      	add	r0, ip
 8000b28:	4560      	cmp	r0, ip
 8000b2a:	4192      	sbcs	r2, r2
 8000b2c:	4454      	add	r4, sl
 8000b2e:	4252      	negs	r2, r2
 8000b30:	0005      	movs	r5, r0
 8000b32:	18a4      	adds	r4, r4, r2
 8000b34:	e73a      	b.n	80009ac <__aeabi_dadd+0x504>
 8000b36:	4653      	mov	r3, sl
 8000b38:	075a      	lsls	r2, r3, #29
 8000b3a:	4663      	mov	r3, ip
 8000b3c:	08d9      	lsrs	r1, r3, #3
 8000b3e:	4653      	mov	r3, sl
 8000b40:	430a      	orrs	r2, r1
 8000b42:	08dc      	lsrs	r4, r3, #3
 8000b44:	e67e      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b46:	001a      	movs	r2, r3
 8000b48:	001c      	movs	r4, r3
 8000b4a:	432a      	orrs	r2, r5
 8000b4c:	d000      	beq.n	8000b50 <__aeabi_dadd+0x6a8>
 8000b4e:	e6ab      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000b50:	e6c1      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000b52:	2120      	movs	r1, #32
 8000b54:	2500      	movs	r5, #0
 8000b56:	1a09      	subs	r1, r1, r0
 8000b58:	e519      	b.n	800058e <__aeabi_dadd+0xe6>
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	2500      	movs	r5, #0
 8000b5e:	4c01      	ldr	r4, [pc, #4]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000b60:	e53a      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b62:	46c0      	nop			@ (mov r8, r8)
 8000b64:	000007ff 	.word	0x000007ff
 8000b68:	ff7fffff 	.word	0xff7fffff
 8000b6c:	000007fe 	.word	0x000007fe

08000b70 <__aeabi_ddiv>:
 8000b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b72:	46de      	mov	lr, fp
 8000b74:	4645      	mov	r5, r8
 8000b76:	4657      	mov	r7, sl
 8000b78:	464e      	mov	r6, r9
 8000b7a:	b5e0      	push	{r5, r6, r7, lr}
 8000b7c:	b087      	sub	sp, #28
 8000b7e:	9200      	str	r2, [sp, #0]
 8000b80:	9301      	str	r3, [sp, #4]
 8000b82:	030b      	lsls	r3, r1, #12
 8000b84:	0b1b      	lsrs	r3, r3, #12
 8000b86:	469b      	mov	fp, r3
 8000b88:	0fca      	lsrs	r2, r1, #31
 8000b8a:	004b      	lsls	r3, r1, #1
 8000b8c:	0004      	movs	r4, r0
 8000b8e:	4680      	mov	r8, r0
 8000b90:	0d5b      	lsrs	r3, r3, #21
 8000b92:	9202      	str	r2, [sp, #8]
 8000b94:	d100      	bne.n	8000b98 <__aeabi_ddiv+0x28>
 8000b96:	e16a      	b.n	8000e6e <__aeabi_ddiv+0x2fe>
 8000b98:	4ad4      	ldr	r2, [pc, #848]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000b9a:	4293      	cmp	r3, r2
 8000b9c:	d100      	bne.n	8000ba0 <__aeabi_ddiv+0x30>
 8000b9e:	e18c      	b.n	8000eba <__aeabi_ddiv+0x34a>
 8000ba0:	4659      	mov	r1, fp
 8000ba2:	0f42      	lsrs	r2, r0, #29
 8000ba4:	00c9      	lsls	r1, r1, #3
 8000ba6:	430a      	orrs	r2, r1
 8000ba8:	2180      	movs	r1, #128	@ 0x80
 8000baa:	0409      	lsls	r1, r1, #16
 8000bac:	4311      	orrs	r1, r2
 8000bae:	00c2      	lsls	r2, r0, #3
 8000bb0:	4690      	mov	r8, r2
 8000bb2:	4acf      	ldr	r2, [pc, #828]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bb4:	4689      	mov	r9, r1
 8000bb6:	4692      	mov	sl, r2
 8000bb8:	449a      	add	sl, r3
 8000bba:	2300      	movs	r3, #0
 8000bbc:	2400      	movs	r4, #0
 8000bbe:	9303      	str	r3, [sp, #12]
 8000bc0:	9e00      	ldr	r6, [sp, #0]
 8000bc2:	9f01      	ldr	r7, [sp, #4]
 8000bc4:	033b      	lsls	r3, r7, #12
 8000bc6:	0b1b      	lsrs	r3, r3, #12
 8000bc8:	469b      	mov	fp, r3
 8000bca:	007b      	lsls	r3, r7, #1
 8000bcc:	0030      	movs	r0, r6
 8000bce:	0d5b      	lsrs	r3, r3, #21
 8000bd0:	0ffd      	lsrs	r5, r7, #31
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d100      	bne.n	8000bd8 <__aeabi_ddiv+0x68>
 8000bd6:	e128      	b.n	8000e2a <__aeabi_ddiv+0x2ba>
 8000bd8:	4ac4      	ldr	r2, [pc, #784]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_ddiv+0x70>
 8000bde:	e177      	b.n	8000ed0 <__aeabi_ddiv+0x360>
 8000be0:	4659      	mov	r1, fp
 8000be2:	0f72      	lsrs	r2, r6, #29
 8000be4:	00c9      	lsls	r1, r1, #3
 8000be6:	430a      	orrs	r2, r1
 8000be8:	2180      	movs	r1, #128	@ 0x80
 8000bea:	0409      	lsls	r1, r1, #16
 8000bec:	4311      	orrs	r1, r2
 8000bee:	468b      	mov	fp, r1
 8000bf0:	49bf      	ldr	r1, [pc, #764]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bf2:	00f2      	lsls	r2, r6, #3
 8000bf4:	468c      	mov	ip, r1
 8000bf6:	4651      	mov	r1, sl
 8000bf8:	4463      	add	r3, ip
 8000bfa:	1acb      	subs	r3, r1, r3
 8000bfc:	469a      	mov	sl, r3
 8000bfe:	2300      	movs	r3, #0
 8000c00:	9e02      	ldr	r6, [sp, #8]
 8000c02:	406e      	eors	r6, r5
 8000c04:	2c0f      	cmp	r4, #15
 8000c06:	d827      	bhi.n	8000c58 <__aeabi_ddiv+0xe8>
 8000c08:	49ba      	ldr	r1, [pc, #744]	@ (8000ef4 <__aeabi_ddiv+0x384>)
 8000c0a:	00a4      	lsls	r4, r4, #2
 8000c0c:	5909      	ldr	r1, [r1, r4]
 8000c0e:	468f      	mov	pc, r1
 8000c10:	46cb      	mov	fp, r9
 8000c12:	4642      	mov	r2, r8
 8000c14:	9e02      	ldr	r6, [sp, #8]
 8000c16:	9b03      	ldr	r3, [sp, #12]
 8000c18:	2b02      	cmp	r3, #2
 8000c1a:	d016      	beq.n	8000c4a <__aeabi_ddiv+0xda>
 8000c1c:	2b03      	cmp	r3, #3
 8000c1e:	d100      	bne.n	8000c22 <__aeabi_ddiv+0xb2>
 8000c20:	e2a6      	b.n	8001170 <__aeabi_ddiv+0x600>
 8000c22:	2b01      	cmp	r3, #1
 8000c24:	d000      	beq.n	8000c28 <__aeabi_ddiv+0xb8>
 8000c26:	e0df      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000c28:	2200      	movs	r2, #0
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	2400      	movs	r4, #0
 8000c2e:	4690      	mov	r8, r2
 8000c30:	051b      	lsls	r3, r3, #20
 8000c32:	4323      	orrs	r3, r4
 8000c34:	07f6      	lsls	r6, r6, #31
 8000c36:	4333      	orrs	r3, r6
 8000c38:	4640      	mov	r0, r8
 8000c3a:	0019      	movs	r1, r3
 8000c3c:	b007      	add	sp, #28
 8000c3e:	bcf0      	pop	{r4, r5, r6, r7}
 8000c40:	46bb      	mov	fp, r7
 8000c42:	46b2      	mov	sl, r6
 8000c44:	46a9      	mov	r9, r5
 8000c46:	46a0      	mov	r8, r4
 8000c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	2400      	movs	r4, #0
 8000c4e:	4690      	mov	r8, r2
 8000c50:	4ba6      	ldr	r3, [pc, #664]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000c52:	e7ed      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000c54:	002e      	movs	r6, r5
 8000c56:	e7df      	b.n	8000c18 <__aeabi_ddiv+0xa8>
 8000c58:	45cb      	cmp	fp, r9
 8000c5a:	d200      	bcs.n	8000c5e <__aeabi_ddiv+0xee>
 8000c5c:	e1d4      	b.n	8001008 <__aeabi_ddiv+0x498>
 8000c5e:	d100      	bne.n	8000c62 <__aeabi_ddiv+0xf2>
 8000c60:	e1cf      	b.n	8001002 <__aeabi_ddiv+0x492>
 8000c62:	2301      	movs	r3, #1
 8000c64:	425b      	negs	r3, r3
 8000c66:	469c      	mov	ip, r3
 8000c68:	4644      	mov	r4, r8
 8000c6a:	4648      	mov	r0, r9
 8000c6c:	2700      	movs	r7, #0
 8000c6e:	44e2      	add	sl, ip
 8000c70:	465b      	mov	r3, fp
 8000c72:	0e15      	lsrs	r5, r2, #24
 8000c74:	021b      	lsls	r3, r3, #8
 8000c76:	431d      	orrs	r5, r3
 8000c78:	0c19      	lsrs	r1, r3, #16
 8000c7a:	042b      	lsls	r3, r5, #16
 8000c7c:	0212      	lsls	r2, r2, #8
 8000c7e:	9500      	str	r5, [sp, #0]
 8000c80:	0c1d      	lsrs	r5, r3, #16
 8000c82:	4691      	mov	r9, r2
 8000c84:	9102      	str	r1, [sp, #8]
 8000c86:	9503      	str	r5, [sp, #12]
 8000c88:	f7ff fae0 	bl	800024c <__aeabi_uidivmod>
 8000c8c:	0002      	movs	r2, r0
 8000c8e:	436a      	muls	r2, r5
 8000c90:	040b      	lsls	r3, r1, #16
 8000c92:	0c21      	lsrs	r1, r4, #16
 8000c94:	4680      	mov	r8, r0
 8000c96:	4319      	orrs	r1, r3
 8000c98:	428a      	cmp	r2, r1
 8000c9a:	d909      	bls.n	8000cb0 <__aeabi_ddiv+0x140>
 8000c9c:	9d00      	ldr	r5, [sp, #0]
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	46ac      	mov	ip, r5
 8000ca2:	425b      	negs	r3, r3
 8000ca4:	4461      	add	r1, ip
 8000ca6:	469c      	mov	ip, r3
 8000ca8:	44e0      	add	r8, ip
 8000caa:	428d      	cmp	r5, r1
 8000cac:	d800      	bhi.n	8000cb0 <__aeabi_ddiv+0x140>
 8000cae:	e1fb      	b.n	80010a8 <__aeabi_ddiv+0x538>
 8000cb0:	1a88      	subs	r0, r1, r2
 8000cb2:	9902      	ldr	r1, [sp, #8]
 8000cb4:	f7ff faca 	bl	800024c <__aeabi_uidivmod>
 8000cb8:	9a03      	ldr	r2, [sp, #12]
 8000cba:	0424      	lsls	r4, r4, #16
 8000cbc:	4342      	muls	r2, r0
 8000cbe:	0409      	lsls	r1, r1, #16
 8000cc0:	0c24      	lsrs	r4, r4, #16
 8000cc2:	0003      	movs	r3, r0
 8000cc4:	430c      	orrs	r4, r1
 8000cc6:	42a2      	cmp	r2, r4
 8000cc8:	d906      	bls.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cca:	9900      	ldr	r1, [sp, #0]
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	468c      	mov	ip, r1
 8000cd0:	4464      	add	r4, ip
 8000cd2:	42a1      	cmp	r1, r4
 8000cd4:	d800      	bhi.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cd6:	e1e1      	b.n	800109c <__aeabi_ddiv+0x52c>
 8000cd8:	1aa0      	subs	r0, r4, r2
 8000cda:	4642      	mov	r2, r8
 8000cdc:	0412      	lsls	r2, r2, #16
 8000cde:	431a      	orrs	r2, r3
 8000ce0:	4693      	mov	fp, r2
 8000ce2:	464b      	mov	r3, r9
 8000ce4:	4659      	mov	r1, fp
 8000ce6:	0c1b      	lsrs	r3, r3, #16
 8000ce8:	001d      	movs	r5, r3
 8000cea:	9304      	str	r3, [sp, #16]
 8000cec:	040b      	lsls	r3, r1, #16
 8000cee:	4649      	mov	r1, r9
 8000cf0:	0409      	lsls	r1, r1, #16
 8000cf2:	0c09      	lsrs	r1, r1, #16
 8000cf4:	000c      	movs	r4, r1
 8000cf6:	0c1b      	lsrs	r3, r3, #16
 8000cf8:	435c      	muls	r4, r3
 8000cfa:	0c12      	lsrs	r2, r2, #16
 8000cfc:	436b      	muls	r3, r5
 8000cfe:	4688      	mov	r8, r1
 8000d00:	4351      	muls	r1, r2
 8000d02:	436a      	muls	r2, r5
 8000d04:	0c25      	lsrs	r5, r4, #16
 8000d06:	46ac      	mov	ip, r5
 8000d08:	185b      	adds	r3, r3, r1
 8000d0a:	4463      	add	r3, ip
 8000d0c:	4299      	cmp	r1, r3
 8000d0e:	d903      	bls.n	8000d18 <__aeabi_ddiv+0x1a8>
 8000d10:	2180      	movs	r1, #128	@ 0x80
 8000d12:	0249      	lsls	r1, r1, #9
 8000d14:	468c      	mov	ip, r1
 8000d16:	4462      	add	r2, ip
 8000d18:	0c19      	lsrs	r1, r3, #16
 8000d1a:	0424      	lsls	r4, r4, #16
 8000d1c:	041b      	lsls	r3, r3, #16
 8000d1e:	0c24      	lsrs	r4, r4, #16
 8000d20:	188a      	adds	r2, r1, r2
 8000d22:	191c      	adds	r4, r3, r4
 8000d24:	4290      	cmp	r0, r2
 8000d26:	d302      	bcc.n	8000d2e <__aeabi_ddiv+0x1be>
 8000d28:	d116      	bne.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2a:	42a7      	cmp	r7, r4
 8000d2c:	d214      	bcs.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2e:	465b      	mov	r3, fp
 8000d30:	9d00      	ldr	r5, [sp, #0]
 8000d32:	3b01      	subs	r3, #1
 8000d34:	444f      	add	r7, r9
 8000d36:	9305      	str	r3, [sp, #20]
 8000d38:	454f      	cmp	r7, r9
 8000d3a:	419b      	sbcs	r3, r3
 8000d3c:	46ac      	mov	ip, r5
 8000d3e:	425b      	negs	r3, r3
 8000d40:	4463      	add	r3, ip
 8000d42:	18c0      	adds	r0, r0, r3
 8000d44:	4285      	cmp	r5, r0
 8000d46:	d300      	bcc.n	8000d4a <__aeabi_ddiv+0x1da>
 8000d48:	e1a1      	b.n	800108e <__aeabi_ddiv+0x51e>
 8000d4a:	4282      	cmp	r2, r0
 8000d4c:	d900      	bls.n	8000d50 <__aeabi_ddiv+0x1e0>
 8000d4e:	e1f6      	b.n	800113e <__aeabi_ddiv+0x5ce>
 8000d50:	d100      	bne.n	8000d54 <__aeabi_ddiv+0x1e4>
 8000d52:	e1f1      	b.n	8001138 <__aeabi_ddiv+0x5c8>
 8000d54:	9b05      	ldr	r3, [sp, #20]
 8000d56:	469b      	mov	fp, r3
 8000d58:	1b3c      	subs	r4, r7, r4
 8000d5a:	42a7      	cmp	r7, r4
 8000d5c:	41bf      	sbcs	r7, r7
 8000d5e:	9d00      	ldr	r5, [sp, #0]
 8000d60:	1a80      	subs	r0, r0, r2
 8000d62:	427f      	negs	r7, r7
 8000d64:	1bc0      	subs	r0, r0, r7
 8000d66:	4285      	cmp	r5, r0
 8000d68:	d100      	bne.n	8000d6c <__aeabi_ddiv+0x1fc>
 8000d6a:	e1d0      	b.n	800110e <__aeabi_ddiv+0x59e>
 8000d6c:	9902      	ldr	r1, [sp, #8]
 8000d6e:	f7ff fa6d 	bl	800024c <__aeabi_uidivmod>
 8000d72:	9a03      	ldr	r2, [sp, #12]
 8000d74:	040b      	lsls	r3, r1, #16
 8000d76:	4342      	muls	r2, r0
 8000d78:	0c21      	lsrs	r1, r4, #16
 8000d7a:	0007      	movs	r7, r0
 8000d7c:	4319      	orrs	r1, r3
 8000d7e:	428a      	cmp	r2, r1
 8000d80:	d900      	bls.n	8000d84 <__aeabi_ddiv+0x214>
 8000d82:	e178      	b.n	8001076 <__aeabi_ddiv+0x506>
 8000d84:	1a88      	subs	r0, r1, r2
 8000d86:	9902      	ldr	r1, [sp, #8]
 8000d88:	f7ff fa60 	bl	800024c <__aeabi_uidivmod>
 8000d8c:	9a03      	ldr	r2, [sp, #12]
 8000d8e:	0424      	lsls	r4, r4, #16
 8000d90:	4342      	muls	r2, r0
 8000d92:	0409      	lsls	r1, r1, #16
 8000d94:	0c24      	lsrs	r4, r4, #16
 8000d96:	0003      	movs	r3, r0
 8000d98:	430c      	orrs	r4, r1
 8000d9a:	42a2      	cmp	r2, r4
 8000d9c:	d900      	bls.n	8000da0 <__aeabi_ddiv+0x230>
 8000d9e:	e15d      	b.n	800105c <__aeabi_ddiv+0x4ec>
 8000da0:	4641      	mov	r1, r8
 8000da2:	1aa4      	subs	r4, r4, r2
 8000da4:	043a      	lsls	r2, r7, #16
 8000da6:	431a      	orrs	r2, r3
 8000da8:	9d04      	ldr	r5, [sp, #16]
 8000daa:	0413      	lsls	r3, r2, #16
 8000dac:	0c1b      	lsrs	r3, r3, #16
 8000dae:	4359      	muls	r1, r3
 8000db0:	4647      	mov	r7, r8
 8000db2:	436b      	muls	r3, r5
 8000db4:	469c      	mov	ip, r3
 8000db6:	0c10      	lsrs	r0, r2, #16
 8000db8:	4347      	muls	r7, r0
 8000dba:	0c0b      	lsrs	r3, r1, #16
 8000dbc:	44bc      	add	ip, r7
 8000dbe:	4463      	add	r3, ip
 8000dc0:	4368      	muls	r0, r5
 8000dc2:	429f      	cmp	r7, r3
 8000dc4:	d903      	bls.n	8000dce <__aeabi_ddiv+0x25e>
 8000dc6:	2580      	movs	r5, #128	@ 0x80
 8000dc8:	026d      	lsls	r5, r5, #9
 8000dca:	46ac      	mov	ip, r5
 8000dcc:	4460      	add	r0, ip
 8000dce:	0c1f      	lsrs	r7, r3, #16
 8000dd0:	0409      	lsls	r1, r1, #16
 8000dd2:	041b      	lsls	r3, r3, #16
 8000dd4:	0c09      	lsrs	r1, r1, #16
 8000dd6:	183f      	adds	r7, r7, r0
 8000dd8:	185b      	adds	r3, r3, r1
 8000dda:	42bc      	cmp	r4, r7
 8000ddc:	d200      	bcs.n	8000de0 <__aeabi_ddiv+0x270>
 8000dde:	e102      	b.n	8000fe6 <__aeabi_ddiv+0x476>
 8000de0:	d100      	bne.n	8000de4 <__aeabi_ddiv+0x274>
 8000de2:	e0fd      	b.n	8000fe0 <__aeabi_ddiv+0x470>
 8000de4:	2301      	movs	r3, #1
 8000de6:	431a      	orrs	r2, r3
 8000de8:	4b43      	ldr	r3, [pc, #268]	@ (8000ef8 <__aeabi_ddiv+0x388>)
 8000dea:	4453      	add	r3, sl
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	dc00      	bgt.n	8000df2 <__aeabi_ddiv+0x282>
 8000df0:	e0ae      	b.n	8000f50 <__aeabi_ddiv+0x3e0>
 8000df2:	0751      	lsls	r1, r2, #29
 8000df4:	d000      	beq.n	8000df8 <__aeabi_ddiv+0x288>
 8000df6:	e198      	b.n	800112a <__aeabi_ddiv+0x5ba>
 8000df8:	4659      	mov	r1, fp
 8000dfa:	01c9      	lsls	r1, r1, #7
 8000dfc:	d506      	bpl.n	8000e0c <__aeabi_ddiv+0x29c>
 8000dfe:	4659      	mov	r1, fp
 8000e00:	4b3e      	ldr	r3, [pc, #248]	@ (8000efc <__aeabi_ddiv+0x38c>)
 8000e02:	4019      	ands	r1, r3
 8000e04:	2380      	movs	r3, #128	@ 0x80
 8000e06:	468b      	mov	fp, r1
 8000e08:	00db      	lsls	r3, r3, #3
 8000e0a:	4453      	add	r3, sl
 8000e0c:	493c      	ldr	r1, [pc, #240]	@ (8000f00 <__aeabi_ddiv+0x390>)
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	dd00      	ble.n	8000e14 <__aeabi_ddiv+0x2a4>
 8000e12:	e71a      	b.n	8000c4a <__aeabi_ddiv+0xda>
 8000e14:	4659      	mov	r1, fp
 8000e16:	08d2      	lsrs	r2, r2, #3
 8000e18:	0749      	lsls	r1, r1, #29
 8000e1a:	4311      	orrs	r1, r2
 8000e1c:	465a      	mov	r2, fp
 8000e1e:	055b      	lsls	r3, r3, #21
 8000e20:	0254      	lsls	r4, r2, #9
 8000e22:	4688      	mov	r8, r1
 8000e24:	0b24      	lsrs	r4, r4, #12
 8000e26:	0d5b      	lsrs	r3, r3, #21
 8000e28:	e702      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000e2a:	465a      	mov	r2, fp
 8000e2c:	9b00      	ldr	r3, [sp, #0]
 8000e2e:	431a      	orrs	r2, r3
 8000e30:	d100      	bne.n	8000e34 <__aeabi_ddiv+0x2c4>
 8000e32:	e07e      	b.n	8000f32 <__aeabi_ddiv+0x3c2>
 8000e34:	465b      	mov	r3, fp
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	d100      	bne.n	8000e3c <__aeabi_ddiv+0x2cc>
 8000e3a:	e100      	b.n	800103e <__aeabi_ddiv+0x4ce>
 8000e3c:	4658      	mov	r0, fp
 8000e3e:	f001 f9ef 	bl	8002220 <__clzsi2>
 8000e42:	0002      	movs	r2, r0
 8000e44:	0003      	movs	r3, r0
 8000e46:	3a0b      	subs	r2, #11
 8000e48:	271d      	movs	r7, #29
 8000e4a:	9e00      	ldr	r6, [sp, #0]
 8000e4c:	1aba      	subs	r2, r7, r2
 8000e4e:	0019      	movs	r1, r3
 8000e50:	4658      	mov	r0, fp
 8000e52:	40d6      	lsrs	r6, r2
 8000e54:	3908      	subs	r1, #8
 8000e56:	4088      	lsls	r0, r1
 8000e58:	0032      	movs	r2, r6
 8000e5a:	4302      	orrs	r2, r0
 8000e5c:	4693      	mov	fp, r2
 8000e5e:	9a00      	ldr	r2, [sp, #0]
 8000e60:	408a      	lsls	r2, r1
 8000e62:	4928      	ldr	r1, [pc, #160]	@ (8000f04 <__aeabi_ddiv+0x394>)
 8000e64:	4453      	add	r3, sl
 8000e66:	468a      	mov	sl, r1
 8000e68:	449a      	add	sl, r3
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	e6c8      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000e6e:	465b      	mov	r3, fp
 8000e70:	4303      	orrs	r3, r0
 8000e72:	4699      	mov	r9, r3
 8000e74:	d056      	beq.n	8000f24 <__aeabi_ddiv+0x3b4>
 8000e76:	465b      	mov	r3, fp
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d100      	bne.n	8000e7e <__aeabi_ddiv+0x30e>
 8000e7c:	e0cd      	b.n	800101a <__aeabi_ddiv+0x4aa>
 8000e7e:	4658      	mov	r0, fp
 8000e80:	f001 f9ce 	bl	8002220 <__clzsi2>
 8000e84:	230b      	movs	r3, #11
 8000e86:	425b      	negs	r3, r3
 8000e88:	469c      	mov	ip, r3
 8000e8a:	0002      	movs	r2, r0
 8000e8c:	4484      	add	ip, r0
 8000e8e:	4666      	mov	r6, ip
 8000e90:	231d      	movs	r3, #29
 8000e92:	1b9b      	subs	r3, r3, r6
 8000e94:	0026      	movs	r6, r4
 8000e96:	0011      	movs	r1, r2
 8000e98:	4658      	mov	r0, fp
 8000e9a:	40de      	lsrs	r6, r3
 8000e9c:	3908      	subs	r1, #8
 8000e9e:	4088      	lsls	r0, r1
 8000ea0:	0033      	movs	r3, r6
 8000ea2:	4303      	orrs	r3, r0
 8000ea4:	4699      	mov	r9, r3
 8000ea6:	0023      	movs	r3, r4
 8000ea8:	408b      	lsls	r3, r1
 8000eaa:	4698      	mov	r8, r3
 8000eac:	4b16      	ldr	r3, [pc, #88]	@ (8000f08 <__aeabi_ddiv+0x398>)
 8000eae:	2400      	movs	r4, #0
 8000eb0:	1a9b      	subs	r3, r3, r2
 8000eb2:	469a      	mov	sl, r3
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	9303      	str	r3, [sp, #12]
 8000eb8:	e682      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000eba:	465a      	mov	r2, fp
 8000ebc:	4302      	orrs	r2, r0
 8000ebe:	4691      	mov	r9, r2
 8000ec0:	d12a      	bne.n	8000f18 <__aeabi_ddiv+0x3a8>
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	469a      	mov	sl, r3
 8000ec6:	2302      	movs	r3, #2
 8000ec8:	4690      	mov	r8, r2
 8000eca:	2408      	movs	r4, #8
 8000ecc:	9303      	str	r3, [sp, #12]
 8000ece:	e677      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000ed0:	465a      	mov	r2, fp
 8000ed2:	9b00      	ldr	r3, [sp, #0]
 8000ed4:	431a      	orrs	r2, r3
 8000ed6:	4b0d      	ldr	r3, [pc, #52]	@ (8000f0c <__aeabi_ddiv+0x39c>)
 8000ed8:	469c      	mov	ip, r3
 8000eda:	44e2      	add	sl, ip
 8000edc:	2a00      	cmp	r2, #0
 8000ede:	d117      	bne.n	8000f10 <__aeabi_ddiv+0x3a0>
 8000ee0:	2302      	movs	r3, #2
 8000ee2:	431c      	orrs	r4, r3
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	469b      	mov	fp, r3
 8000ee8:	3302      	adds	r3, #2
 8000eea:	e689      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000eec:	000007ff 	.word	0x000007ff
 8000ef0:	fffffc01 	.word	0xfffffc01
 8000ef4:	08005fd0 	.word	0x08005fd0
 8000ef8:	000003ff 	.word	0x000003ff
 8000efc:	feffffff 	.word	0xfeffffff
 8000f00:	000007fe 	.word	0x000007fe
 8000f04:	000003f3 	.word	0x000003f3
 8000f08:	fffffc0d 	.word	0xfffffc0d
 8000f0c:	fffff801 	.word	0xfffff801
 8000f10:	2303      	movs	r3, #3
 8000f12:	0032      	movs	r2, r6
 8000f14:	431c      	orrs	r4, r3
 8000f16:	e673      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f18:	469a      	mov	sl, r3
 8000f1a:	2303      	movs	r3, #3
 8000f1c:	46d9      	mov	r9, fp
 8000f1e:	240c      	movs	r4, #12
 8000f20:	9303      	str	r3, [sp, #12]
 8000f22:	e64d      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f24:	2300      	movs	r3, #0
 8000f26:	4698      	mov	r8, r3
 8000f28:	469a      	mov	sl, r3
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	2404      	movs	r4, #4
 8000f2e:	9303      	str	r3, [sp, #12]
 8000f30:	e646      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f32:	2301      	movs	r3, #1
 8000f34:	431c      	orrs	r4, r3
 8000f36:	2300      	movs	r3, #0
 8000f38:	469b      	mov	fp, r3
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	e660      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	2480      	movs	r4, #128	@ 0x80
 8000f42:	4698      	mov	r8, r3
 8000f44:	2600      	movs	r6, #0
 8000f46:	4b92      	ldr	r3, [pc, #584]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000f48:	0324      	lsls	r4, r4, #12
 8000f4a:	e671      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000f4c:	2201      	movs	r2, #1
 8000f4e:	4252      	negs	r2, r2
 8000f50:	2101      	movs	r1, #1
 8000f52:	1ac9      	subs	r1, r1, r3
 8000f54:	2938      	cmp	r1, #56	@ 0x38
 8000f56:	dd00      	ble.n	8000f5a <__aeabi_ddiv+0x3ea>
 8000f58:	e666      	b.n	8000c28 <__aeabi_ddiv+0xb8>
 8000f5a:	291f      	cmp	r1, #31
 8000f5c:	dc00      	bgt.n	8000f60 <__aeabi_ddiv+0x3f0>
 8000f5e:	e0ab      	b.n	80010b8 <__aeabi_ddiv+0x548>
 8000f60:	201f      	movs	r0, #31
 8000f62:	4240      	negs	r0, r0
 8000f64:	1ac3      	subs	r3, r0, r3
 8000f66:	4658      	mov	r0, fp
 8000f68:	40d8      	lsrs	r0, r3
 8000f6a:	0003      	movs	r3, r0
 8000f6c:	2920      	cmp	r1, #32
 8000f6e:	d004      	beq.n	8000f7a <__aeabi_ddiv+0x40a>
 8000f70:	4658      	mov	r0, fp
 8000f72:	4988      	ldr	r1, [pc, #544]	@ (8001194 <__aeabi_ddiv+0x624>)
 8000f74:	4451      	add	r1, sl
 8000f76:	4088      	lsls	r0, r1
 8000f78:	4302      	orrs	r2, r0
 8000f7a:	1e51      	subs	r1, r2, #1
 8000f7c:	418a      	sbcs	r2, r1
 8000f7e:	431a      	orrs	r2, r3
 8000f80:	2307      	movs	r3, #7
 8000f82:	0019      	movs	r1, r3
 8000f84:	2400      	movs	r4, #0
 8000f86:	4011      	ands	r1, r2
 8000f88:	4213      	tst	r3, r2
 8000f8a:	d00c      	beq.n	8000fa6 <__aeabi_ddiv+0x436>
 8000f8c:	230f      	movs	r3, #15
 8000f8e:	4013      	ands	r3, r2
 8000f90:	2b04      	cmp	r3, #4
 8000f92:	d100      	bne.n	8000f96 <__aeabi_ddiv+0x426>
 8000f94:	e0f9      	b.n	800118a <__aeabi_ddiv+0x61a>
 8000f96:	1d11      	adds	r1, r2, #4
 8000f98:	4291      	cmp	r1, r2
 8000f9a:	419b      	sbcs	r3, r3
 8000f9c:	000a      	movs	r2, r1
 8000f9e:	425b      	negs	r3, r3
 8000fa0:	0759      	lsls	r1, r3, #29
 8000fa2:	025b      	lsls	r3, r3, #9
 8000fa4:	0b1c      	lsrs	r4, r3, #12
 8000fa6:	08d2      	lsrs	r2, r2, #3
 8000fa8:	430a      	orrs	r2, r1
 8000faa:	4690      	mov	r8, r2
 8000fac:	2300      	movs	r3, #0
 8000fae:	e63f      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fb0:	2480      	movs	r4, #128	@ 0x80
 8000fb2:	464b      	mov	r3, r9
 8000fb4:	0324      	lsls	r4, r4, #12
 8000fb6:	4223      	tst	r3, r4
 8000fb8:	d009      	beq.n	8000fce <__aeabi_ddiv+0x45e>
 8000fba:	465b      	mov	r3, fp
 8000fbc:	4223      	tst	r3, r4
 8000fbe:	d106      	bne.n	8000fce <__aeabi_ddiv+0x45e>
 8000fc0:	431c      	orrs	r4, r3
 8000fc2:	0324      	lsls	r4, r4, #12
 8000fc4:	002e      	movs	r6, r5
 8000fc6:	4690      	mov	r8, r2
 8000fc8:	4b71      	ldr	r3, [pc, #452]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fca:	0b24      	lsrs	r4, r4, #12
 8000fcc:	e630      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fce:	2480      	movs	r4, #128	@ 0x80
 8000fd0:	464b      	mov	r3, r9
 8000fd2:	0324      	lsls	r4, r4, #12
 8000fd4:	431c      	orrs	r4, r3
 8000fd6:	0324      	lsls	r4, r4, #12
 8000fd8:	9e02      	ldr	r6, [sp, #8]
 8000fda:	4b6d      	ldr	r3, [pc, #436]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fdc:	0b24      	lsrs	r4, r4, #12
 8000fde:	e627      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d100      	bne.n	8000fe6 <__aeabi_ddiv+0x476>
 8000fe4:	e700      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000fe6:	9800      	ldr	r0, [sp, #0]
 8000fe8:	1e51      	subs	r1, r2, #1
 8000fea:	4684      	mov	ip, r0
 8000fec:	4464      	add	r4, ip
 8000fee:	4284      	cmp	r4, r0
 8000ff0:	d200      	bcs.n	8000ff4 <__aeabi_ddiv+0x484>
 8000ff2:	e084      	b.n	80010fe <__aeabi_ddiv+0x58e>
 8000ff4:	42bc      	cmp	r4, r7
 8000ff6:	d200      	bcs.n	8000ffa <__aeabi_ddiv+0x48a>
 8000ff8:	e0ae      	b.n	8001158 <__aeabi_ddiv+0x5e8>
 8000ffa:	d100      	bne.n	8000ffe <__aeabi_ddiv+0x48e>
 8000ffc:	e0c1      	b.n	8001182 <__aeabi_ddiv+0x612>
 8000ffe:	000a      	movs	r2, r1
 8001000:	e6f0      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001002:	4542      	cmp	r2, r8
 8001004:	d900      	bls.n	8001008 <__aeabi_ddiv+0x498>
 8001006:	e62c      	b.n	8000c62 <__aeabi_ddiv+0xf2>
 8001008:	464b      	mov	r3, r9
 800100a:	07dc      	lsls	r4, r3, #31
 800100c:	0858      	lsrs	r0, r3, #1
 800100e:	4643      	mov	r3, r8
 8001010:	085b      	lsrs	r3, r3, #1
 8001012:	431c      	orrs	r4, r3
 8001014:	4643      	mov	r3, r8
 8001016:	07df      	lsls	r7, r3, #31
 8001018:	e62a      	b.n	8000c70 <__aeabi_ddiv+0x100>
 800101a:	f001 f901 	bl	8002220 <__clzsi2>
 800101e:	2315      	movs	r3, #21
 8001020:	469c      	mov	ip, r3
 8001022:	4484      	add	ip, r0
 8001024:	0002      	movs	r2, r0
 8001026:	4663      	mov	r3, ip
 8001028:	3220      	adds	r2, #32
 800102a:	2b1c      	cmp	r3, #28
 800102c:	dc00      	bgt.n	8001030 <__aeabi_ddiv+0x4c0>
 800102e:	e72e      	b.n	8000e8e <__aeabi_ddiv+0x31e>
 8001030:	0023      	movs	r3, r4
 8001032:	3808      	subs	r0, #8
 8001034:	4083      	lsls	r3, r0
 8001036:	4699      	mov	r9, r3
 8001038:	2300      	movs	r3, #0
 800103a:	4698      	mov	r8, r3
 800103c:	e736      	b.n	8000eac <__aeabi_ddiv+0x33c>
 800103e:	f001 f8ef 	bl	8002220 <__clzsi2>
 8001042:	0002      	movs	r2, r0
 8001044:	0003      	movs	r3, r0
 8001046:	3215      	adds	r2, #21
 8001048:	3320      	adds	r3, #32
 800104a:	2a1c      	cmp	r2, #28
 800104c:	dc00      	bgt.n	8001050 <__aeabi_ddiv+0x4e0>
 800104e:	e6fb      	b.n	8000e48 <__aeabi_ddiv+0x2d8>
 8001050:	9900      	ldr	r1, [sp, #0]
 8001052:	3808      	subs	r0, #8
 8001054:	4081      	lsls	r1, r0
 8001056:	2200      	movs	r2, #0
 8001058:	468b      	mov	fp, r1
 800105a:	e702      	b.n	8000e62 <__aeabi_ddiv+0x2f2>
 800105c:	9900      	ldr	r1, [sp, #0]
 800105e:	3b01      	subs	r3, #1
 8001060:	468c      	mov	ip, r1
 8001062:	4464      	add	r4, ip
 8001064:	42a1      	cmp	r1, r4
 8001066:	d900      	bls.n	800106a <__aeabi_ddiv+0x4fa>
 8001068:	e69a      	b.n	8000da0 <__aeabi_ddiv+0x230>
 800106a:	42a2      	cmp	r2, r4
 800106c:	d800      	bhi.n	8001070 <__aeabi_ddiv+0x500>
 800106e:	e697      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001070:	1e83      	subs	r3, r0, #2
 8001072:	4464      	add	r4, ip
 8001074:	e694      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001076:	46ac      	mov	ip, r5
 8001078:	4461      	add	r1, ip
 800107a:	3f01      	subs	r7, #1
 800107c:	428d      	cmp	r5, r1
 800107e:	d900      	bls.n	8001082 <__aeabi_ddiv+0x512>
 8001080:	e680      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001082:	428a      	cmp	r2, r1
 8001084:	d800      	bhi.n	8001088 <__aeabi_ddiv+0x518>
 8001086:	e67d      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001088:	1e87      	subs	r7, r0, #2
 800108a:	4461      	add	r1, ip
 800108c:	e67a      	b.n	8000d84 <__aeabi_ddiv+0x214>
 800108e:	4285      	cmp	r5, r0
 8001090:	d000      	beq.n	8001094 <__aeabi_ddiv+0x524>
 8001092:	e65f      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 8001094:	45b9      	cmp	r9, r7
 8001096:	d900      	bls.n	800109a <__aeabi_ddiv+0x52a>
 8001098:	e65c      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800109a:	e656      	b.n	8000d4a <__aeabi_ddiv+0x1da>
 800109c:	42a2      	cmp	r2, r4
 800109e:	d800      	bhi.n	80010a2 <__aeabi_ddiv+0x532>
 80010a0:	e61a      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a2:	1e83      	subs	r3, r0, #2
 80010a4:	4464      	add	r4, ip
 80010a6:	e617      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a8:	428a      	cmp	r2, r1
 80010aa:	d800      	bhi.n	80010ae <__aeabi_ddiv+0x53e>
 80010ac:	e600      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010ae:	46ac      	mov	ip, r5
 80010b0:	1e83      	subs	r3, r0, #2
 80010b2:	4698      	mov	r8, r3
 80010b4:	4461      	add	r1, ip
 80010b6:	e5fb      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010b8:	4837      	ldr	r0, [pc, #220]	@ (8001198 <__aeabi_ddiv+0x628>)
 80010ba:	0014      	movs	r4, r2
 80010bc:	4450      	add	r0, sl
 80010be:	4082      	lsls	r2, r0
 80010c0:	465b      	mov	r3, fp
 80010c2:	0017      	movs	r7, r2
 80010c4:	4083      	lsls	r3, r0
 80010c6:	40cc      	lsrs	r4, r1
 80010c8:	1e7a      	subs	r2, r7, #1
 80010ca:	4197      	sbcs	r7, r2
 80010cc:	4323      	orrs	r3, r4
 80010ce:	433b      	orrs	r3, r7
 80010d0:	001a      	movs	r2, r3
 80010d2:	465b      	mov	r3, fp
 80010d4:	40cb      	lsrs	r3, r1
 80010d6:	0751      	lsls	r1, r2, #29
 80010d8:	d009      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010da:	210f      	movs	r1, #15
 80010dc:	4011      	ands	r1, r2
 80010de:	2904      	cmp	r1, #4
 80010e0:	d005      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010e2:	1d11      	adds	r1, r2, #4
 80010e4:	4291      	cmp	r1, r2
 80010e6:	4192      	sbcs	r2, r2
 80010e8:	4252      	negs	r2, r2
 80010ea:	189b      	adds	r3, r3, r2
 80010ec:	000a      	movs	r2, r1
 80010ee:	0219      	lsls	r1, r3, #8
 80010f0:	d400      	bmi.n	80010f4 <__aeabi_ddiv+0x584>
 80010f2:	e755      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 80010f4:	2200      	movs	r2, #0
 80010f6:	2301      	movs	r3, #1
 80010f8:	2400      	movs	r4, #0
 80010fa:	4690      	mov	r8, r2
 80010fc:	e598      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 80010fe:	000a      	movs	r2, r1
 8001100:	42bc      	cmp	r4, r7
 8001102:	d000      	beq.n	8001106 <__aeabi_ddiv+0x596>
 8001104:	e66e      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001106:	454b      	cmp	r3, r9
 8001108:	d000      	beq.n	800110c <__aeabi_ddiv+0x59c>
 800110a:	e66b      	b.n	8000de4 <__aeabi_ddiv+0x274>
 800110c:	e66c      	b.n	8000de8 <__aeabi_ddiv+0x278>
 800110e:	4b23      	ldr	r3, [pc, #140]	@ (800119c <__aeabi_ddiv+0x62c>)
 8001110:	4a23      	ldr	r2, [pc, #140]	@ (80011a0 <__aeabi_ddiv+0x630>)
 8001112:	4453      	add	r3, sl
 8001114:	4592      	cmp	sl, r2
 8001116:	da00      	bge.n	800111a <__aeabi_ddiv+0x5aa>
 8001118:	e718      	b.n	8000f4c <__aeabi_ddiv+0x3dc>
 800111a:	2101      	movs	r1, #1
 800111c:	4249      	negs	r1, r1
 800111e:	1d0a      	adds	r2, r1, #4
 8001120:	428a      	cmp	r2, r1
 8001122:	4189      	sbcs	r1, r1
 8001124:	4249      	negs	r1, r1
 8001126:	448b      	add	fp, r1
 8001128:	e666      	b.n	8000df8 <__aeabi_ddiv+0x288>
 800112a:	210f      	movs	r1, #15
 800112c:	4011      	ands	r1, r2
 800112e:	2904      	cmp	r1, #4
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x5c4>
 8001132:	e661      	b.n	8000df8 <__aeabi_ddiv+0x288>
 8001134:	0011      	movs	r1, r2
 8001136:	e7f2      	b.n	800111e <__aeabi_ddiv+0x5ae>
 8001138:	42bc      	cmp	r4, r7
 800113a:	d800      	bhi.n	800113e <__aeabi_ddiv+0x5ce>
 800113c:	e60a      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800113e:	2302      	movs	r3, #2
 8001140:	425b      	negs	r3, r3
 8001142:	469c      	mov	ip, r3
 8001144:	9900      	ldr	r1, [sp, #0]
 8001146:	444f      	add	r7, r9
 8001148:	454f      	cmp	r7, r9
 800114a:	419b      	sbcs	r3, r3
 800114c:	44e3      	add	fp, ip
 800114e:	468c      	mov	ip, r1
 8001150:	425b      	negs	r3, r3
 8001152:	4463      	add	r3, ip
 8001154:	18c0      	adds	r0, r0, r3
 8001156:	e5ff      	b.n	8000d58 <__aeabi_ddiv+0x1e8>
 8001158:	4649      	mov	r1, r9
 800115a:	9d00      	ldr	r5, [sp, #0]
 800115c:	0048      	lsls	r0, r1, #1
 800115e:	4548      	cmp	r0, r9
 8001160:	4189      	sbcs	r1, r1
 8001162:	46ac      	mov	ip, r5
 8001164:	4249      	negs	r1, r1
 8001166:	4461      	add	r1, ip
 8001168:	4681      	mov	r9, r0
 800116a:	3a02      	subs	r2, #2
 800116c:	1864      	adds	r4, r4, r1
 800116e:	e7c7      	b.n	8001100 <__aeabi_ddiv+0x590>
 8001170:	2480      	movs	r4, #128	@ 0x80
 8001172:	465b      	mov	r3, fp
 8001174:	0324      	lsls	r4, r4, #12
 8001176:	431c      	orrs	r4, r3
 8001178:	0324      	lsls	r4, r4, #12
 800117a:	4690      	mov	r8, r2
 800117c:	4b04      	ldr	r3, [pc, #16]	@ (8001190 <__aeabi_ddiv+0x620>)
 800117e:	0b24      	lsrs	r4, r4, #12
 8001180:	e556      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8001182:	4599      	cmp	r9, r3
 8001184:	d3e8      	bcc.n	8001158 <__aeabi_ddiv+0x5e8>
 8001186:	000a      	movs	r2, r1
 8001188:	e7bd      	b.n	8001106 <__aeabi_ddiv+0x596>
 800118a:	2300      	movs	r3, #0
 800118c:	e708      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 800118e:	46c0      	nop			@ (mov r8, r8)
 8001190:	000007ff 	.word	0x000007ff
 8001194:	0000043e 	.word	0x0000043e
 8001198:	0000041e 	.word	0x0000041e
 800119c:	000003ff 	.word	0x000003ff
 80011a0:	fffffc02 	.word	0xfffffc02

080011a4 <__eqdf2>:
 80011a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011a6:	4657      	mov	r7, sl
 80011a8:	46de      	mov	lr, fp
 80011aa:	464e      	mov	r6, r9
 80011ac:	4645      	mov	r5, r8
 80011ae:	b5e0      	push	{r5, r6, r7, lr}
 80011b0:	000d      	movs	r5, r1
 80011b2:	0004      	movs	r4, r0
 80011b4:	0fe8      	lsrs	r0, r5, #31
 80011b6:	4683      	mov	fp, r0
 80011b8:	0309      	lsls	r1, r1, #12
 80011ba:	0fd8      	lsrs	r0, r3, #31
 80011bc:	0b09      	lsrs	r1, r1, #12
 80011be:	4682      	mov	sl, r0
 80011c0:	4819      	ldr	r0, [pc, #100]	@ (8001228 <__eqdf2+0x84>)
 80011c2:	468c      	mov	ip, r1
 80011c4:	031f      	lsls	r7, r3, #12
 80011c6:	0069      	lsls	r1, r5, #1
 80011c8:	005e      	lsls	r6, r3, #1
 80011ca:	0d49      	lsrs	r1, r1, #21
 80011cc:	0b3f      	lsrs	r7, r7, #12
 80011ce:	0d76      	lsrs	r6, r6, #21
 80011d0:	4281      	cmp	r1, r0
 80011d2:	d018      	beq.n	8001206 <__eqdf2+0x62>
 80011d4:	4286      	cmp	r6, r0
 80011d6:	d00f      	beq.n	80011f8 <__eqdf2+0x54>
 80011d8:	2001      	movs	r0, #1
 80011da:	42b1      	cmp	r1, r6
 80011dc:	d10d      	bne.n	80011fa <__eqdf2+0x56>
 80011de:	45bc      	cmp	ip, r7
 80011e0:	d10b      	bne.n	80011fa <__eqdf2+0x56>
 80011e2:	4294      	cmp	r4, r2
 80011e4:	d109      	bne.n	80011fa <__eqdf2+0x56>
 80011e6:	45d3      	cmp	fp, sl
 80011e8:	d01c      	beq.n	8001224 <__eqdf2+0x80>
 80011ea:	2900      	cmp	r1, #0
 80011ec:	d105      	bne.n	80011fa <__eqdf2+0x56>
 80011ee:	4660      	mov	r0, ip
 80011f0:	4320      	orrs	r0, r4
 80011f2:	1e43      	subs	r3, r0, #1
 80011f4:	4198      	sbcs	r0, r3
 80011f6:	e000      	b.n	80011fa <__eqdf2+0x56>
 80011f8:	2001      	movs	r0, #1
 80011fa:	bcf0      	pop	{r4, r5, r6, r7}
 80011fc:	46bb      	mov	fp, r7
 80011fe:	46b2      	mov	sl, r6
 8001200:	46a9      	mov	r9, r5
 8001202:	46a0      	mov	r8, r4
 8001204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001206:	2001      	movs	r0, #1
 8001208:	428e      	cmp	r6, r1
 800120a:	d1f6      	bne.n	80011fa <__eqdf2+0x56>
 800120c:	4661      	mov	r1, ip
 800120e:	4339      	orrs	r1, r7
 8001210:	000f      	movs	r7, r1
 8001212:	4317      	orrs	r7, r2
 8001214:	4327      	orrs	r7, r4
 8001216:	d1f0      	bne.n	80011fa <__eqdf2+0x56>
 8001218:	465b      	mov	r3, fp
 800121a:	4652      	mov	r2, sl
 800121c:	1a98      	subs	r0, r3, r2
 800121e:	1e43      	subs	r3, r0, #1
 8001220:	4198      	sbcs	r0, r3
 8001222:	e7ea      	b.n	80011fa <__eqdf2+0x56>
 8001224:	2000      	movs	r0, #0
 8001226:	e7e8      	b.n	80011fa <__eqdf2+0x56>
 8001228:	000007ff 	.word	0x000007ff

0800122c <__gedf2>:
 800122c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800122e:	4657      	mov	r7, sl
 8001230:	464e      	mov	r6, r9
 8001232:	4645      	mov	r5, r8
 8001234:	46de      	mov	lr, fp
 8001236:	b5e0      	push	{r5, r6, r7, lr}
 8001238:	000d      	movs	r5, r1
 800123a:	030f      	lsls	r7, r1, #12
 800123c:	0b39      	lsrs	r1, r7, #12
 800123e:	b083      	sub	sp, #12
 8001240:	0004      	movs	r4, r0
 8001242:	4680      	mov	r8, r0
 8001244:	9101      	str	r1, [sp, #4]
 8001246:	0058      	lsls	r0, r3, #1
 8001248:	0fe9      	lsrs	r1, r5, #31
 800124a:	4f31      	ldr	r7, [pc, #196]	@ (8001310 <__gedf2+0xe4>)
 800124c:	0d40      	lsrs	r0, r0, #21
 800124e:	468c      	mov	ip, r1
 8001250:	006e      	lsls	r6, r5, #1
 8001252:	0319      	lsls	r1, r3, #12
 8001254:	4682      	mov	sl, r0
 8001256:	4691      	mov	r9, r2
 8001258:	0d76      	lsrs	r6, r6, #21
 800125a:	0b09      	lsrs	r1, r1, #12
 800125c:	0fd8      	lsrs	r0, r3, #31
 800125e:	42be      	cmp	r6, r7
 8001260:	d01f      	beq.n	80012a2 <__gedf2+0x76>
 8001262:	45ba      	cmp	sl, r7
 8001264:	d00f      	beq.n	8001286 <__gedf2+0x5a>
 8001266:	2e00      	cmp	r6, #0
 8001268:	d12f      	bne.n	80012ca <__gedf2+0x9e>
 800126a:	4655      	mov	r5, sl
 800126c:	9e01      	ldr	r6, [sp, #4]
 800126e:	4334      	orrs	r4, r6
 8001270:	2d00      	cmp	r5, #0
 8001272:	d127      	bne.n	80012c4 <__gedf2+0x98>
 8001274:	430a      	orrs	r2, r1
 8001276:	d03a      	beq.n	80012ee <__gedf2+0xc2>
 8001278:	2c00      	cmp	r4, #0
 800127a:	d145      	bne.n	8001308 <__gedf2+0xdc>
 800127c:	2800      	cmp	r0, #0
 800127e:	d11a      	bne.n	80012b6 <__gedf2+0x8a>
 8001280:	2001      	movs	r0, #1
 8001282:	4240      	negs	r0, r0
 8001284:	e017      	b.n	80012b6 <__gedf2+0x8a>
 8001286:	4311      	orrs	r1, r2
 8001288:	d13b      	bne.n	8001302 <__gedf2+0xd6>
 800128a:	2e00      	cmp	r6, #0
 800128c:	d102      	bne.n	8001294 <__gedf2+0x68>
 800128e:	9f01      	ldr	r7, [sp, #4]
 8001290:	4327      	orrs	r7, r4
 8001292:	d0f3      	beq.n	800127c <__gedf2+0x50>
 8001294:	4584      	cmp	ip, r0
 8001296:	d109      	bne.n	80012ac <__gedf2+0x80>
 8001298:	4663      	mov	r3, ip
 800129a:	2b00      	cmp	r3, #0
 800129c:	d0f0      	beq.n	8001280 <__gedf2+0x54>
 800129e:	4660      	mov	r0, ip
 80012a0:	e009      	b.n	80012b6 <__gedf2+0x8a>
 80012a2:	9f01      	ldr	r7, [sp, #4]
 80012a4:	4327      	orrs	r7, r4
 80012a6:	d12c      	bne.n	8001302 <__gedf2+0xd6>
 80012a8:	45b2      	cmp	sl, r6
 80012aa:	d024      	beq.n	80012f6 <__gedf2+0xca>
 80012ac:	4663      	mov	r3, ip
 80012ae:	2002      	movs	r0, #2
 80012b0:	3b01      	subs	r3, #1
 80012b2:	4018      	ands	r0, r3
 80012b4:	3801      	subs	r0, #1
 80012b6:	b003      	add	sp, #12
 80012b8:	bcf0      	pop	{r4, r5, r6, r7}
 80012ba:	46bb      	mov	fp, r7
 80012bc:	46b2      	mov	sl, r6
 80012be:	46a9      	mov	r9, r5
 80012c0:	46a0      	mov	r8, r4
 80012c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012c4:	2c00      	cmp	r4, #0
 80012c6:	d0d9      	beq.n	800127c <__gedf2+0x50>
 80012c8:	e7e4      	b.n	8001294 <__gedf2+0x68>
 80012ca:	4654      	mov	r4, sl
 80012cc:	2c00      	cmp	r4, #0
 80012ce:	d0ed      	beq.n	80012ac <__gedf2+0x80>
 80012d0:	4584      	cmp	ip, r0
 80012d2:	d1eb      	bne.n	80012ac <__gedf2+0x80>
 80012d4:	4556      	cmp	r6, sl
 80012d6:	dce9      	bgt.n	80012ac <__gedf2+0x80>
 80012d8:	dbde      	blt.n	8001298 <__gedf2+0x6c>
 80012da:	9b01      	ldr	r3, [sp, #4]
 80012dc:	428b      	cmp	r3, r1
 80012de:	d8e5      	bhi.n	80012ac <__gedf2+0x80>
 80012e0:	d1da      	bne.n	8001298 <__gedf2+0x6c>
 80012e2:	45c8      	cmp	r8, r9
 80012e4:	d8e2      	bhi.n	80012ac <__gedf2+0x80>
 80012e6:	2000      	movs	r0, #0
 80012e8:	45c8      	cmp	r8, r9
 80012ea:	d2e4      	bcs.n	80012b6 <__gedf2+0x8a>
 80012ec:	e7d4      	b.n	8001298 <__gedf2+0x6c>
 80012ee:	2000      	movs	r0, #0
 80012f0:	2c00      	cmp	r4, #0
 80012f2:	d0e0      	beq.n	80012b6 <__gedf2+0x8a>
 80012f4:	e7da      	b.n	80012ac <__gedf2+0x80>
 80012f6:	4311      	orrs	r1, r2
 80012f8:	d103      	bne.n	8001302 <__gedf2+0xd6>
 80012fa:	4584      	cmp	ip, r0
 80012fc:	d1d6      	bne.n	80012ac <__gedf2+0x80>
 80012fe:	2000      	movs	r0, #0
 8001300:	e7d9      	b.n	80012b6 <__gedf2+0x8a>
 8001302:	2002      	movs	r0, #2
 8001304:	4240      	negs	r0, r0
 8001306:	e7d6      	b.n	80012b6 <__gedf2+0x8a>
 8001308:	4584      	cmp	ip, r0
 800130a:	d0e6      	beq.n	80012da <__gedf2+0xae>
 800130c:	e7ce      	b.n	80012ac <__gedf2+0x80>
 800130e:	46c0      	nop			@ (mov r8, r8)
 8001310:	000007ff 	.word	0x000007ff

08001314 <__ledf2>:
 8001314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001316:	4657      	mov	r7, sl
 8001318:	464e      	mov	r6, r9
 800131a:	4645      	mov	r5, r8
 800131c:	46de      	mov	lr, fp
 800131e:	b5e0      	push	{r5, r6, r7, lr}
 8001320:	000d      	movs	r5, r1
 8001322:	030f      	lsls	r7, r1, #12
 8001324:	0004      	movs	r4, r0
 8001326:	4680      	mov	r8, r0
 8001328:	0fe8      	lsrs	r0, r5, #31
 800132a:	0b39      	lsrs	r1, r7, #12
 800132c:	4684      	mov	ip, r0
 800132e:	b083      	sub	sp, #12
 8001330:	0058      	lsls	r0, r3, #1
 8001332:	4f30      	ldr	r7, [pc, #192]	@ (80013f4 <__ledf2+0xe0>)
 8001334:	0d40      	lsrs	r0, r0, #21
 8001336:	9101      	str	r1, [sp, #4]
 8001338:	031e      	lsls	r6, r3, #12
 800133a:	0069      	lsls	r1, r5, #1
 800133c:	4682      	mov	sl, r0
 800133e:	4691      	mov	r9, r2
 8001340:	0d49      	lsrs	r1, r1, #21
 8001342:	0b36      	lsrs	r6, r6, #12
 8001344:	0fd8      	lsrs	r0, r3, #31
 8001346:	42b9      	cmp	r1, r7
 8001348:	d020      	beq.n	800138c <__ledf2+0x78>
 800134a:	45ba      	cmp	sl, r7
 800134c:	d00f      	beq.n	800136e <__ledf2+0x5a>
 800134e:	2900      	cmp	r1, #0
 8001350:	d12b      	bne.n	80013aa <__ledf2+0x96>
 8001352:	9901      	ldr	r1, [sp, #4]
 8001354:	430c      	orrs	r4, r1
 8001356:	4651      	mov	r1, sl
 8001358:	2900      	cmp	r1, #0
 800135a:	d137      	bne.n	80013cc <__ledf2+0xb8>
 800135c:	4332      	orrs	r2, r6
 800135e:	d038      	beq.n	80013d2 <__ledf2+0xbe>
 8001360:	2c00      	cmp	r4, #0
 8001362:	d144      	bne.n	80013ee <__ledf2+0xda>
 8001364:	2800      	cmp	r0, #0
 8001366:	d119      	bne.n	800139c <__ledf2+0x88>
 8001368:	2001      	movs	r0, #1
 800136a:	4240      	negs	r0, r0
 800136c:	e016      	b.n	800139c <__ledf2+0x88>
 800136e:	4316      	orrs	r6, r2
 8001370:	d113      	bne.n	800139a <__ledf2+0x86>
 8001372:	2900      	cmp	r1, #0
 8001374:	d102      	bne.n	800137c <__ledf2+0x68>
 8001376:	9f01      	ldr	r7, [sp, #4]
 8001378:	4327      	orrs	r7, r4
 800137a:	d0f3      	beq.n	8001364 <__ledf2+0x50>
 800137c:	4584      	cmp	ip, r0
 800137e:	d020      	beq.n	80013c2 <__ledf2+0xae>
 8001380:	4663      	mov	r3, ip
 8001382:	2002      	movs	r0, #2
 8001384:	3b01      	subs	r3, #1
 8001386:	4018      	ands	r0, r3
 8001388:	3801      	subs	r0, #1
 800138a:	e007      	b.n	800139c <__ledf2+0x88>
 800138c:	9f01      	ldr	r7, [sp, #4]
 800138e:	4327      	orrs	r7, r4
 8001390:	d103      	bne.n	800139a <__ledf2+0x86>
 8001392:	458a      	cmp	sl, r1
 8001394:	d1f4      	bne.n	8001380 <__ledf2+0x6c>
 8001396:	4316      	orrs	r6, r2
 8001398:	d01f      	beq.n	80013da <__ledf2+0xc6>
 800139a:	2002      	movs	r0, #2
 800139c:	b003      	add	sp, #12
 800139e:	bcf0      	pop	{r4, r5, r6, r7}
 80013a0:	46bb      	mov	fp, r7
 80013a2:	46b2      	mov	sl, r6
 80013a4:	46a9      	mov	r9, r5
 80013a6:	46a0      	mov	r8, r4
 80013a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013aa:	4654      	mov	r4, sl
 80013ac:	2c00      	cmp	r4, #0
 80013ae:	d0e7      	beq.n	8001380 <__ledf2+0x6c>
 80013b0:	4584      	cmp	ip, r0
 80013b2:	d1e5      	bne.n	8001380 <__ledf2+0x6c>
 80013b4:	4551      	cmp	r1, sl
 80013b6:	dce3      	bgt.n	8001380 <__ledf2+0x6c>
 80013b8:	db03      	blt.n	80013c2 <__ledf2+0xae>
 80013ba:	9b01      	ldr	r3, [sp, #4]
 80013bc:	42b3      	cmp	r3, r6
 80013be:	d8df      	bhi.n	8001380 <__ledf2+0x6c>
 80013c0:	d00f      	beq.n	80013e2 <__ledf2+0xce>
 80013c2:	4663      	mov	r3, ip
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	d0cf      	beq.n	8001368 <__ledf2+0x54>
 80013c8:	4660      	mov	r0, ip
 80013ca:	e7e7      	b.n	800139c <__ledf2+0x88>
 80013cc:	2c00      	cmp	r4, #0
 80013ce:	d0c9      	beq.n	8001364 <__ledf2+0x50>
 80013d0:	e7d4      	b.n	800137c <__ledf2+0x68>
 80013d2:	2000      	movs	r0, #0
 80013d4:	2c00      	cmp	r4, #0
 80013d6:	d0e1      	beq.n	800139c <__ledf2+0x88>
 80013d8:	e7d2      	b.n	8001380 <__ledf2+0x6c>
 80013da:	4584      	cmp	ip, r0
 80013dc:	d1d0      	bne.n	8001380 <__ledf2+0x6c>
 80013de:	2000      	movs	r0, #0
 80013e0:	e7dc      	b.n	800139c <__ledf2+0x88>
 80013e2:	45c8      	cmp	r8, r9
 80013e4:	d8cc      	bhi.n	8001380 <__ledf2+0x6c>
 80013e6:	2000      	movs	r0, #0
 80013e8:	45c8      	cmp	r8, r9
 80013ea:	d2d7      	bcs.n	800139c <__ledf2+0x88>
 80013ec:	e7e9      	b.n	80013c2 <__ledf2+0xae>
 80013ee:	4584      	cmp	ip, r0
 80013f0:	d0e3      	beq.n	80013ba <__ledf2+0xa6>
 80013f2:	e7c5      	b.n	8001380 <__ledf2+0x6c>
 80013f4:	000007ff 	.word	0x000007ff

080013f8 <__aeabi_dmul>:
 80013f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013fa:	4657      	mov	r7, sl
 80013fc:	46de      	mov	lr, fp
 80013fe:	464e      	mov	r6, r9
 8001400:	4645      	mov	r5, r8
 8001402:	b5e0      	push	{r5, r6, r7, lr}
 8001404:	001f      	movs	r7, r3
 8001406:	030b      	lsls	r3, r1, #12
 8001408:	0b1b      	lsrs	r3, r3, #12
 800140a:	0016      	movs	r6, r2
 800140c:	469a      	mov	sl, r3
 800140e:	0fca      	lsrs	r2, r1, #31
 8001410:	004b      	lsls	r3, r1, #1
 8001412:	0004      	movs	r4, r0
 8001414:	4693      	mov	fp, r2
 8001416:	b087      	sub	sp, #28
 8001418:	0d5b      	lsrs	r3, r3, #21
 800141a:	d100      	bne.n	800141e <__aeabi_dmul+0x26>
 800141c:	e0d5      	b.n	80015ca <__aeabi_dmul+0x1d2>
 800141e:	4abb      	ldr	r2, [pc, #748]	@ (800170c <__aeabi_dmul+0x314>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d100      	bne.n	8001426 <__aeabi_dmul+0x2e>
 8001424:	e0f8      	b.n	8001618 <__aeabi_dmul+0x220>
 8001426:	4651      	mov	r1, sl
 8001428:	0f42      	lsrs	r2, r0, #29
 800142a:	00c9      	lsls	r1, r1, #3
 800142c:	430a      	orrs	r2, r1
 800142e:	2180      	movs	r1, #128	@ 0x80
 8001430:	0409      	lsls	r1, r1, #16
 8001432:	4311      	orrs	r1, r2
 8001434:	00c2      	lsls	r2, r0, #3
 8001436:	4691      	mov	r9, r2
 8001438:	4ab5      	ldr	r2, [pc, #724]	@ (8001710 <__aeabi_dmul+0x318>)
 800143a:	468a      	mov	sl, r1
 800143c:	189d      	adds	r5, r3, r2
 800143e:	2300      	movs	r3, #0
 8001440:	4698      	mov	r8, r3
 8001442:	9302      	str	r3, [sp, #8]
 8001444:	033c      	lsls	r4, r7, #12
 8001446:	007b      	lsls	r3, r7, #1
 8001448:	0ffa      	lsrs	r2, r7, #31
 800144a:	0030      	movs	r0, r6
 800144c:	0b24      	lsrs	r4, r4, #12
 800144e:	0d5b      	lsrs	r3, r3, #21
 8001450:	9200      	str	r2, [sp, #0]
 8001452:	d100      	bne.n	8001456 <__aeabi_dmul+0x5e>
 8001454:	e096      	b.n	8001584 <__aeabi_dmul+0x18c>
 8001456:	4aad      	ldr	r2, [pc, #692]	@ (800170c <__aeabi_dmul+0x314>)
 8001458:	4293      	cmp	r3, r2
 800145a:	d031      	beq.n	80014c0 <__aeabi_dmul+0xc8>
 800145c:	0f72      	lsrs	r2, r6, #29
 800145e:	00e4      	lsls	r4, r4, #3
 8001460:	4322      	orrs	r2, r4
 8001462:	2480      	movs	r4, #128	@ 0x80
 8001464:	0424      	lsls	r4, r4, #16
 8001466:	4314      	orrs	r4, r2
 8001468:	4aa9      	ldr	r2, [pc, #676]	@ (8001710 <__aeabi_dmul+0x318>)
 800146a:	00f0      	lsls	r0, r6, #3
 800146c:	4694      	mov	ip, r2
 800146e:	4463      	add	r3, ip
 8001470:	195b      	adds	r3, r3, r5
 8001472:	1c5a      	adds	r2, r3, #1
 8001474:	9201      	str	r2, [sp, #4]
 8001476:	4642      	mov	r2, r8
 8001478:	2600      	movs	r6, #0
 800147a:	2a0a      	cmp	r2, #10
 800147c:	dc42      	bgt.n	8001504 <__aeabi_dmul+0x10c>
 800147e:	465a      	mov	r2, fp
 8001480:	9900      	ldr	r1, [sp, #0]
 8001482:	404a      	eors	r2, r1
 8001484:	4693      	mov	fp, r2
 8001486:	4642      	mov	r2, r8
 8001488:	2a02      	cmp	r2, #2
 800148a:	dc32      	bgt.n	80014f2 <__aeabi_dmul+0xfa>
 800148c:	3a01      	subs	r2, #1
 800148e:	2a01      	cmp	r2, #1
 8001490:	d900      	bls.n	8001494 <__aeabi_dmul+0x9c>
 8001492:	e149      	b.n	8001728 <__aeabi_dmul+0x330>
 8001494:	2e02      	cmp	r6, #2
 8001496:	d100      	bne.n	800149a <__aeabi_dmul+0xa2>
 8001498:	e0ca      	b.n	8001630 <__aeabi_dmul+0x238>
 800149a:	2e01      	cmp	r6, #1
 800149c:	d13d      	bne.n	800151a <__aeabi_dmul+0x122>
 800149e:	2300      	movs	r3, #0
 80014a0:	2400      	movs	r4, #0
 80014a2:	2200      	movs	r2, #0
 80014a4:	0010      	movs	r0, r2
 80014a6:	465a      	mov	r2, fp
 80014a8:	051b      	lsls	r3, r3, #20
 80014aa:	4323      	orrs	r3, r4
 80014ac:	07d2      	lsls	r2, r2, #31
 80014ae:	4313      	orrs	r3, r2
 80014b0:	0019      	movs	r1, r3
 80014b2:	b007      	add	sp, #28
 80014b4:	bcf0      	pop	{r4, r5, r6, r7}
 80014b6:	46bb      	mov	fp, r7
 80014b8:	46b2      	mov	sl, r6
 80014ba:	46a9      	mov	r9, r5
 80014bc:	46a0      	mov	r8, r4
 80014be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014c0:	4b92      	ldr	r3, [pc, #584]	@ (800170c <__aeabi_dmul+0x314>)
 80014c2:	4326      	orrs	r6, r4
 80014c4:	18eb      	adds	r3, r5, r3
 80014c6:	2e00      	cmp	r6, #0
 80014c8:	d100      	bne.n	80014cc <__aeabi_dmul+0xd4>
 80014ca:	e0bb      	b.n	8001644 <__aeabi_dmul+0x24c>
 80014cc:	2203      	movs	r2, #3
 80014ce:	4641      	mov	r1, r8
 80014d0:	4311      	orrs	r1, r2
 80014d2:	465a      	mov	r2, fp
 80014d4:	4688      	mov	r8, r1
 80014d6:	9900      	ldr	r1, [sp, #0]
 80014d8:	404a      	eors	r2, r1
 80014da:	2180      	movs	r1, #128	@ 0x80
 80014dc:	0109      	lsls	r1, r1, #4
 80014de:	468c      	mov	ip, r1
 80014e0:	0029      	movs	r1, r5
 80014e2:	4461      	add	r1, ip
 80014e4:	9101      	str	r1, [sp, #4]
 80014e6:	4641      	mov	r1, r8
 80014e8:	290a      	cmp	r1, #10
 80014ea:	dd00      	ble.n	80014ee <__aeabi_dmul+0xf6>
 80014ec:	e233      	b.n	8001956 <__aeabi_dmul+0x55e>
 80014ee:	4693      	mov	fp, r2
 80014f0:	2603      	movs	r6, #3
 80014f2:	4642      	mov	r2, r8
 80014f4:	2701      	movs	r7, #1
 80014f6:	4097      	lsls	r7, r2
 80014f8:	21a6      	movs	r1, #166	@ 0xa6
 80014fa:	003a      	movs	r2, r7
 80014fc:	00c9      	lsls	r1, r1, #3
 80014fe:	400a      	ands	r2, r1
 8001500:	420f      	tst	r7, r1
 8001502:	d031      	beq.n	8001568 <__aeabi_dmul+0x170>
 8001504:	9e02      	ldr	r6, [sp, #8]
 8001506:	2e02      	cmp	r6, #2
 8001508:	d100      	bne.n	800150c <__aeabi_dmul+0x114>
 800150a:	e235      	b.n	8001978 <__aeabi_dmul+0x580>
 800150c:	2e03      	cmp	r6, #3
 800150e:	d100      	bne.n	8001512 <__aeabi_dmul+0x11a>
 8001510:	e1d2      	b.n	80018b8 <__aeabi_dmul+0x4c0>
 8001512:	4654      	mov	r4, sl
 8001514:	4648      	mov	r0, r9
 8001516:	2e01      	cmp	r6, #1
 8001518:	d0c1      	beq.n	800149e <__aeabi_dmul+0xa6>
 800151a:	9a01      	ldr	r2, [sp, #4]
 800151c:	4b7d      	ldr	r3, [pc, #500]	@ (8001714 <__aeabi_dmul+0x31c>)
 800151e:	4694      	mov	ip, r2
 8001520:	4463      	add	r3, ip
 8001522:	2b00      	cmp	r3, #0
 8001524:	dc00      	bgt.n	8001528 <__aeabi_dmul+0x130>
 8001526:	e0c0      	b.n	80016aa <__aeabi_dmul+0x2b2>
 8001528:	0742      	lsls	r2, r0, #29
 800152a:	d009      	beq.n	8001540 <__aeabi_dmul+0x148>
 800152c:	220f      	movs	r2, #15
 800152e:	4002      	ands	r2, r0
 8001530:	2a04      	cmp	r2, #4
 8001532:	d005      	beq.n	8001540 <__aeabi_dmul+0x148>
 8001534:	1d02      	adds	r2, r0, #4
 8001536:	4282      	cmp	r2, r0
 8001538:	4180      	sbcs	r0, r0
 800153a:	4240      	negs	r0, r0
 800153c:	1824      	adds	r4, r4, r0
 800153e:	0010      	movs	r0, r2
 8001540:	01e2      	lsls	r2, r4, #7
 8001542:	d506      	bpl.n	8001552 <__aeabi_dmul+0x15a>
 8001544:	4b74      	ldr	r3, [pc, #464]	@ (8001718 <__aeabi_dmul+0x320>)
 8001546:	9a01      	ldr	r2, [sp, #4]
 8001548:	401c      	ands	r4, r3
 800154a:	2380      	movs	r3, #128	@ 0x80
 800154c:	4694      	mov	ip, r2
 800154e:	00db      	lsls	r3, r3, #3
 8001550:	4463      	add	r3, ip
 8001552:	4a72      	ldr	r2, [pc, #456]	@ (800171c <__aeabi_dmul+0x324>)
 8001554:	4293      	cmp	r3, r2
 8001556:	dc6b      	bgt.n	8001630 <__aeabi_dmul+0x238>
 8001558:	0762      	lsls	r2, r4, #29
 800155a:	08c0      	lsrs	r0, r0, #3
 800155c:	0264      	lsls	r4, r4, #9
 800155e:	055b      	lsls	r3, r3, #21
 8001560:	4302      	orrs	r2, r0
 8001562:	0b24      	lsrs	r4, r4, #12
 8001564:	0d5b      	lsrs	r3, r3, #21
 8001566:	e79d      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001568:	2190      	movs	r1, #144	@ 0x90
 800156a:	0089      	lsls	r1, r1, #2
 800156c:	420f      	tst	r7, r1
 800156e:	d163      	bne.n	8001638 <__aeabi_dmul+0x240>
 8001570:	2288      	movs	r2, #136	@ 0x88
 8001572:	423a      	tst	r2, r7
 8001574:	d100      	bne.n	8001578 <__aeabi_dmul+0x180>
 8001576:	e0d7      	b.n	8001728 <__aeabi_dmul+0x330>
 8001578:	9b00      	ldr	r3, [sp, #0]
 800157a:	46a2      	mov	sl, r4
 800157c:	469b      	mov	fp, r3
 800157e:	4681      	mov	r9, r0
 8001580:	9602      	str	r6, [sp, #8]
 8001582:	e7bf      	b.n	8001504 <__aeabi_dmul+0x10c>
 8001584:	0023      	movs	r3, r4
 8001586:	4333      	orrs	r3, r6
 8001588:	d100      	bne.n	800158c <__aeabi_dmul+0x194>
 800158a:	e07f      	b.n	800168c <__aeabi_dmul+0x294>
 800158c:	2c00      	cmp	r4, #0
 800158e:	d100      	bne.n	8001592 <__aeabi_dmul+0x19a>
 8001590:	e1ad      	b.n	80018ee <__aeabi_dmul+0x4f6>
 8001592:	0020      	movs	r0, r4
 8001594:	f000 fe44 	bl	8002220 <__clzsi2>
 8001598:	0002      	movs	r2, r0
 800159a:	0003      	movs	r3, r0
 800159c:	3a0b      	subs	r2, #11
 800159e:	201d      	movs	r0, #29
 80015a0:	0019      	movs	r1, r3
 80015a2:	1a82      	subs	r2, r0, r2
 80015a4:	0030      	movs	r0, r6
 80015a6:	3908      	subs	r1, #8
 80015a8:	40d0      	lsrs	r0, r2
 80015aa:	408c      	lsls	r4, r1
 80015ac:	4304      	orrs	r4, r0
 80015ae:	0030      	movs	r0, r6
 80015b0:	4088      	lsls	r0, r1
 80015b2:	4a5b      	ldr	r2, [pc, #364]	@ (8001720 <__aeabi_dmul+0x328>)
 80015b4:	1aeb      	subs	r3, r5, r3
 80015b6:	4694      	mov	ip, r2
 80015b8:	4463      	add	r3, ip
 80015ba:	1c5a      	adds	r2, r3, #1
 80015bc:	9201      	str	r2, [sp, #4]
 80015be:	4642      	mov	r2, r8
 80015c0:	2600      	movs	r6, #0
 80015c2:	2a0a      	cmp	r2, #10
 80015c4:	dc00      	bgt.n	80015c8 <__aeabi_dmul+0x1d0>
 80015c6:	e75a      	b.n	800147e <__aeabi_dmul+0x86>
 80015c8:	e79c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80015ca:	4653      	mov	r3, sl
 80015cc:	4303      	orrs	r3, r0
 80015ce:	4699      	mov	r9, r3
 80015d0:	d054      	beq.n	800167c <__aeabi_dmul+0x284>
 80015d2:	4653      	mov	r3, sl
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d100      	bne.n	80015da <__aeabi_dmul+0x1e2>
 80015d8:	e177      	b.n	80018ca <__aeabi_dmul+0x4d2>
 80015da:	4650      	mov	r0, sl
 80015dc:	f000 fe20 	bl	8002220 <__clzsi2>
 80015e0:	230b      	movs	r3, #11
 80015e2:	425b      	negs	r3, r3
 80015e4:	469c      	mov	ip, r3
 80015e6:	0002      	movs	r2, r0
 80015e8:	4484      	add	ip, r0
 80015ea:	0011      	movs	r1, r2
 80015ec:	4650      	mov	r0, sl
 80015ee:	3908      	subs	r1, #8
 80015f0:	4088      	lsls	r0, r1
 80015f2:	231d      	movs	r3, #29
 80015f4:	4680      	mov	r8, r0
 80015f6:	4660      	mov	r0, ip
 80015f8:	1a1b      	subs	r3, r3, r0
 80015fa:	0020      	movs	r0, r4
 80015fc:	40d8      	lsrs	r0, r3
 80015fe:	0003      	movs	r3, r0
 8001600:	4640      	mov	r0, r8
 8001602:	4303      	orrs	r3, r0
 8001604:	469a      	mov	sl, r3
 8001606:	0023      	movs	r3, r4
 8001608:	408b      	lsls	r3, r1
 800160a:	4699      	mov	r9, r3
 800160c:	2300      	movs	r3, #0
 800160e:	4d44      	ldr	r5, [pc, #272]	@ (8001720 <__aeabi_dmul+0x328>)
 8001610:	4698      	mov	r8, r3
 8001612:	1aad      	subs	r5, r5, r2
 8001614:	9302      	str	r3, [sp, #8]
 8001616:	e715      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001618:	4652      	mov	r2, sl
 800161a:	4302      	orrs	r2, r0
 800161c:	4691      	mov	r9, r2
 800161e:	d126      	bne.n	800166e <__aeabi_dmul+0x276>
 8001620:	2200      	movs	r2, #0
 8001622:	001d      	movs	r5, r3
 8001624:	2302      	movs	r3, #2
 8001626:	4692      	mov	sl, r2
 8001628:	3208      	adds	r2, #8
 800162a:	4690      	mov	r8, r2
 800162c:	9302      	str	r3, [sp, #8]
 800162e:	e709      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001630:	2400      	movs	r4, #0
 8001632:	2200      	movs	r2, #0
 8001634:	4b35      	ldr	r3, [pc, #212]	@ (800170c <__aeabi_dmul+0x314>)
 8001636:	e735      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001638:	2300      	movs	r3, #0
 800163a:	2480      	movs	r4, #128	@ 0x80
 800163c:	469b      	mov	fp, r3
 800163e:	0324      	lsls	r4, r4, #12
 8001640:	4b32      	ldr	r3, [pc, #200]	@ (800170c <__aeabi_dmul+0x314>)
 8001642:	e72f      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001644:	2202      	movs	r2, #2
 8001646:	4641      	mov	r1, r8
 8001648:	4311      	orrs	r1, r2
 800164a:	2280      	movs	r2, #128	@ 0x80
 800164c:	0112      	lsls	r2, r2, #4
 800164e:	4694      	mov	ip, r2
 8001650:	002a      	movs	r2, r5
 8001652:	4462      	add	r2, ip
 8001654:	4688      	mov	r8, r1
 8001656:	9201      	str	r2, [sp, #4]
 8001658:	290a      	cmp	r1, #10
 800165a:	dd00      	ble.n	800165e <__aeabi_dmul+0x266>
 800165c:	e752      	b.n	8001504 <__aeabi_dmul+0x10c>
 800165e:	465a      	mov	r2, fp
 8001660:	2000      	movs	r0, #0
 8001662:	9900      	ldr	r1, [sp, #0]
 8001664:	0004      	movs	r4, r0
 8001666:	404a      	eors	r2, r1
 8001668:	4693      	mov	fp, r2
 800166a:	2602      	movs	r6, #2
 800166c:	e70b      	b.n	8001486 <__aeabi_dmul+0x8e>
 800166e:	220c      	movs	r2, #12
 8001670:	001d      	movs	r5, r3
 8001672:	2303      	movs	r3, #3
 8001674:	4681      	mov	r9, r0
 8001676:	4690      	mov	r8, r2
 8001678:	9302      	str	r3, [sp, #8]
 800167a:	e6e3      	b.n	8001444 <__aeabi_dmul+0x4c>
 800167c:	2300      	movs	r3, #0
 800167e:	469a      	mov	sl, r3
 8001680:	3304      	adds	r3, #4
 8001682:	4698      	mov	r8, r3
 8001684:	3b03      	subs	r3, #3
 8001686:	2500      	movs	r5, #0
 8001688:	9302      	str	r3, [sp, #8]
 800168a:	e6db      	b.n	8001444 <__aeabi_dmul+0x4c>
 800168c:	4642      	mov	r2, r8
 800168e:	3301      	adds	r3, #1
 8001690:	431a      	orrs	r2, r3
 8001692:	002b      	movs	r3, r5
 8001694:	4690      	mov	r8, r2
 8001696:	1c5a      	adds	r2, r3, #1
 8001698:	9201      	str	r2, [sp, #4]
 800169a:	4642      	mov	r2, r8
 800169c:	2400      	movs	r4, #0
 800169e:	2000      	movs	r0, #0
 80016a0:	2601      	movs	r6, #1
 80016a2:	2a0a      	cmp	r2, #10
 80016a4:	dc00      	bgt.n	80016a8 <__aeabi_dmul+0x2b0>
 80016a6:	e6ea      	b.n	800147e <__aeabi_dmul+0x86>
 80016a8:	e72c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80016aa:	2201      	movs	r2, #1
 80016ac:	1ad2      	subs	r2, r2, r3
 80016ae:	2a38      	cmp	r2, #56	@ 0x38
 80016b0:	dd00      	ble.n	80016b4 <__aeabi_dmul+0x2bc>
 80016b2:	e6f4      	b.n	800149e <__aeabi_dmul+0xa6>
 80016b4:	2a1f      	cmp	r2, #31
 80016b6:	dc00      	bgt.n	80016ba <__aeabi_dmul+0x2c2>
 80016b8:	e12a      	b.n	8001910 <__aeabi_dmul+0x518>
 80016ba:	211f      	movs	r1, #31
 80016bc:	4249      	negs	r1, r1
 80016be:	1acb      	subs	r3, r1, r3
 80016c0:	0021      	movs	r1, r4
 80016c2:	40d9      	lsrs	r1, r3
 80016c4:	000b      	movs	r3, r1
 80016c6:	2a20      	cmp	r2, #32
 80016c8:	d005      	beq.n	80016d6 <__aeabi_dmul+0x2de>
 80016ca:	4a16      	ldr	r2, [pc, #88]	@ (8001724 <__aeabi_dmul+0x32c>)
 80016cc:	9d01      	ldr	r5, [sp, #4]
 80016ce:	4694      	mov	ip, r2
 80016d0:	4465      	add	r5, ip
 80016d2:	40ac      	lsls	r4, r5
 80016d4:	4320      	orrs	r0, r4
 80016d6:	1e42      	subs	r2, r0, #1
 80016d8:	4190      	sbcs	r0, r2
 80016da:	4318      	orrs	r0, r3
 80016dc:	2307      	movs	r3, #7
 80016de:	0019      	movs	r1, r3
 80016e0:	2400      	movs	r4, #0
 80016e2:	4001      	ands	r1, r0
 80016e4:	4203      	tst	r3, r0
 80016e6:	d00c      	beq.n	8001702 <__aeabi_dmul+0x30a>
 80016e8:	230f      	movs	r3, #15
 80016ea:	4003      	ands	r3, r0
 80016ec:	2b04      	cmp	r3, #4
 80016ee:	d100      	bne.n	80016f2 <__aeabi_dmul+0x2fa>
 80016f0:	e140      	b.n	8001974 <__aeabi_dmul+0x57c>
 80016f2:	1d03      	adds	r3, r0, #4
 80016f4:	4283      	cmp	r3, r0
 80016f6:	41a4      	sbcs	r4, r4
 80016f8:	0018      	movs	r0, r3
 80016fa:	4264      	negs	r4, r4
 80016fc:	0761      	lsls	r1, r4, #29
 80016fe:	0264      	lsls	r4, r4, #9
 8001700:	0b24      	lsrs	r4, r4, #12
 8001702:	08c2      	lsrs	r2, r0, #3
 8001704:	2300      	movs	r3, #0
 8001706:	430a      	orrs	r2, r1
 8001708:	e6cc      	b.n	80014a4 <__aeabi_dmul+0xac>
 800170a:	46c0      	nop			@ (mov r8, r8)
 800170c:	000007ff 	.word	0x000007ff
 8001710:	fffffc01 	.word	0xfffffc01
 8001714:	000003ff 	.word	0x000003ff
 8001718:	feffffff 	.word	0xfeffffff
 800171c:	000007fe 	.word	0x000007fe
 8001720:	fffffc0d 	.word	0xfffffc0d
 8001724:	0000043e 	.word	0x0000043e
 8001728:	4649      	mov	r1, r9
 800172a:	464a      	mov	r2, r9
 800172c:	0409      	lsls	r1, r1, #16
 800172e:	0c09      	lsrs	r1, r1, #16
 8001730:	000d      	movs	r5, r1
 8001732:	0c16      	lsrs	r6, r2, #16
 8001734:	0c02      	lsrs	r2, r0, #16
 8001736:	0400      	lsls	r0, r0, #16
 8001738:	0c00      	lsrs	r0, r0, #16
 800173a:	4345      	muls	r5, r0
 800173c:	46ac      	mov	ip, r5
 800173e:	0005      	movs	r5, r0
 8001740:	4375      	muls	r5, r6
 8001742:	46a8      	mov	r8, r5
 8001744:	0015      	movs	r5, r2
 8001746:	000f      	movs	r7, r1
 8001748:	4375      	muls	r5, r6
 800174a:	9200      	str	r2, [sp, #0]
 800174c:	9502      	str	r5, [sp, #8]
 800174e:	002a      	movs	r2, r5
 8001750:	9d00      	ldr	r5, [sp, #0]
 8001752:	436f      	muls	r7, r5
 8001754:	4665      	mov	r5, ip
 8001756:	0c2d      	lsrs	r5, r5, #16
 8001758:	46a9      	mov	r9, r5
 800175a:	4447      	add	r7, r8
 800175c:	444f      	add	r7, r9
 800175e:	45b8      	cmp	r8, r7
 8001760:	d905      	bls.n	800176e <__aeabi_dmul+0x376>
 8001762:	0015      	movs	r5, r2
 8001764:	2280      	movs	r2, #128	@ 0x80
 8001766:	0252      	lsls	r2, r2, #9
 8001768:	4690      	mov	r8, r2
 800176a:	4445      	add	r5, r8
 800176c:	9502      	str	r5, [sp, #8]
 800176e:	0c3d      	lsrs	r5, r7, #16
 8001770:	9503      	str	r5, [sp, #12]
 8001772:	4665      	mov	r5, ip
 8001774:	042d      	lsls	r5, r5, #16
 8001776:	043f      	lsls	r7, r7, #16
 8001778:	0c2d      	lsrs	r5, r5, #16
 800177a:	46ac      	mov	ip, r5
 800177c:	003d      	movs	r5, r7
 800177e:	4465      	add	r5, ip
 8001780:	9504      	str	r5, [sp, #16]
 8001782:	0c25      	lsrs	r5, r4, #16
 8001784:	0424      	lsls	r4, r4, #16
 8001786:	0c24      	lsrs	r4, r4, #16
 8001788:	46ac      	mov	ip, r5
 800178a:	0025      	movs	r5, r4
 800178c:	4375      	muls	r5, r6
 800178e:	46a8      	mov	r8, r5
 8001790:	4665      	mov	r5, ip
 8001792:	000f      	movs	r7, r1
 8001794:	4369      	muls	r1, r5
 8001796:	4441      	add	r1, r8
 8001798:	4689      	mov	r9, r1
 800179a:	4367      	muls	r7, r4
 800179c:	0c39      	lsrs	r1, r7, #16
 800179e:	4449      	add	r1, r9
 80017a0:	436e      	muls	r6, r5
 80017a2:	4588      	cmp	r8, r1
 80017a4:	d903      	bls.n	80017ae <__aeabi_dmul+0x3b6>
 80017a6:	2280      	movs	r2, #128	@ 0x80
 80017a8:	0252      	lsls	r2, r2, #9
 80017aa:	4690      	mov	r8, r2
 80017ac:	4446      	add	r6, r8
 80017ae:	0c0d      	lsrs	r5, r1, #16
 80017b0:	46a8      	mov	r8, r5
 80017b2:	0035      	movs	r5, r6
 80017b4:	4445      	add	r5, r8
 80017b6:	9505      	str	r5, [sp, #20]
 80017b8:	9d03      	ldr	r5, [sp, #12]
 80017ba:	043f      	lsls	r7, r7, #16
 80017bc:	46a8      	mov	r8, r5
 80017be:	0c3f      	lsrs	r7, r7, #16
 80017c0:	0409      	lsls	r1, r1, #16
 80017c2:	19c9      	adds	r1, r1, r7
 80017c4:	4488      	add	r8, r1
 80017c6:	4645      	mov	r5, r8
 80017c8:	9503      	str	r5, [sp, #12]
 80017ca:	4655      	mov	r5, sl
 80017cc:	042e      	lsls	r6, r5, #16
 80017ce:	0c36      	lsrs	r6, r6, #16
 80017d0:	0c2f      	lsrs	r7, r5, #16
 80017d2:	0035      	movs	r5, r6
 80017d4:	4345      	muls	r5, r0
 80017d6:	4378      	muls	r0, r7
 80017d8:	4681      	mov	r9, r0
 80017da:	0038      	movs	r0, r7
 80017dc:	46a8      	mov	r8, r5
 80017de:	0c2d      	lsrs	r5, r5, #16
 80017e0:	46aa      	mov	sl, r5
 80017e2:	9a00      	ldr	r2, [sp, #0]
 80017e4:	4350      	muls	r0, r2
 80017e6:	4372      	muls	r2, r6
 80017e8:	444a      	add	r2, r9
 80017ea:	4452      	add	r2, sl
 80017ec:	4591      	cmp	r9, r2
 80017ee:	d903      	bls.n	80017f8 <__aeabi_dmul+0x400>
 80017f0:	2580      	movs	r5, #128	@ 0x80
 80017f2:	026d      	lsls	r5, r5, #9
 80017f4:	46a9      	mov	r9, r5
 80017f6:	4448      	add	r0, r9
 80017f8:	0c15      	lsrs	r5, r2, #16
 80017fa:	46a9      	mov	r9, r5
 80017fc:	4645      	mov	r5, r8
 80017fe:	042d      	lsls	r5, r5, #16
 8001800:	0c2d      	lsrs	r5, r5, #16
 8001802:	46a8      	mov	r8, r5
 8001804:	4665      	mov	r5, ip
 8001806:	437d      	muls	r5, r7
 8001808:	0412      	lsls	r2, r2, #16
 800180a:	4448      	add	r0, r9
 800180c:	4490      	add	r8, r2
 800180e:	46a9      	mov	r9, r5
 8001810:	0032      	movs	r2, r6
 8001812:	4665      	mov	r5, ip
 8001814:	4362      	muls	r2, r4
 8001816:	436e      	muls	r6, r5
 8001818:	437c      	muls	r4, r7
 800181a:	0c17      	lsrs	r7, r2, #16
 800181c:	1936      	adds	r6, r6, r4
 800181e:	19bf      	adds	r7, r7, r6
 8001820:	42bc      	cmp	r4, r7
 8001822:	d903      	bls.n	800182c <__aeabi_dmul+0x434>
 8001824:	2480      	movs	r4, #128	@ 0x80
 8001826:	0264      	lsls	r4, r4, #9
 8001828:	46a4      	mov	ip, r4
 800182a:	44e1      	add	r9, ip
 800182c:	9c02      	ldr	r4, [sp, #8]
 800182e:	9e03      	ldr	r6, [sp, #12]
 8001830:	46a4      	mov	ip, r4
 8001832:	9d05      	ldr	r5, [sp, #20]
 8001834:	4466      	add	r6, ip
 8001836:	428e      	cmp	r6, r1
 8001838:	4189      	sbcs	r1, r1
 800183a:	46ac      	mov	ip, r5
 800183c:	0412      	lsls	r2, r2, #16
 800183e:	043c      	lsls	r4, r7, #16
 8001840:	0c12      	lsrs	r2, r2, #16
 8001842:	18a2      	adds	r2, r4, r2
 8001844:	4462      	add	r2, ip
 8001846:	4249      	negs	r1, r1
 8001848:	1854      	adds	r4, r2, r1
 800184a:	4446      	add	r6, r8
 800184c:	46a4      	mov	ip, r4
 800184e:	4546      	cmp	r6, r8
 8001850:	41a4      	sbcs	r4, r4
 8001852:	4682      	mov	sl, r0
 8001854:	4264      	negs	r4, r4
 8001856:	46a0      	mov	r8, r4
 8001858:	42aa      	cmp	r2, r5
 800185a:	4192      	sbcs	r2, r2
 800185c:	458c      	cmp	ip, r1
 800185e:	4189      	sbcs	r1, r1
 8001860:	44e2      	add	sl, ip
 8001862:	44d0      	add	r8, sl
 8001864:	4249      	negs	r1, r1
 8001866:	4252      	negs	r2, r2
 8001868:	430a      	orrs	r2, r1
 800186a:	45a0      	cmp	r8, r4
 800186c:	41a4      	sbcs	r4, r4
 800186e:	4582      	cmp	sl, r0
 8001870:	4189      	sbcs	r1, r1
 8001872:	4264      	negs	r4, r4
 8001874:	4249      	negs	r1, r1
 8001876:	430c      	orrs	r4, r1
 8001878:	4641      	mov	r1, r8
 800187a:	0c3f      	lsrs	r7, r7, #16
 800187c:	19d2      	adds	r2, r2, r7
 800187e:	1912      	adds	r2, r2, r4
 8001880:	0dcc      	lsrs	r4, r1, #23
 8001882:	9904      	ldr	r1, [sp, #16]
 8001884:	0270      	lsls	r0, r6, #9
 8001886:	4308      	orrs	r0, r1
 8001888:	1e41      	subs	r1, r0, #1
 800188a:	4188      	sbcs	r0, r1
 800188c:	4641      	mov	r1, r8
 800188e:	444a      	add	r2, r9
 8001890:	0df6      	lsrs	r6, r6, #23
 8001892:	0252      	lsls	r2, r2, #9
 8001894:	4330      	orrs	r0, r6
 8001896:	0249      	lsls	r1, r1, #9
 8001898:	4314      	orrs	r4, r2
 800189a:	4308      	orrs	r0, r1
 800189c:	01d2      	lsls	r2, r2, #7
 800189e:	d535      	bpl.n	800190c <__aeabi_dmul+0x514>
 80018a0:	2201      	movs	r2, #1
 80018a2:	0843      	lsrs	r3, r0, #1
 80018a4:	4002      	ands	r2, r0
 80018a6:	4313      	orrs	r3, r2
 80018a8:	07e0      	lsls	r0, r4, #31
 80018aa:	4318      	orrs	r0, r3
 80018ac:	0864      	lsrs	r4, r4, #1
 80018ae:	e634      	b.n	800151a <__aeabi_dmul+0x122>
 80018b0:	9b00      	ldr	r3, [sp, #0]
 80018b2:	46a2      	mov	sl, r4
 80018b4:	469b      	mov	fp, r3
 80018b6:	4681      	mov	r9, r0
 80018b8:	2480      	movs	r4, #128	@ 0x80
 80018ba:	4653      	mov	r3, sl
 80018bc:	0324      	lsls	r4, r4, #12
 80018be:	431c      	orrs	r4, r3
 80018c0:	0324      	lsls	r4, r4, #12
 80018c2:	464a      	mov	r2, r9
 80018c4:	4b2e      	ldr	r3, [pc, #184]	@ (8001980 <__aeabi_dmul+0x588>)
 80018c6:	0b24      	lsrs	r4, r4, #12
 80018c8:	e5ec      	b.n	80014a4 <__aeabi_dmul+0xac>
 80018ca:	f000 fca9 	bl	8002220 <__clzsi2>
 80018ce:	2315      	movs	r3, #21
 80018d0:	469c      	mov	ip, r3
 80018d2:	4484      	add	ip, r0
 80018d4:	0002      	movs	r2, r0
 80018d6:	4663      	mov	r3, ip
 80018d8:	3220      	adds	r2, #32
 80018da:	2b1c      	cmp	r3, #28
 80018dc:	dc00      	bgt.n	80018e0 <__aeabi_dmul+0x4e8>
 80018de:	e684      	b.n	80015ea <__aeabi_dmul+0x1f2>
 80018e0:	2300      	movs	r3, #0
 80018e2:	4699      	mov	r9, r3
 80018e4:	0023      	movs	r3, r4
 80018e6:	3808      	subs	r0, #8
 80018e8:	4083      	lsls	r3, r0
 80018ea:	469a      	mov	sl, r3
 80018ec:	e68e      	b.n	800160c <__aeabi_dmul+0x214>
 80018ee:	f000 fc97 	bl	8002220 <__clzsi2>
 80018f2:	0002      	movs	r2, r0
 80018f4:	0003      	movs	r3, r0
 80018f6:	3215      	adds	r2, #21
 80018f8:	3320      	adds	r3, #32
 80018fa:	2a1c      	cmp	r2, #28
 80018fc:	dc00      	bgt.n	8001900 <__aeabi_dmul+0x508>
 80018fe:	e64e      	b.n	800159e <__aeabi_dmul+0x1a6>
 8001900:	0002      	movs	r2, r0
 8001902:	0034      	movs	r4, r6
 8001904:	3a08      	subs	r2, #8
 8001906:	2000      	movs	r0, #0
 8001908:	4094      	lsls	r4, r2
 800190a:	e652      	b.n	80015b2 <__aeabi_dmul+0x1ba>
 800190c:	9301      	str	r3, [sp, #4]
 800190e:	e604      	b.n	800151a <__aeabi_dmul+0x122>
 8001910:	4b1c      	ldr	r3, [pc, #112]	@ (8001984 <__aeabi_dmul+0x58c>)
 8001912:	0021      	movs	r1, r4
 8001914:	469c      	mov	ip, r3
 8001916:	0003      	movs	r3, r0
 8001918:	9d01      	ldr	r5, [sp, #4]
 800191a:	40d3      	lsrs	r3, r2
 800191c:	4465      	add	r5, ip
 800191e:	40a9      	lsls	r1, r5
 8001920:	4319      	orrs	r1, r3
 8001922:	0003      	movs	r3, r0
 8001924:	40ab      	lsls	r3, r5
 8001926:	1e58      	subs	r0, r3, #1
 8001928:	4183      	sbcs	r3, r0
 800192a:	4319      	orrs	r1, r3
 800192c:	0008      	movs	r0, r1
 800192e:	40d4      	lsrs	r4, r2
 8001930:	074b      	lsls	r3, r1, #29
 8001932:	d009      	beq.n	8001948 <__aeabi_dmul+0x550>
 8001934:	230f      	movs	r3, #15
 8001936:	400b      	ands	r3, r1
 8001938:	2b04      	cmp	r3, #4
 800193a:	d005      	beq.n	8001948 <__aeabi_dmul+0x550>
 800193c:	1d0b      	adds	r3, r1, #4
 800193e:	428b      	cmp	r3, r1
 8001940:	4180      	sbcs	r0, r0
 8001942:	4240      	negs	r0, r0
 8001944:	1824      	adds	r4, r4, r0
 8001946:	0018      	movs	r0, r3
 8001948:	0223      	lsls	r3, r4, #8
 800194a:	d400      	bmi.n	800194e <__aeabi_dmul+0x556>
 800194c:	e6d6      	b.n	80016fc <__aeabi_dmul+0x304>
 800194e:	2301      	movs	r3, #1
 8001950:	2400      	movs	r4, #0
 8001952:	2200      	movs	r2, #0
 8001954:	e5a6      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001956:	290f      	cmp	r1, #15
 8001958:	d1aa      	bne.n	80018b0 <__aeabi_dmul+0x4b8>
 800195a:	2380      	movs	r3, #128	@ 0x80
 800195c:	4652      	mov	r2, sl
 800195e:	031b      	lsls	r3, r3, #12
 8001960:	421a      	tst	r2, r3
 8001962:	d0a9      	beq.n	80018b8 <__aeabi_dmul+0x4c0>
 8001964:	421c      	tst	r4, r3
 8001966:	d1a7      	bne.n	80018b8 <__aeabi_dmul+0x4c0>
 8001968:	431c      	orrs	r4, r3
 800196a:	9b00      	ldr	r3, [sp, #0]
 800196c:	0002      	movs	r2, r0
 800196e:	469b      	mov	fp, r3
 8001970:	4b03      	ldr	r3, [pc, #12]	@ (8001980 <__aeabi_dmul+0x588>)
 8001972:	e597      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001974:	2400      	movs	r4, #0
 8001976:	e6c1      	b.n	80016fc <__aeabi_dmul+0x304>
 8001978:	2400      	movs	r4, #0
 800197a:	4b01      	ldr	r3, [pc, #4]	@ (8001980 <__aeabi_dmul+0x588>)
 800197c:	0022      	movs	r2, r4
 800197e:	e591      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001980:	000007ff 	.word	0x000007ff
 8001984:	0000041e 	.word	0x0000041e

08001988 <__aeabi_dsub>:
 8001988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800198a:	464e      	mov	r6, r9
 800198c:	4645      	mov	r5, r8
 800198e:	46de      	mov	lr, fp
 8001990:	4657      	mov	r7, sl
 8001992:	b5e0      	push	{r5, r6, r7, lr}
 8001994:	b085      	sub	sp, #20
 8001996:	9000      	str	r0, [sp, #0]
 8001998:	9101      	str	r1, [sp, #4]
 800199a:	030c      	lsls	r4, r1, #12
 800199c:	004f      	lsls	r7, r1, #1
 800199e:	0fce      	lsrs	r6, r1, #31
 80019a0:	0a61      	lsrs	r1, r4, #9
 80019a2:	9c00      	ldr	r4, [sp, #0]
 80019a4:	46b0      	mov	r8, r6
 80019a6:	0f64      	lsrs	r4, r4, #29
 80019a8:	430c      	orrs	r4, r1
 80019aa:	9900      	ldr	r1, [sp, #0]
 80019ac:	0d7f      	lsrs	r7, r7, #21
 80019ae:	00c8      	lsls	r0, r1, #3
 80019b0:	0011      	movs	r1, r2
 80019b2:	001a      	movs	r2, r3
 80019b4:	031b      	lsls	r3, r3, #12
 80019b6:	469c      	mov	ip, r3
 80019b8:	9100      	str	r1, [sp, #0]
 80019ba:	9201      	str	r2, [sp, #4]
 80019bc:	0051      	lsls	r1, r2, #1
 80019be:	0d4b      	lsrs	r3, r1, #21
 80019c0:	4699      	mov	r9, r3
 80019c2:	9b01      	ldr	r3, [sp, #4]
 80019c4:	9d00      	ldr	r5, [sp, #0]
 80019c6:	0fd9      	lsrs	r1, r3, #31
 80019c8:	4663      	mov	r3, ip
 80019ca:	0f6a      	lsrs	r2, r5, #29
 80019cc:	0a5b      	lsrs	r3, r3, #9
 80019ce:	4313      	orrs	r3, r2
 80019d0:	00ea      	lsls	r2, r5, #3
 80019d2:	4694      	mov	ip, r2
 80019d4:	4693      	mov	fp, r2
 80019d6:	4ac1      	ldr	r2, [pc, #772]	@ (8001cdc <__aeabi_dsub+0x354>)
 80019d8:	9003      	str	r0, [sp, #12]
 80019da:	9302      	str	r3, [sp, #8]
 80019dc:	4591      	cmp	r9, r2
 80019de:	d100      	bne.n	80019e2 <__aeabi_dsub+0x5a>
 80019e0:	e0cd      	b.n	8001b7e <__aeabi_dsub+0x1f6>
 80019e2:	2501      	movs	r5, #1
 80019e4:	4069      	eors	r1, r5
 80019e6:	464d      	mov	r5, r9
 80019e8:	1b7d      	subs	r5, r7, r5
 80019ea:	46aa      	mov	sl, r5
 80019ec:	428e      	cmp	r6, r1
 80019ee:	d100      	bne.n	80019f2 <__aeabi_dsub+0x6a>
 80019f0:	e080      	b.n	8001af4 <__aeabi_dsub+0x16c>
 80019f2:	2d00      	cmp	r5, #0
 80019f4:	dc00      	bgt.n	80019f8 <__aeabi_dsub+0x70>
 80019f6:	e335      	b.n	8002064 <__aeabi_dsub+0x6dc>
 80019f8:	4649      	mov	r1, r9
 80019fa:	2900      	cmp	r1, #0
 80019fc:	d100      	bne.n	8001a00 <__aeabi_dsub+0x78>
 80019fe:	e0df      	b.n	8001bc0 <__aeabi_dsub+0x238>
 8001a00:	4297      	cmp	r7, r2
 8001a02:	d100      	bne.n	8001a06 <__aeabi_dsub+0x7e>
 8001a04:	e194      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001a06:	4652      	mov	r2, sl
 8001a08:	2501      	movs	r5, #1
 8001a0a:	2a38      	cmp	r2, #56	@ 0x38
 8001a0c:	dc19      	bgt.n	8001a42 <__aeabi_dsub+0xba>
 8001a0e:	2280      	movs	r2, #128	@ 0x80
 8001a10:	9b02      	ldr	r3, [sp, #8]
 8001a12:	0412      	lsls	r2, r2, #16
 8001a14:	4313      	orrs	r3, r2
 8001a16:	9302      	str	r3, [sp, #8]
 8001a18:	4652      	mov	r2, sl
 8001a1a:	2a1f      	cmp	r2, #31
 8001a1c:	dd00      	ble.n	8001a20 <__aeabi_dsub+0x98>
 8001a1e:	e1e3      	b.n	8001de8 <__aeabi_dsub+0x460>
 8001a20:	4653      	mov	r3, sl
 8001a22:	2220      	movs	r2, #32
 8001a24:	4661      	mov	r1, ip
 8001a26:	9d02      	ldr	r5, [sp, #8]
 8001a28:	1ad2      	subs	r2, r2, r3
 8001a2a:	4095      	lsls	r5, r2
 8001a2c:	40d9      	lsrs	r1, r3
 8001a2e:	430d      	orrs	r5, r1
 8001a30:	4661      	mov	r1, ip
 8001a32:	4091      	lsls	r1, r2
 8001a34:	000a      	movs	r2, r1
 8001a36:	1e51      	subs	r1, r2, #1
 8001a38:	418a      	sbcs	r2, r1
 8001a3a:	4315      	orrs	r5, r2
 8001a3c:	9a02      	ldr	r2, [sp, #8]
 8001a3e:	40da      	lsrs	r2, r3
 8001a40:	1aa4      	subs	r4, r4, r2
 8001a42:	1b45      	subs	r5, r0, r5
 8001a44:	42a8      	cmp	r0, r5
 8001a46:	4180      	sbcs	r0, r0
 8001a48:	4240      	negs	r0, r0
 8001a4a:	1a24      	subs	r4, r4, r0
 8001a4c:	0223      	lsls	r3, r4, #8
 8001a4e:	d400      	bmi.n	8001a52 <__aeabi_dsub+0xca>
 8001a50:	e13d      	b.n	8001cce <__aeabi_dsub+0x346>
 8001a52:	0264      	lsls	r4, r4, #9
 8001a54:	0a64      	lsrs	r4, r4, #9
 8001a56:	2c00      	cmp	r4, #0
 8001a58:	d100      	bne.n	8001a5c <__aeabi_dsub+0xd4>
 8001a5a:	e147      	b.n	8001cec <__aeabi_dsub+0x364>
 8001a5c:	0020      	movs	r0, r4
 8001a5e:	f000 fbdf 	bl	8002220 <__clzsi2>
 8001a62:	0003      	movs	r3, r0
 8001a64:	3b08      	subs	r3, #8
 8001a66:	2120      	movs	r1, #32
 8001a68:	0028      	movs	r0, r5
 8001a6a:	1aca      	subs	r2, r1, r3
 8001a6c:	40d0      	lsrs	r0, r2
 8001a6e:	409c      	lsls	r4, r3
 8001a70:	0002      	movs	r2, r0
 8001a72:	409d      	lsls	r5, r3
 8001a74:	4322      	orrs	r2, r4
 8001a76:	429f      	cmp	r7, r3
 8001a78:	dd00      	ble.n	8001a7c <__aeabi_dsub+0xf4>
 8001a7a:	e177      	b.n	8001d6c <__aeabi_dsub+0x3e4>
 8001a7c:	1bd8      	subs	r0, r3, r7
 8001a7e:	3001      	adds	r0, #1
 8001a80:	1a09      	subs	r1, r1, r0
 8001a82:	002c      	movs	r4, r5
 8001a84:	408d      	lsls	r5, r1
 8001a86:	40c4      	lsrs	r4, r0
 8001a88:	1e6b      	subs	r3, r5, #1
 8001a8a:	419d      	sbcs	r5, r3
 8001a8c:	0013      	movs	r3, r2
 8001a8e:	40c2      	lsrs	r2, r0
 8001a90:	408b      	lsls	r3, r1
 8001a92:	4325      	orrs	r5, r4
 8001a94:	2700      	movs	r7, #0
 8001a96:	0014      	movs	r4, r2
 8001a98:	431d      	orrs	r5, r3
 8001a9a:	076b      	lsls	r3, r5, #29
 8001a9c:	d009      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001a9e:	230f      	movs	r3, #15
 8001aa0:	402b      	ands	r3, r5
 8001aa2:	2b04      	cmp	r3, #4
 8001aa4:	d005      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001aa6:	1d2b      	adds	r3, r5, #4
 8001aa8:	42ab      	cmp	r3, r5
 8001aaa:	41ad      	sbcs	r5, r5
 8001aac:	426d      	negs	r5, r5
 8001aae:	1964      	adds	r4, r4, r5
 8001ab0:	001d      	movs	r5, r3
 8001ab2:	0223      	lsls	r3, r4, #8
 8001ab4:	d400      	bmi.n	8001ab8 <__aeabi_dsub+0x130>
 8001ab6:	e140      	b.n	8001d3a <__aeabi_dsub+0x3b2>
 8001ab8:	4a88      	ldr	r2, [pc, #544]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001aba:	3701      	adds	r7, #1
 8001abc:	4297      	cmp	r7, r2
 8001abe:	d100      	bne.n	8001ac2 <__aeabi_dsub+0x13a>
 8001ac0:	e101      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001ac2:	2601      	movs	r6, #1
 8001ac4:	4643      	mov	r3, r8
 8001ac6:	4986      	ldr	r1, [pc, #536]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001ac8:	08ed      	lsrs	r5, r5, #3
 8001aca:	4021      	ands	r1, r4
 8001acc:	074a      	lsls	r2, r1, #29
 8001ace:	432a      	orrs	r2, r5
 8001ad0:	057c      	lsls	r4, r7, #21
 8001ad2:	024d      	lsls	r5, r1, #9
 8001ad4:	0b2d      	lsrs	r5, r5, #12
 8001ad6:	0d64      	lsrs	r4, r4, #21
 8001ad8:	401e      	ands	r6, r3
 8001ada:	0524      	lsls	r4, r4, #20
 8001adc:	432c      	orrs	r4, r5
 8001ade:	07f6      	lsls	r6, r6, #31
 8001ae0:	4334      	orrs	r4, r6
 8001ae2:	0010      	movs	r0, r2
 8001ae4:	0021      	movs	r1, r4
 8001ae6:	b005      	add	sp, #20
 8001ae8:	bcf0      	pop	{r4, r5, r6, r7}
 8001aea:	46bb      	mov	fp, r7
 8001aec:	46b2      	mov	sl, r6
 8001aee:	46a9      	mov	r9, r5
 8001af0:	46a0      	mov	r8, r4
 8001af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001af4:	2d00      	cmp	r5, #0
 8001af6:	dc00      	bgt.n	8001afa <__aeabi_dsub+0x172>
 8001af8:	e2d0      	b.n	800209c <__aeabi_dsub+0x714>
 8001afa:	4649      	mov	r1, r9
 8001afc:	2900      	cmp	r1, #0
 8001afe:	d000      	beq.n	8001b02 <__aeabi_dsub+0x17a>
 8001b00:	e0d4      	b.n	8001cac <__aeabi_dsub+0x324>
 8001b02:	4661      	mov	r1, ip
 8001b04:	9b02      	ldr	r3, [sp, #8]
 8001b06:	4319      	orrs	r1, r3
 8001b08:	d100      	bne.n	8001b0c <__aeabi_dsub+0x184>
 8001b0a:	e12b      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001b0c:	1e69      	subs	r1, r5, #1
 8001b0e:	2d01      	cmp	r5, #1
 8001b10:	d100      	bne.n	8001b14 <__aeabi_dsub+0x18c>
 8001b12:	e1d9      	b.n	8001ec8 <__aeabi_dsub+0x540>
 8001b14:	4295      	cmp	r5, r2
 8001b16:	d100      	bne.n	8001b1a <__aeabi_dsub+0x192>
 8001b18:	e10a      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001b1a:	2501      	movs	r5, #1
 8001b1c:	2938      	cmp	r1, #56	@ 0x38
 8001b1e:	dc17      	bgt.n	8001b50 <__aeabi_dsub+0x1c8>
 8001b20:	468a      	mov	sl, r1
 8001b22:	4653      	mov	r3, sl
 8001b24:	2b1f      	cmp	r3, #31
 8001b26:	dd00      	ble.n	8001b2a <__aeabi_dsub+0x1a2>
 8001b28:	e1e7      	b.n	8001efa <__aeabi_dsub+0x572>
 8001b2a:	2220      	movs	r2, #32
 8001b2c:	1ad2      	subs	r2, r2, r3
 8001b2e:	9b02      	ldr	r3, [sp, #8]
 8001b30:	4661      	mov	r1, ip
 8001b32:	4093      	lsls	r3, r2
 8001b34:	001d      	movs	r5, r3
 8001b36:	4653      	mov	r3, sl
 8001b38:	40d9      	lsrs	r1, r3
 8001b3a:	4663      	mov	r3, ip
 8001b3c:	4093      	lsls	r3, r2
 8001b3e:	001a      	movs	r2, r3
 8001b40:	430d      	orrs	r5, r1
 8001b42:	1e51      	subs	r1, r2, #1
 8001b44:	418a      	sbcs	r2, r1
 8001b46:	4653      	mov	r3, sl
 8001b48:	4315      	orrs	r5, r2
 8001b4a:	9a02      	ldr	r2, [sp, #8]
 8001b4c:	40da      	lsrs	r2, r3
 8001b4e:	18a4      	adds	r4, r4, r2
 8001b50:	182d      	adds	r5, r5, r0
 8001b52:	4285      	cmp	r5, r0
 8001b54:	4180      	sbcs	r0, r0
 8001b56:	4240      	negs	r0, r0
 8001b58:	1824      	adds	r4, r4, r0
 8001b5a:	0223      	lsls	r3, r4, #8
 8001b5c:	d400      	bmi.n	8001b60 <__aeabi_dsub+0x1d8>
 8001b5e:	e0b6      	b.n	8001cce <__aeabi_dsub+0x346>
 8001b60:	4b5e      	ldr	r3, [pc, #376]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001b62:	3701      	adds	r7, #1
 8001b64:	429f      	cmp	r7, r3
 8001b66:	d100      	bne.n	8001b6a <__aeabi_dsub+0x1e2>
 8001b68:	e0ad      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001b6a:	2101      	movs	r1, #1
 8001b6c:	4b5c      	ldr	r3, [pc, #368]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001b6e:	086a      	lsrs	r2, r5, #1
 8001b70:	401c      	ands	r4, r3
 8001b72:	4029      	ands	r1, r5
 8001b74:	430a      	orrs	r2, r1
 8001b76:	07e5      	lsls	r5, r4, #31
 8001b78:	4315      	orrs	r5, r2
 8001b7a:	0864      	lsrs	r4, r4, #1
 8001b7c:	e78d      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001b7e:	4a59      	ldr	r2, [pc, #356]	@ (8001ce4 <__aeabi_dsub+0x35c>)
 8001b80:	9b02      	ldr	r3, [sp, #8]
 8001b82:	4692      	mov	sl, r2
 8001b84:	4662      	mov	r2, ip
 8001b86:	44ba      	add	sl, r7
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	d02c      	beq.n	8001be6 <__aeabi_dsub+0x25e>
 8001b8c:	428e      	cmp	r6, r1
 8001b8e:	d02e      	beq.n	8001bee <__aeabi_dsub+0x266>
 8001b90:	4652      	mov	r2, sl
 8001b92:	2a00      	cmp	r2, #0
 8001b94:	d060      	beq.n	8001c58 <__aeabi_dsub+0x2d0>
 8001b96:	2f00      	cmp	r7, #0
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x214>
 8001b9a:	e0db      	b.n	8001d54 <__aeabi_dsub+0x3cc>
 8001b9c:	4663      	mov	r3, ip
 8001b9e:	000e      	movs	r6, r1
 8001ba0:	9c02      	ldr	r4, [sp, #8]
 8001ba2:	08d8      	lsrs	r0, r3, #3
 8001ba4:	0762      	lsls	r2, r4, #29
 8001ba6:	4302      	orrs	r2, r0
 8001ba8:	08e4      	lsrs	r4, r4, #3
 8001baa:	0013      	movs	r3, r2
 8001bac:	4323      	orrs	r3, r4
 8001bae:	d100      	bne.n	8001bb2 <__aeabi_dsub+0x22a>
 8001bb0:	e254      	b.n	800205c <__aeabi_dsub+0x6d4>
 8001bb2:	2580      	movs	r5, #128	@ 0x80
 8001bb4:	032d      	lsls	r5, r5, #12
 8001bb6:	4325      	orrs	r5, r4
 8001bb8:	032d      	lsls	r5, r5, #12
 8001bba:	4c48      	ldr	r4, [pc, #288]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001bbc:	0b2d      	lsrs	r5, r5, #12
 8001bbe:	e78c      	b.n	8001ada <__aeabi_dsub+0x152>
 8001bc0:	4661      	mov	r1, ip
 8001bc2:	9b02      	ldr	r3, [sp, #8]
 8001bc4:	4319      	orrs	r1, r3
 8001bc6:	d100      	bne.n	8001bca <__aeabi_dsub+0x242>
 8001bc8:	e0cc      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001bca:	0029      	movs	r1, r5
 8001bcc:	3901      	subs	r1, #1
 8001bce:	2d01      	cmp	r5, #1
 8001bd0:	d100      	bne.n	8001bd4 <__aeabi_dsub+0x24c>
 8001bd2:	e188      	b.n	8001ee6 <__aeabi_dsub+0x55e>
 8001bd4:	4295      	cmp	r5, r2
 8001bd6:	d100      	bne.n	8001bda <__aeabi_dsub+0x252>
 8001bd8:	e0aa      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001bda:	2501      	movs	r5, #1
 8001bdc:	2938      	cmp	r1, #56	@ 0x38
 8001bde:	dd00      	ble.n	8001be2 <__aeabi_dsub+0x25a>
 8001be0:	e72f      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001be2:	468a      	mov	sl, r1
 8001be4:	e718      	b.n	8001a18 <__aeabi_dsub+0x90>
 8001be6:	2201      	movs	r2, #1
 8001be8:	4051      	eors	r1, r2
 8001bea:	428e      	cmp	r6, r1
 8001bec:	d1d0      	bne.n	8001b90 <__aeabi_dsub+0x208>
 8001bee:	4653      	mov	r3, sl
 8001bf0:	2b00      	cmp	r3, #0
 8001bf2:	d100      	bne.n	8001bf6 <__aeabi_dsub+0x26e>
 8001bf4:	e0be      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 8001bf6:	2f00      	cmp	r7, #0
 8001bf8:	d000      	beq.n	8001bfc <__aeabi_dsub+0x274>
 8001bfa:	e138      	b.n	8001e6e <__aeabi_dsub+0x4e6>
 8001bfc:	46ca      	mov	sl, r9
 8001bfe:	0022      	movs	r2, r4
 8001c00:	4302      	orrs	r2, r0
 8001c02:	d100      	bne.n	8001c06 <__aeabi_dsub+0x27e>
 8001c04:	e1e2      	b.n	8001fcc <__aeabi_dsub+0x644>
 8001c06:	4653      	mov	r3, sl
 8001c08:	1e59      	subs	r1, r3, #1
 8001c0a:	2b01      	cmp	r3, #1
 8001c0c:	d100      	bne.n	8001c10 <__aeabi_dsub+0x288>
 8001c0e:	e20d      	b.n	800202c <__aeabi_dsub+0x6a4>
 8001c10:	4a32      	ldr	r2, [pc, #200]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001c12:	4592      	cmp	sl, r2
 8001c14:	d100      	bne.n	8001c18 <__aeabi_dsub+0x290>
 8001c16:	e1d2      	b.n	8001fbe <__aeabi_dsub+0x636>
 8001c18:	2701      	movs	r7, #1
 8001c1a:	2938      	cmp	r1, #56	@ 0x38
 8001c1c:	dc13      	bgt.n	8001c46 <__aeabi_dsub+0x2be>
 8001c1e:	291f      	cmp	r1, #31
 8001c20:	dd00      	ble.n	8001c24 <__aeabi_dsub+0x29c>
 8001c22:	e1ee      	b.n	8002002 <__aeabi_dsub+0x67a>
 8001c24:	2220      	movs	r2, #32
 8001c26:	9b02      	ldr	r3, [sp, #8]
 8001c28:	1a52      	subs	r2, r2, r1
 8001c2a:	0025      	movs	r5, r4
 8001c2c:	0007      	movs	r7, r0
 8001c2e:	469a      	mov	sl, r3
 8001c30:	40cc      	lsrs	r4, r1
 8001c32:	4090      	lsls	r0, r2
 8001c34:	4095      	lsls	r5, r2
 8001c36:	40cf      	lsrs	r7, r1
 8001c38:	44a2      	add	sl, r4
 8001c3a:	1e42      	subs	r2, r0, #1
 8001c3c:	4190      	sbcs	r0, r2
 8001c3e:	4653      	mov	r3, sl
 8001c40:	432f      	orrs	r7, r5
 8001c42:	4307      	orrs	r7, r0
 8001c44:	9302      	str	r3, [sp, #8]
 8001c46:	003d      	movs	r5, r7
 8001c48:	4465      	add	r5, ip
 8001c4a:	4565      	cmp	r5, ip
 8001c4c:	4192      	sbcs	r2, r2
 8001c4e:	9b02      	ldr	r3, [sp, #8]
 8001c50:	4252      	negs	r2, r2
 8001c52:	464f      	mov	r7, r9
 8001c54:	18d4      	adds	r4, r2, r3
 8001c56:	e780      	b.n	8001b5a <__aeabi_dsub+0x1d2>
 8001c58:	4a23      	ldr	r2, [pc, #140]	@ (8001ce8 <__aeabi_dsub+0x360>)
 8001c5a:	1c7d      	adds	r5, r7, #1
 8001c5c:	4215      	tst	r5, r2
 8001c5e:	d000      	beq.n	8001c62 <__aeabi_dsub+0x2da>
 8001c60:	e0aa      	b.n	8001db8 <__aeabi_dsub+0x430>
 8001c62:	4662      	mov	r2, ip
 8001c64:	0025      	movs	r5, r4
 8001c66:	9b02      	ldr	r3, [sp, #8]
 8001c68:	4305      	orrs	r5, r0
 8001c6a:	431a      	orrs	r2, r3
 8001c6c:	2f00      	cmp	r7, #0
 8001c6e:	d000      	beq.n	8001c72 <__aeabi_dsub+0x2ea>
 8001c70:	e0f5      	b.n	8001e5e <__aeabi_dsub+0x4d6>
 8001c72:	2d00      	cmp	r5, #0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x2f0>
 8001c76:	e16b      	b.n	8001f50 <__aeabi_dsub+0x5c8>
 8001c78:	2a00      	cmp	r2, #0
 8001c7a:	d100      	bne.n	8001c7e <__aeabi_dsub+0x2f6>
 8001c7c:	e152      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001c7e:	4663      	mov	r3, ip
 8001c80:	1ac5      	subs	r5, r0, r3
 8001c82:	9b02      	ldr	r3, [sp, #8]
 8001c84:	1ae2      	subs	r2, r4, r3
 8001c86:	42a8      	cmp	r0, r5
 8001c88:	419b      	sbcs	r3, r3
 8001c8a:	425b      	negs	r3, r3
 8001c8c:	1ad3      	subs	r3, r2, r3
 8001c8e:	021a      	lsls	r2, r3, #8
 8001c90:	d400      	bmi.n	8001c94 <__aeabi_dsub+0x30c>
 8001c92:	e1d5      	b.n	8002040 <__aeabi_dsub+0x6b8>
 8001c94:	4663      	mov	r3, ip
 8001c96:	1a1d      	subs	r5, r3, r0
 8001c98:	45ac      	cmp	ip, r5
 8001c9a:	4192      	sbcs	r2, r2
 8001c9c:	2601      	movs	r6, #1
 8001c9e:	9b02      	ldr	r3, [sp, #8]
 8001ca0:	4252      	negs	r2, r2
 8001ca2:	1b1c      	subs	r4, r3, r4
 8001ca4:	4688      	mov	r8, r1
 8001ca6:	1aa4      	subs	r4, r4, r2
 8001ca8:	400e      	ands	r6, r1
 8001caa:	e6f6      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001cac:	4297      	cmp	r7, r2
 8001cae:	d03f      	beq.n	8001d30 <__aeabi_dsub+0x3a8>
 8001cb0:	4652      	mov	r2, sl
 8001cb2:	2501      	movs	r5, #1
 8001cb4:	2a38      	cmp	r2, #56	@ 0x38
 8001cb6:	dd00      	ble.n	8001cba <__aeabi_dsub+0x332>
 8001cb8:	e74a      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001cba:	2280      	movs	r2, #128	@ 0x80
 8001cbc:	9b02      	ldr	r3, [sp, #8]
 8001cbe:	0412      	lsls	r2, r2, #16
 8001cc0:	4313      	orrs	r3, r2
 8001cc2:	9302      	str	r3, [sp, #8]
 8001cc4:	e72d      	b.n	8001b22 <__aeabi_dsub+0x19a>
 8001cc6:	003c      	movs	r4, r7
 8001cc8:	2500      	movs	r5, #0
 8001cca:	2200      	movs	r2, #0
 8001ccc:	e705      	b.n	8001ada <__aeabi_dsub+0x152>
 8001cce:	2307      	movs	r3, #7
 8001cd0:	402b      	ands	r3, r5
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d000      	beq.n	8001cd8 <__aeabi_dsub+0x350>
 8001cd6:	e6e2      	b.n	8001a9e <__aeabi_dsub+0x116>
 8001cd8:	e06b      	b.n	8001db2 <__aeabi_dsub+0x42a>
 8001cda:	46c0      	nop			@ (mov r8, r8)
 8001cdc:	000007ff 	.word	0x000007ff
 8001ce0:	ff7fffff 	.word	0xff7fffff
 8001ce4:	fffff801 	.word	0xfffff801
 8001ce8:	000007fe 	.word	0x000007fe
 8001cec:	0028      	movs	r0, r5
 8001cee:	f000 fa97 	bl	8002220 <__clzsi2>
 8001cf2:	0003      	movs	r3, r0
 8001cf4:	3318      	adds	r3, #24
 8001cf6:	2b1f      	cmp	r3, #31
 8001cf8:	dc00      	bgt.n	8001cfc <__aeabi_dsub+0x374>
 8001cfa:	e6b4      	b.n	8001a66 <__aeabi_dsub+0xde>
 8001cfc:	002a      	movs	r2, r5
 8001cfe:	3808      	subs	r0, #8
 8001d00:	4082      	lsls	r2, r0
 8001d02:	429f      	cmp	r7, r3
 8001d04:	dd00      	ble.n	8001d08 <__aeabi_dsub+0x380>
 8001d06:	e0b9      	b.n	8001e7c <__aeabi_dsub+0x4f4>
 8001d08:	1bdb      	subs	r3, r3, r7
 8001d0a:	1c58      	adds	r0, r3, #1
 8001d0c:	281f      	cmp	r0, #31
 8001d0e:	dc00      	bgt.n	8001d12 <__aeabi_dsub+0x38a>
 8001d10:	e1a0      	b.n	8002054 <__aeabi_dsub+0x6cc>
 8001d12:	0015      	movs	r5, r2
 8001d14:	3b1f      	subs	r3, #31
 8001d16:	40dd      	lsrs	r5, r3
 8001d18:	2820      	cmp	r0, #32
 8001d1a:	d005      	beq.n	8001d28 <__aeabi_dsub+0x3a0>
 8001d1c:	2340      	movs	r3, #64	@ 0x40
 8001d1e:	1a1b      	subs	r3, r3, r0
 8001d20:	409a      	lsls	r2, r3
 8001d22:	1e53      	subs	r3, r2, #1
 8001d24:	419a      	sbcs	r2, r3
 8001d26:	4315      	orrs	r5, r2
 8001d28:	2307      	movs	r3, #7
 8001d2a:	2700      	movs	r7, #0
 8001d2c:	402b      	ands	r3, r5
 8001d2e:	e7d0      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001d30:	08c0      	lsrs	r0, r0, #3
 8001d32:	0762      	lsls	r2, r4, #29
 8001d34:	4302      	orrs	r2, r0
 8001d36:	08e4      	lsrs	r4, r4, #3
 8001d38:	e737      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d3a:	08ea      	lsrs	r2, r5, #3
 8001d3c:	0763      	lsls	r3, r4, #29
 8001d3e:	431a      	orrs	r2, r3
 8001d40:	4bd3      	ldr	r3, [pc, #844]	@ (8002090 <__aeabi_dsub+0x708>)
 8001d42:	08e4      	lsrs	r4, r4, #3
 8001d44:	429f      	cmp	r7, r3
 8001d46:	d100      	bne.n	8001d4a <__aeabi_dsub+0x3c2>
 8001d48:	e72f      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d4a:	0324      	lsls	r4, r4, #12
 8001d4c:	0b25      	lsrs	r5, r4, #12
 8001d4e:	057c      	lsls	r4, r7, #21
 8001d50:	0d64      	lsrs	r4, r4, #21
 8001d52:	e6c2      	b.n	8001ada <__aeabi_dsub+0x152>
 8001d54:	46ca      	mov	sl, r9
 8001d56:	0022      	movs	r2, r4
 8001d58:	4302      	orrs	r2, r0
 8001d5a:	d158      	bne.n	8001e0e <__aeabi_dsub+0x486>
 8001d5c:	4663      	mov	r3, ip
 8001d5e:	000e      	movs	r6, r1
 8001d60:	9c02      	ldr	r4, [sp, #8]
 8001d62:	9303      	str	r3, [sp, #12]
 8001d64:	9b03      	ldr	r3, [sp, #12]
 8001d66:	4657      	mov	r7, sl
 8001d68:	08da      	lsrs	r2, r3, #3
 8001d6a:	e7e7      	b.n	8001d3c <__aeabi_dsub+0x3b4>
 8001d6c:	4cc9      	ldr	r4, [pc, #804]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001d6e:	1aff      	subs	r7, r7, r3
 8001d70:	4014      	ands	r4, r2
 8001d72:	e692      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001d74:	4dc8      	ldr	r5, [pc, #800]	@ (8002098 <__aeabi_dsub+0x710>)
 8001d76:	1c7a      	adds	r2, r7, #1
 8001d78:	422a      	tst	r2, r5
 8001d7a:	d000      	beq.n	8001d7e <__aeabi_dsub+0x3f6>
 8001d7c:	e084      	b.n	8001e88 <__aeabi_dsub+0x500>
 8001d7e:	0022      	movs	r2, r4
 8001d80:	4302      	orrs	r2, r0
 8001d82:	2f00      	cmp	r7, #0
 8001d84:	d000      	beq.n	8001d88 <__aeabi_dsub+0x400>
 8001d86:	e0ef      	b.n	8001f68 <__aeabi_dsub+0x5e0>
 8001d88:	2a00      	cmp	r2, #0
 8001d8a:	d100      	bne.n	8001d8e <__aeabi_dsub+0x406>
 8001d8c:	e0e5      	b.n	8001f5a <__aeabi_dsub+0x5d2>
 8001d8e:	4662      	mov	r2, ip
 8001d90:	9902      	ldr	r1, [sp, #8]
 8001d92:	430a      	orrs	r2, r1
 8001d94:	d100      	bne.n	8001d98 <__aeabi_dsub+0x410>
 8001d96:	e0c5      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001d98:	4663      	mov	r3, ip
 8001d9a:	18c5      	adds	r5, r0, r3
 8001d9c:	468c      	mov	ip, r1
 8001d9e:	4285      	cmp	r5, r0
 8001da0:	4180      	sbcs	r0, r0
 8001da2:	4464      	add	r4, ip
 8001da4:	4240      	negs	r0, r0
 8001da6:	1824      	adds	r4, r4, r0
 8001da8:	0223      	lsls	r3, r4, #8
 8001daa:	d502      	bpl.n	8001db2 <__aeabi_dsub+0x42a>
 8001dac:	4bb9      	ldr	r3, [pc, #740]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001dae:	3701      	adds	r7, #1
 8001db0:	401c      	ands	r4, r3
 8001db2:	46ba      	mov	sl, r7
 8001db4:	9503      	str	r5, [sp, #12]
 8001db6:	e7d5      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001db8:	4662      	mov	r2, ip
 8001dba:	1a85      	subs	r5, r0, r2
 8001dbc:	42a8      	cmp	r0, r5
 8001dbe:	4192      	sbcs	r2, r2
 8001dc0:	4252      	negs	r2, r2
 8001dc2:	4691      	mov	r9, r2
 8001dc4:	9b02      	ldr	r3, [sp, #8]
 8001dc6:	1ae3      	subs	r3, r4, r3
 8001dc8:	001a      	movs	r2, r3
 8001dca:	464b      	mov	r3, r9
 8001dcc:	1ad2      	subs	r2, r2, r3
 8001dce:	0013      	movs	r3, r2
 8001dd0:	4691      	mov	r9, r2
 8001dd2:	021a      	lsls	r2, r3, #8
 8001dd4:	d46c      	bmi.n	8001eb0 <__aeabi_dsub+0x528>
 8001dd6:	464a      	mov	r2, r9
 8001dd8:	464c      	mov	r4, r9
 8001dda:	432a      	orrs	r2, r5
 8001ddc:	d000      	beq.n	8001de0 <__aeabi_dsub+0x458>
 8001dde:	e63a      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001de0:	2600      	movs	r6, #0
 8001de2:	2400      	movs	r4, #0
 8001de4:	2500      	movs	r5, #0
 8001de6:	e678      	b.n	8001ada <__aeabi_dsub+0x152>
 8001de8:	9902      	ldr	r1, [sp, #8]
 8001dea:	4653      	mov	r3, sl
 8001dec:	000d      	movs	r5, r1
 8001dee:	3a20      	subs	r2, #32
 8001df0:	40d5      	lsrs	r5, r2
 8001df2:	2b20      	cmp	r3, #32
 8001df4:	d006      	beq.n	8001e04 <__aeabi_dsub+0x47c>
 8001df6:	2240      	movs	r2, #64	@ 0x40
 8001df8:	1ad2      	subs	r2, r2, r3
 8001dfa:	000b      	movs	r3, r1
 8001dfc:	4093      	lsls	r3, r2
 8001dfe:	4662      	mov	r2, ip
 8001e00:	431a      	orrs	r2, r3
 8001e02:	4693      	mov	fp, r2
 8001e04:	465b      	mov	r3, fp
 8001e06:	1e5a      	subs	r2, r3, #1
 8001e08:	4193      	sbcs	r3, r2
 8001e0a:	431d      	orrs	r5, r3
 8001e0c:	e619      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001e0e:	4653      	mov	r3, sl
 8001e10:	1e5a      	subs	r2, r3, #1
 8001e12:	2b01      	cmp	r3, #1
 8001e14:	d100      	bne.n	8001e18 <__aeabi_dsub+0x490>
 8001e16:	e0c6      	b.n	8001fa6 <__aeabi_dsub+0x61e>
 8001e18:	4e9d      	ldr	r6, [pc, #628]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e1a:	45b2      	cmp	sl, r6
 8001e1c:	d100      	bne.n	8001e20 <__aeabi_dsub+0x498>
 8001e1e:	e6bd      	b.n	8001b9c <__aeabi_dsub+0x214>
 8001e20:	4688      	mov	r8, r1
 8001e22:	000e      	movs	r6, r1
 8001e24:	2501      	movs	r5, #1
 8001e26:	2a38      	cmp	r2, #56	@ 0x38
 8001e28:	dc10      	bgt.n	8001e4c <__aeabi_dsub+0x4c4>
 8001e2a:	2a1f      	cmp	r2, #31
 8001e2c:	dc7f      	bgt.n	8001f2e <__aeabi_dsub+0x5a6>
 8001e2e:	2120      	movs	r1, #32
 8001e30:	0025      	movs	r5, r4
 8001e32:	1a89      	subs	r1, r1, r2
 8001e34:	0007      	movs	r7, r0
 8001e36:	4088      	lsls	r0, r1
 8001e38:	408d      	lsls	r5, r1
 8001e3a:	40d7      	lsrs	r7, r2
 8001e3c:	40d4      	lsrs	r4, r2
 8001e3e:	1e41      	subs	r1, r0, #1
 8001e40:	4188      	sbcs	r0, r1
 8001e42:	9b02      	ldr	r3, [sp, #8]
 8001e44:	433d      	orrs	r5, r7
 8001e46:	1b1b      	subs	r3, r3, r4
 8001e48:	4305      	orrs	r5, r0
 8001e4a:	9302      	str	r3, [sp, #8]
 8001e4c:	4662      	mov	r2, ip
 8001e4e:	1b55      	subs	r5, r2, r5
 8001e50:	45ac      	cmp	ip, r5
 8001e52:	4192      	sbcs	r2, r2
 8001e54:	9b02      	ldr	r3, [sp, #8]
 8001e56:	4252      	negs	r2, r2
 8001e58:	464f      	mov	r7, r9
 8001e5a:	1a9c      	subs	r4, r3, r2
 8001e5c:	e5f6      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001e5e:	2d00      	cmp	r5, #0
 8001e60:	d000      	beq.n	8001e64 <__aeabi_dsub+0x4dc>
 8001e62:	e0b7      	b.n	8001fd4 <__aeabi_dsub+0x64c>
 8001e64:	2a00      	cmp	r2, #0
 8001e66:	d100      	bne.n	8001e6a <__aeabi_dsub+0x4e2>
 8001e68:	e0f0      	b.n	800204c <__aeabi_dsub+0x6c4>
 8001e6a:	2601      	movs	r6, #1
 8001e6c:	400e      	ands	r6, r1
 8001e6e:	4663      	mov	r3, ip
 8001e70:	9802      	ldr	r0, [sp, #8]
 8001e72:	08d9      	lsrs	r1, r3, #3
 8001e74:	0742      	lsls	r2, r0, #29
 8001e76:	430a      	orrs	r2, r1
 8001e78:	08c4      	lsrs	r4, r0, #3
 8001e7a:	e696      	b.n	8001baa <__aeabi_dsub+0x222>
 8001e7c:	4c85      	ldr	r4, [pc, #532]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001e7e:	1aff      	subs	r7, r7, r3
 8001e80:	4014      	ands	r4, r2
 8001e82:	0762      	lsls	r2, r4, #29
 8001e84:	08e4      	lsrs	r4, r4, #3
 8001e86:	e760      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001e88:	4981      	ldr	r1, [pc, #516]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e8a:	428a      	cmp	r2, r1
 8001e8c:	d100      	bne.n	8001e90 <__aeabi_dsub+0x508>
 8001e8e:	e0c9      	b.n	8002024 <__aeabi_dsub+0x69c>
 8001e90:	4663      	mov	r3, ip
 8001e92:	18c1      	adds	r1, r0, r3
 8001e94:	4281      	cmp	r1, r0
 8001e96:	4180      	sbcs	r0, r0
 8001e98:	9b02      	ldr	r3, [sp, #8]
 8001e9a:	4240      	negs	r0, r0
 8001e9c:	18e3      	adds	r3, r4, r3
 8001e9e:	181b      	adds	r3, r3, r0
 8001ea0:	07dd      	lsls	r5, r3, #31
 8001ea2:	085c      	lsrs	r4, r3, #1
 8001ea4:	2307      	movs	r3, #7
 8001ea6:	0849      	lsrs	r1, r1, #1
 8001ea8:	430d      	orrs	r5, r1
 8001eaa:	0017      	movs	r7, r2
 8001eac:	402b      	ands	r3, r5
 8001eae:	e710      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001eb0:	4663      	mov	r3, ip
 8001eb2:	1a1d      	subs	r5, r3, r0
 8001eb4:	45ac      	cmp	ip, r5
 8001eb6:	4192      	sbcs	r2, r2
 8001eb8:	2601      	movs	r6, #1
 8001eba:	9b02      	ldr	r3, [sp, #8]
 8001ebc:	4252      	negs	r2, r2
 8001ebe:	1b1c      	subs	r4, r3, r4
 8001ec0:	4688      	mov	r8, r1
 8001ec2:	1aa4      	subs	r4, r4, r2
 8001ec4:	400e      	ands	r6, r1
 8001ec6:	e5c6      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001ec8:	4663      	mov	r3, ip
 8001eca:	18c5      	adds	r5, r0, r3
 8001ecc:	9b02      	ldr	r3, [sp, #8]
 8001ece:	4285      	cmp	r5, r0
 8001ed0:	4180      	sbcs	r0, r0
 8001ed2:	469c      	mov	ip, r3
 8001ed4:	4240      	negs	r0, r0
 8001ed6:	4464      	add	r4, ip
 8001ed8:	1824      	adds	r4, r4, r0
 8001eda:	2701      	movs	r7, #1
 8001edc:	0223      	lsls	r3, r4, #8
 8001ede:	d400      	bmi.n	8001ee2 <__aeabi_dsub+0x55a>
 8001ee0:	e6f5      	b.n	8001cce <__aeabi_dsub+0x346>
 8001ee2:	2702      	movs	r7, #2
 8001ee4:	e641      	b.n	8001b6a <__aeabi_dsub+0x1e2>
 8001ee6:	4663      	mov	r3, ip
 8001ee8:	1ac5      	subs	r5, r0, r3
 8001eea:	42a8      	cmp	r0, r5
 8001eec:	4180      	sbcs	r0, r0
 8001eee:	9b02      	ldr	r3, [sp, #8]
 8001ef0:	4240      	negs	r0, r0
 8001ef2:	1ae4      	subs	r4, r4, r3
 8001ef4:	2701      	movs	r7, #1
 8001ef6:	1a24      	subs	r4, r4, r0
 8001ef8:	e5a8      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001efa:	9d02      	ldr	r5, [sp, #8]
 8001efc:	4652      	mov	r2, sl
 8001efe:	002b      	movs	r3, r5
 8001f00:	3a20      	subs	r2, #32
 8001f02:	40d3      	lsrs	r3, r2
 8001f04:	0019      	movs	r1, r3
 8001f06:	4653      	mov	r3, sl
 8001f08:	2b20      	cmp	r3, #32
 8001f0a:	d006      	beq.n	8001f1a <__aeabi_dsub+0x592>
 8001f0c:	2240      	movs	r2, #64	@ 0x40
 8001f0e:	1ad2      	subs	r2, r2, r3
 8001f10:	002b      	movs	r3, r5
 8001f12:	4093      	lsls	r3, r2
 8001f14:	4662      	mov	r2, ip
 8001f16:	431a      	orrs	r2, r3
 8001f18:	4693      	mov	fp, r2
 8001f1a:	465d      	mov	r5, fp
 8001f1c:	1e6b      	subs	r3, r5, #1
 8001f1e:	419d      	sbcs	r5, r3
 8001f20:	430d      	orrs	r5, r1
 8001f22:	e615      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001f24:	0762      	lsls	r2, r4, #29
 8001f26:	08c0      	lsrs	r0, r0, #3
 8001f28:	4302      	orrs	r2, r0
 8001f2a:	08e4      	lsrs	r4, r4, #3
 8001f2c:	e70d      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f2e:	0011      	movs	r1, r2
 8001f30:	0027      	movs	r7, r4
 8001f32:	3920      	subs	r1, #32
 8001f34:	40cf      	lsrs	r7, r1
 8001f36:	2a20      	cmp	r2, #32
 8001f38:	d005      	beq.n	8001f46 <__aeabi_dsub+0x5be>
 8001f3a:	2140      	movs	r1, #64	@ 0x40
 8001f3c:	1a8a      	subs	r2, r1, r2
 8001f3e:	4094      	lsls	r4, r2
 8001f40:	0025      	movs	r5, r4
 8001f42:	4305      	orrs	r5, r0
 8001f44:	9503      	str	r5, [sp, #12]
 8001f46:	9d03      	ldr	r5, [sp, #12]
 8001f48:	1e6a      	subs	r2, r5, #1
 8001f4a:	4195      	sbcs	r5, r2
 8001f4c:	433d      	orrs	r5, r7
 8001f4e:	e77d      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 8001f50:	2a00      	cmp	r2, #0
 8001f52:	d100      	bne.n	8001f56 <__aeabi_dsub+0x5ce>
 8001f54:	e744      	b.n	8001de0 <__aeabi_dsub+0x458>
 8001f56:	2601      	movs	r6, #1
 8001f58:	400e      	ands	r6, r1
 8001f5a:	4663      	mov	r3, ip
 8001f5c:	08d9      	lsrs	r1, r3, #3
 8001f5e:	9b02      	ldr	r3, [sp, #8]
 8001f60:	075a      	lsls	r2, r3, #29
 8001f62:	430a      	orrs	r2, r1
 8001f64:	08dc      	lsrs	r4, r3, #3
 8001f66:	e6f0      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f68:	2a00      	cmp	r2, #0
 8001f6a:	d028      	beq.n	8001fbe <__aeabi_dsub+0x636>
 8001f6c:	4662      	mov	r2, ip
 8001f6e:	9f02      	ldr	r7, [sp, #8]
 8001f70:	08c0      	lsrs	r0, r0, #3
 8001f72:	433a      	orrs	r2, r7
 8001f74:	d100      	bne.n	8001f78 <__aeabi_dsub+0x5f0>
 8001f76:	e6dc      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001f78:	0762      	lsls	r2, r4, #29
 8001f7a:	4310      	orrs	r0, r2
 8001f7c:	2280      	movs	r2, #128	@ 0x80
 8001f7e:	08e4      	lsrs	r4, r4, #3
 8001f80:	0312      	lsls	r2, r2, #12
 8001f82:	4214      	tst	r4, r2
 8001f84:	d009      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001f86:	08fd      	lsrs	r5, r7, #3
 8001f88:	4215      	tst	r5, r2
 8001f8a:	d106      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001f8c:	4663      	mov	r3, ip
 8001f8e:	2601      	movs	r6, #1
 8001f90:	002c      	movs	r4, r5
 8001f92:	08d8      	lsrs	r0, r3, #3
 8001f94:	077b      	lsls	r3, r7, #29
 8001f96:	4318      	orrs	r0, r3
 8001f98:	400e      	ands	r6, r1
 8001f9a:	0f42      	lsrs	r2, r0, #29
 8001f9c:	00c0      	lsls	r0, r0, #3
 8001f9e:	08c0      	lsrs	r0, r0, #3
 8001fa0:	0752      	lsls	r2, r2, #29
 8001fa2:	4302      	orrs	r2, r0
 8001fa4:	e601      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fa6:	4663      	mov	r3, ip
 8001fa8:	1a1d      	subs	r5, r3, r0
 8001faa:	45ac      	cmp	ip, r5
 8001fac:	4192      	sbcs	r2, r2
 8001fae:	9b02      	ldr	r3, [sp, #8]
 8001fb0:	4252      	negs	r2, r2
 8001fb2:	1b1c      	subs	r4, r3, r4
 8001fb4:	000e      	movs	r6, r1
 8001fb6:	4688      	mov	r8, r1
 8001fb8:	2701      	movs	r7, #1
 8001fba:	1aa4      	subs	r4, r4, r2
 8001fbc:	e546      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001fbe:	4663      	mov	r3, ip
 8001fc0:	08d9      	lsrs	r1, r3, #3
 8001fc2:	9b02      	ldr	r3, [sp, #8]
 8001fc4:	075a      	lsls	r2, r3, #29
 8001fc6:	430a      	orrs	r2, r1
 8001fc8:	08dc      	lsrs	r4, r3, #3
 8001fca:	e5ee      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fcc:	4663      	mov	r3, ip
 8001fce:	9c02      	ldr	r4, [sp, #8]
 8001fd0:	9303      	str	r3, [sp, #12]
 8001fd2:	e6c7      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001fd4:	08c0      	lsrs	r0, r0, #3
 8001fd6:	2a00      	cmp	r2, #0
 8001fd8:	d100      	bne.n	8001fdc <__aeabi_dsub+0x654>
 8001fda:	e6aa      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001fdc:	0762      	lsls	r2, r4, #29
 8001fde:	4310      	orrs	r0, r2
 8001fe0:	2280      	movs	r2, #128	@ 0x80
 8001fe2:	08e4      	lsrs	r4, r4, #3
 8001fe4:	0312      	lsls	r2, r2, #12
 8001fe6:	4214      	tst	r4, r2
 8001fe8:	d0d7      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001fea:	9f02      	ldr	r7, [sp, #8]
 8001fec:	08fd      	lsrs	r5, r7, #3
 8001fee:	4215      	tst	r5, r2
 8001ff0:	d1d3      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001ff2:	4663      	mov	r3, ip
 8001ff4:	2601      	movs	r6, #1
 8001ff6:	08d8      	lsrs	r0, r3, #3
 8001ff8:	077b      	lsls	r3, r7, #29
 8001ffa:	002c      	movs	r4, r5
 8001ffc:	4318      	orrs	r0, r3
 8001ffe:	400e      	ands	r6, r1
 8002000:	e7cb      	b.n	8001f9a <__aeabi_dsub+0x612>
 8002002:	000a      	movs	r2, r1
 8002004:	0027      	movs	r7, r4
 8002006:	3a20      	subs	r2, #32
 8002008:	40d7      	lsrs	r7, r2
 800200a:	2920      	cmp	r1, #32
 800200c:	d005      	beq.n	800201a <__aeabi_dsub+0x692>
 800200e:	2240      	movs	r2, #64	@ 0x40
 8002010:	1a52      	subs	r2, r2, r1
 8002012:	4094      	lsls	r4, r2
 8002014:	0025      	movs	r5, r4
 8002016:	4305      	orrs	r5, r0
 8002018:	9503      	str	r5, [sp, #12]
 800201a:	9d03      	ldr	r5, [sp, #12]
 800201c:	1e6a      	subs	r2, r5, #1
 800201e:	4195      	sbcs	r5, r2
 8002020:	432f      	orrs	r7, r5
 8002022:	e610      	b.n	8001c46 <__aeabi_dsub+0x2be>
 8002024:	0014      	movs	r4, r2
 8002026:	2500      	movs	r5, #0
 8002028:	2200      	movs	r2, #0
 800202a:	e556      	b.n	8001ada <__aeabi_dsub+0x152>
 800202c:	9b02      	ldr	r3, [sp, #8]
 800202e:	4460      	add	r0, ip
 8002030:	4699      	mov	r9, r3
 8002032:	4560      	cmp	r0, ip
 8002034:	4192      	sbcs	r2, r2
 8002036:	444c      	add	r4, r9
 8002038:	4252      	negs	r2, r2
 800203a:	0005      	movs	r5, r0
 800203c:	18a4      	adds	r4, r4, r2
 800203e:	e74c      	b.n	8001eda <__aeabi_dsub+0x552>
 8002040:	001a      	movs	r2, r3
 8002042:	001c      	movs	r4, r3
 8002044:	432a      	orrs	r2, r5
 8002046:	d000      	beq.n	800204a <__aeabi_dsub+0x6c2>
 8002048:	e6b3      	b.n	8001db2 <__aeabi_dsub+0x42a>
 800204a:	e6c9      	b.n	8001de0 <__aeabi_dsub+0x458>
 800204c:	2480      	movs	r4, #128	@ 0x80
 800204e:	2600      	movs	r6, #0
 8002050:	0324      	lsls	r4, r4, #12
 8002052:	e5ae      	b.n	8001bb2 <__aeabi_dsub+0x22a>
 8002054:	2120      	movs	r1, #32
 8002056:	2500      	movs	r5, #0
 8002058:	1a09      	subs	r1, r1, r0
 800205a:	e517      	b.n	8001a8c <__aeabi_dsub+0x104>
 800205c:	2200      	movs	r2, #0
 800205e:	2500      	movs	r5, #0
 8002060:	4c0b      	ldr	r4, [pc, #44]	@ (8002090 <__aeabi_dsub+0x708>)
 8002062:	e53a      	b.n	8001ada <__aeabi_dsub+0x152>
 8002064:	2d00      	cmp	r5, #0
 8002066:	d100      	bne.n	800206a <__aeabi_dsub+0x6e2>
 8002068:	e5f6      	b.n	8001c58 <__aeabi_dsub+0x2d0>
 800206a:	464b      	mov	r3, r9
 800206c:	1bda      	subs	r2, r3, r7
 800206e:	4692      	mov	sl, r2
 8002070:	2f00      	cmp	r7, #0
 8002072:	d100      	bne.n	8002076 <__aeabi_dsub+0x6ee>
 8002074:	e66f      	b.n	8001d56 <__aeabi_dsub+0x3ce>
 8002076:	2a38      	cmp	r2, #56	@ 0x38
 8002078:	dc05      	bgt.n	8002086 <__aeabi_dsub+0x6fe>
 800207a:	2680      	movs	r6, #128	@ 0x80
 800207c:	0436      	lsls	r6, r6, #16
 800207e:	4334      	orrs	r4, r6
 8002080:	4688      	mov	r8, r1
 8002082:	000e      	movs	r6, r1
 8002084:	e6d1      	b.n	8001e2a <__aeabi_dsub+0x4a2>
 8002086:	4688      	mov	r8, r1
 8002088:	000e      	movs	r6, r1
 800208a:	2501      	movs	r5, #1
 800208c:	e6de      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 800208e:	46c0      	nop			@ (mov r8, r8)
 8002090:	000007ff 	.word	0x000007ff
 8002094:	ff7fffff 	.word	0xff7fffff
 8002098:	000007fe 	.word	0x000007fe
 800209c:	2d00      	cmp	r5, #0
 800209e:	d100      	bne.n	80020a2 <__aeabi_dsub+0x71a>
 80020a0:	e668      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 80020a2:	464b      	mov	r3, r9
 80020a4:	1bd9      	subs	r1, r3, r7
 80020a6:	2f00      	cmp	r7, #0
 80020a8:	d101      	bne.n	80020ae <__aeabi_dsub+0x726>
 80020aa:	468a      	mov	sl, r1
 80020ac:	e5a7      	b.n	8001bfe <__aeabi_dsub+0x276>
 80020ae:	2701      	movs	r7, #1
 80020b0:	2938      	cmp	r1, #56	@ 0x38
 80020b2:	dd00      	ble.n	80020b6 <__aeabi_dsub+0x72e>
 80020b4:	e5c7      	b.n	8001c46 <__aeabi_dsub+0x2be>
 80020b6:	2280      	movs	r2, #128	@ 0x80
 80020b8:	0412      	lsls	r2, r2, #16
 80020ba:	4314      	orrs	r4, r2
 80020bc:	e5af      	b.n	8001c1e <__aeabi_dsub+0x296>
 80020be:	46c0      	nop			@ (mov r8, r8)

080020c0 <__aeabi_dcmpun>:
 80020c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020c2:	46c6      	mov	lr, r8
 80020c4:	031e      	lsls	r6, r3, #12
 80020c6:	0b36      	lsrs	r6, r6, #12
 80020c8:	46b0      	mov	r8, r6
 80020ca:	4e0d      	ldr	r6, [pc, #52]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020cc:	030c      	lsls	r4, r1, #12
 80020ce:	004d      	lsls	r5, r1, #1
 80020d0:	005f      	lsls	r7, r3, #1
 80020d2:	b500      	push	{lr}
 80020d4:	0b24      	lsrs	r4, r4, #12
 80020d6:	0d6d      	lsrs	r5, r5, #21
 80020d8:	0d7f      	lsrs	r7, r7, #21
 80020da:	42b5      	cmp	r5, r6
 80020dc:	d00b      	beq.n	80020f6 <__aeabi_dcmpun+0x36>
 80020de:	4908      	ldr	r1, [pc, #32]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020e0:	2000      	movs	r0, #0
 80020e2:	428f      	cmp	r7, r1
 80020e4:	d104      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020e6:	4646      	mov	r6, r8
 80020e8:	4316      	orrs	r6, r2
 80020ea:	0030      	movs	r0, r6
 80020ec:	1e43      	subs	r3, r0, #1
 80020ee:	4198      	sbcs	r0, r3
 80020f0:	bc80      	pop	{r7}
 80020f2:	46b8      	mov	r8, r7
 80020f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020f6:	4304      	orrs	r4, r0
 80020f8:	2001      	movs	r0, #1
 80020fa:	2c00      	cmp	r4, #0
 80020fc:	d1f8      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020fe:	e7ee      	b.n	80020de <__aeabi_dcmpun+0x1e>
 8002100:	000007ff 	.word	0x000007ff

08002104 <__aeabi_d2iz>:
 8002104:	000b      	movs	r3, r1
 8002106:	0002      	movs	r2, r0
 8002108:	b570      	push	{r4, r5, r6, lr}
 800210a:	4d16      	ldr	r5, [pc, #88]	@ (8002164 <__aeabi_d2iz+0x60>)
 800210c:	030c      	lsls	r4, r1, #12
 800210e:	b082      	sub	sp, #8
 8002110:	0049      	lsls	r1, r1, #1
 8002112:	2000      	movs	r0, #0
 8002114:	9200      	str	r2, [sp, #0]
 8002116:	9301      	str	r3, [sp, #4]
 8002118:	0b24      	lsrs	r4, r4, #12
 800211a:	0d49      	lsrs	r1, r1, #21
 800211c:	0fde      	lsrs	r6, r3, #31
 800211e:	42a9      	cmp	r1, r5
 8002120:	dd04      	ble.n	800212c <__aeabi_d2iz+0x28>
 8002122:	4811      	ldr	r0, [pc, #68]	@ (8002168 <__aeabi_d2iz+0x64>)
 8002124:	4281      	cmp	r1, r0
 8002126:	dd03      	ble.n	8002130 <__aeabi_d2iz+0x2c>
 8002128:	4b10      	ldr	r3, [pc, #64]	@ (800216c <__aeabi_d2iz+0x68>)
 800212a:	18f0      	adds	r0, r6, r3
 800212c:	b002      	add	sp, #8
 800212e:	bd70      	pop	{r4, r5, r6, pc}
 8002130:	2080      	movs	r0, #128	@ 0x80
 8002132:	0340      	lsls	r0, r0, #13
 8002134:	4320      	orrs	r0, r4
 8002136:	4c0e      	ldr	r4, [pc, #56]	@ (8002170 <__aeabi_d2iz+0x6c>)
 8002138:	1a64      	subs	r4, r4, r1
 800213a:	2c1f      	cmp	r4, #31
 800213c:	dd08      	ble.n	8002150 <__aeabi_d2iz+0x4c>
 800213e:	4b0d      	ldr	r3, [pc, #52]	@ (8002174 <__aeabi_d2iz+0x70>)
 8002140:	1a5b      	subs	r3, r3, r1
 8002142:	40d8      	lsrs	r0, r3
 8002144:	0003      	movs	r3, r0
 8002146:	4258      	negs	r0, r3
 8002148:	2e00      	cmp	r6, #0
 800214a:	d1ef      	bne.n	800212c <__aeabi_d2iz+0x28>
 800214c:	0018      	movs	r0, r3
 800214e:	e7ed      	b.n	800212c <__aeabi_d2iz+0x28>
 8002150:	4b09      	ldr	r3, [pc, #36]	@ (8002178 <__aeabi_d2iz+0x74>)
 8002152:	9a00      	ldr	r2, [sp, #0]
 8002154:	469c      	mov	ip, r3
 8002156:	0003      	movs	r3, r0
 8002158:	4461      	add	r1, ip
 800215a:	408b      	lsls	r3, r1
 800215c:	40e2      	lsrs	r2, r4
 800215e:	4313      	orrs	r3, r2
 8002160:	e7f1      	b.n	8002146 <__aeabi_d2iz+0x42>
 8002162:	46c0      	nop			@ (mov r8, r8)
 8002164:	000003fe 	.word	0x000003fe
 8002168:	0000041d 	.word	0x0000041d
 800216c:	7fffffff 	.word	0x7fffffff
 8002170:	00000433 	.word	0x00000433
 8002174:	00000413 	.word	0x00000413
 8002178:	fffffbed 	.word	0xfffffbed

0800217c <__aeabi_i2d>:
 800217c:	b570      	push	{r4, r5, r6, lr}
 800217e:	2800      	cmp	r0, #0
 8002180:	d016      	beq.n	80021b0 <__aeabi_i2d+0x34>
 8002182:	17c3      	asrs	r3, r0, #31
 8002184:	18c5      	adds	r5, r0, r3
 8002186:	405d      	eors	r5, r3
 8002188:	0fc4      	lsrs	r4, r0, #31
 800218a:	0028      	movs	r0, r5
 800218c:	f000 f848 	bl	8002220 <__clzsi2>
 8002190:	4b10      	ldr	r3, [pc, #64]	@ (80021d4 <__aeabi_i2d+0x58>)
 8002192:	1a1b      	subs	r3, r3, r0
 8002194:	055b      	lsls	r3, r3, #21
 8002196:	0d5b      	lsrs	r3, r3, #21
 8002198:	280a      	cmp	r0, #10
 800219a:	dc14      	bgt.n	80021c6 <__aeabi_i2d+0x4a>
 800219c:	0002      	movs	r2, r0
 800219e:	002e      	movs	r6, r5
 80021a0:	3215      	adds	r2, #21
 80021a2:	4096      	lsls	r6, r2
 80021a4:	220b      	movs	r2, #11
 80021a6:	1a12      	subs	r2, r2, r0
 80021a8:	40d5      	lsrs	r5, r2
 80021aa:	032d      	lsls	r5, r5, #12
 80021ac:	0b2d      	lsrs	r5, r5, #12
 80021ae:	e003      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021b0:	2400      	movs	r4, #0
 80021b2:	2300      	movs	r3, #0
 80021b4:	2500      	movs	r5, #0
 80021b6:	2600      	movs	r6, #0
 80021b8:	051b      	lsls	r3, r3, #20
 80021ba:	432b      	orrs	r3, r5
 80021bc:	07e4      	lsls	r4, r4, #31
 80021be:	4323      	orrs	r3, r4
 80021c0:	0030      	movs	r0, r6
 80021c2:	0019      	movs	r1, r3
 80021c4:	bd70      	pop	{r4, r5, r6, pc}
 80021c6:	380b      	subs	r0, #11
 80021c8:	4085      	lsls	r5, r0
 80021ca:	032d      	lsls	r5, r5, #12
 80021cc:	2600      	movs	r6, #0
 80021ce:	0b2d      	lsrs	r5, r5, #12
 80021d0:	e7f2      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021d2:	46c0      	nop			@ (mov r8, r8)
 80021d4:	0000041e 	.word	0x0000041e

080021d8 <__aeabi_ui2d>:
 80021d8:	b510      	push	{r4, lr}
 80021da:	1e04      	subs	r4, r0, #0
 80021dc:	d010      	beq.n	8002200 <__aeabi_ui2d+0x28>
 80021de:	f000 f81f 	bl	8002220 <__clzsi2>
 80021e2:	4b0e      	ldr	r3, [pc, #56]	@ (800221c <__aeabi_ui2d+0x44>)
 80021e4:	1a1b      	subs	r3, r3, r0
 80021e6:	055b      	lsls	r3, r3, #21
 80021e8:	0d5b      	lsrs	r3, r3, #21
 80021ea:	280a      	cmp	r0, #10
 80021ec:	dc0f      	bgt.n	800220e <__aeabi_ui2d+0x36>
 80021ee:	220b      	movs	r2, #11
 80021f0:	0021      	movs	r1, r4
 80021f2:	1a12      	subs	r2, r2, r0
 80021f4:	40d1      	lsrs	r1, r2
 80021f6:	3015      	adds	r0, #21
 80021f8:	030a      	lsls	r2, r1, #12
 80021fa:	4084      	lsls	r4, r0
 80021fc:	0b12      	lsrs	r2, r2, #12
 80021fe:	e001      	b.n	8002204 <__aeabi_ui2d+0x2c>
 8002200:	2300      	movs	r3, #0
 8002202:	2200      	movs	r2, #0
 8002204:	051b      	lsls	r3, r3, #20
 8002206:	4313      	orrs	r3, r2
 8002208:	0020      	movs	r0, r4
 800220a:	0019      	movs	r1, r3
 800220c:	bd10      	pop	{r4, pc}
 800220e:	0022      	movs	r2, r4
 8002210:	380b      	subs	r0, #11
 8002212:	4082      	lsls	r2, r0
 8002214:	0312      	lsls	r2, r2, #12
 8002216:	2400      	movs	r4, #0
 8002218:	0b12      	lsrs	r2, r2, #12
 800221a:	e7f3      	b.n	8002204 <__aeabi_ui2d+0x2c>
 800221c:	0000041e 	.word	0x0000041e

08002220 <__clzsi2>:
 8002220:	211c      	movs	r1, #28
 8002222:	2301      	movs	r3, #1
 8002224:	041b      	lsls	r3, r3, #16
 8002226:	4298      	cmp	r0, r3
 8002228:	d301      	bcc.n	800222e <__clzsi2+0xe>
 800222a:	0c00      	lsrs	r0, r0, #16
 800222c:	3910      	subs	r1, #16
 800222e:	0a1b      	lsrs	r3, r3, #8
 8002230:	4298      	cmp	r0, r3
 8002232:	d301      	bcc.n	8002238 <__clzsi2+0x18>
 8002234:	0a00      	lsrs	r0, r0, #8
 8002236:	3908      	subs	r1, #8
 8002238:	091b      	lsrs	r3, r3, #4
 800223a:	4298      	cmp	r0, r3
 800223c:	d301      	bcc.n	8002242 <__clzsi2+0x22>
 800223e:	0900      	lsrs	r0, r0, #4
 8002240:	3904      	subs	r1, #4
 8002242:	a202      	add	r2, pc, #8	@ (adr r2, 800224c <__clzsi2+0x2c>)
 8002244:	5c10      	ldrb	r0, [r2, r0]
 8002246:	1840      	adds	r0, r0, r1
 8002248:	4770      	bx	lr
 800224a:	46c0      	nop			@ (mov r8, r8)
 800224c:	02020304 	.word	0x02020304
 8002250:	01010101 	.word	0x01010101
	...

0800225c <write_flash>:
int int_data = 123;
float float_data = 123.456;
char char_data = 'A';
uint32_t Rx_Data[30];
char string[100];
void write_flash(uint32_t address, uint8_t *data, uint32_t length) {
 800225c:	b5b0      	push	{r4, r5, r7, lr}
 800225e:	b086      	sub	sp, #24
 8002260:	af00      	add	r7, sp, #0
 8002262:	60f8      	str	r0, [r7, #12]
 8002264:	60b9      	str	r1, [r7, #8]
 8002266:	607a      	str	r2, [r7, #4]
	HAL_FLASH_Unlock();
 8002268:	f000 fbd6 	bl	8002a18 <HAL_FLASH_Unlock>

	for (uint32_t i = 0; i < length; i++) {
 800226c:	2300      	movs	r3, #0
 800226e:	617b      	str	r3, [r7, #20]
 8002270:	e011      	b.n	8002296 <write_flash+0x3a>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, address + i, data[i]);
 8002272:	68fa      	ldr	r2, [r7, #12]
 8002274:	697b      	ldr	r3, [r7, #20]
 8002276:	18d1      	adds	r1, r2, r3
 8002278:	68ba      	ldr	r2, [r7, #8]
 800227a:	697b      	ldr	r3, [r7, #20]
 800227c:	18d3      	adds	r3, r2, r3
 800227e:	781b      	ldrb	r3, [r3, #0]
 8002280:	001c      	movs	r4, r3
 8002282:	2300      	movs	r3, #0
 8002284:	001d      	movs	r5, r3
 8002286:	0022      	movs	r2, r4
 8002288:	002b      	movs	r3, r5
 800228a:	2001      	movs	r0, #1
 800228c:	f000 fb76 	bl	800297c <HAL_FLASH_Program>
	for (uint32_t i = 0; i < length; i++) {
 8002290:	697b      	ldr	r3, [r7, #20]
 8002292:	3301      	adds	r3, #1
 8002294:	617b      	str	r3, [r7, #20]
 8002296:	697a      	ldr	r2, [r7, #20]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	429a      	cmp	r2, r3
 800229c:	d3e9      	bcc.n	8002272 <write_flash+0x16>
	}

	HAL_FLASH_Lock();
 800229e:	f000 fbdf 	bl	8002a60 <HAL_FLASH_Lock>
}
 80022a2:	46c0      	nop			@ (mov r8, r8)
 80022a4:	46bd      	mov	sp, r7
 80022a6:	b006      	add	sp, #24
 80022a8:	bdb0      	pop	{r4, r5, r7, pc}

080022aa <write_flash_int>:

void write_flash_int(uint32_t address, int data) {
 80022aa:	b580      	push	{r7, lr}
 80022ac:	b084      	sub	sp, #16
 80022ae:	af00      	add	r7, sp, #0
 80022b0:	6078      	str	r0, [r7, #4]
 80022b2:	6039      	str	r1, [r7, #0]
	uint8_t bytes[4];
	memcpy(bytes, &data, sizeof(data));
 80022b4:	210c      	movs	r1, #12
 80022b6:	187b      	adds	r3, r7, r1
 80022b8:	003a      	movs	r2, r7
 80022ba:	6812      	ldr	r2, [r2, #0]
 80022bc:	601a      	str	r2, [r3, #0]
	write_flash(address, bytes, sizeof(bytes));
 80022be:	1879      	adds	r1, r7, r1
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	2204      	movs	r2, #4
 80022c4:	0018      	movs	r0, r3
 80022c6:	f7ff ffc9 	bl	800225c <write_flash>
}
 80022ca:	46c0      	nop			@ (mov r8, r8)
 80022cc:	46bd      	mov	sp, r7
 80022ce:	b004      	add	sp, #16
 80022d0:	bd80      	pop	{r7, pc}

080022d2 <write_flash_float>:

void write_flash_float(uint32_t address, float data) {
 80022d2:	b580      	push	{r7, lr}
 80022d4:	b084      	sub	sp, #16
 80022d6:	af00      	add	r7, sp, #0
 80022d8:	6078      	str	r0, [r7, #4]
 80022da:	6039      	str	r1, [r7, #0]
	uint8_t bytes[4];
	memcpy(bytes, &data, sizeof(data));
 80022dc:	210c      	movs	r1, #12
 80022de:	187b      	adds	r3, r7, r1
 80022e0:	003a      	movs	r2, r7
 80022e2:	6812      	ldr	r2, [r2, #0]
 80022e4:	601a      	str	r2, [r3, #0]
	write_flash(address, bytes, sizeof(bytes));
 80022e6:	1879      	adds	r1, r7, r1
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	2204      	movs	r2, #4
 80022ec:	0018      	movs	r0, r3
 80022ee:	f7ff ffb5 	bl	800225c <write_flash>
}
 80022f2:	46c0      	nop			@ (mov r8, r8)
 80022f4:	46bd      	mov	sp, r7
 80022f6:	b004      	add	sp, #16
 80022f8:	bd80      	pop	{r7, pc}

080022fa <write_flash_char>:

void write_flash_char(uint32_t address, char data) {
 80022fa:	b580      	push	{r7, lr}
 80022fc:	b082      	sub	sp, #8
 80022fe:	af00      	add	r7, sp, #0
 8002300:	6078      	str	r0, [r7, #4]
 8002302:	000a      	movs	r2, r1
 8002304:	1cfb      	adds	r3, r7, #3
 8002306:	701a      	strb	r2, [r3, #0]
	write_flash(address, (uint8_t *)&data, sizeof(data));
 8002308:	1cf9      	adds	r1, r7, #3
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	2201      	movs	r2, #1
 800230e:	0018      	movs	r0, r3
 8002310:	f7ff ffa4 	bl	800225c <write_flash>
}
 8002314:	46c0      	nop			@ (mov r8, r8)
 8002316:	46bd      	mov	sp, r7
 8002318:	b002      	add	sp, #8
 800231a:	bd80      	pop	{r7, pc}

0800231c <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 800231c:	b590      	push	{r4, r7, lr}
 800231e:	b083      	sub	sp, #12
 8002320:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8002322:	f000 f9fa 	bl	800271a <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8002326:	f000 f847 	bl	80023b8 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800232a:	f000 f889 	bl	8002440 <MX_GPIO_Init>
	/* USER CODE BEGIN 2 */
	HAL_FLASH_Unlock();
 800232e:	f000 fb73 	bl	8002a18 <HAL_FLASH_Unlock>
	//	}
	//    uint32_t start_address = 0x08007100; // ที่อยู่เริ่มต้นของแฟลชที่ต้องการเขียน

	// เขียนข้อมูลตัวอักษรลงแฟลช
	// write_flash(start_address, (uint8_t *)data, strlen(data) + 1); // +1 เพื่อเขียน null terminator ด้วย
	uint32_t start_address = 0x08007000;
 8002332:	4b1c      	ldr	r3, [pc, #112]	@ (80023a4 <main+0x88>)
 8002334:	607b      	str	r3, [r7, #4]

	// เขียนข้อมูลประเภท string
	write_flash(start_address, (uint8_t *)data, strlen(data) + 1);
 8002336:	4b1c      	ldr	r3, [pc, #112]	@ (80023a8 <main+0x8c>)
 8002338:	681c      	ldr	r4, [r3, #0]
 800233a:	4b1b      	ldr	r3, [pc, #108]	@ (80023a8 <main+0x8c>)
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	0018      	movs	r0, r3
 8002340:	f7fd fee2 	bl	8000108 <strlen>
 8002344:	0003      	movs	r3, r0
 8002346:	1c5a      	adds	r2, r3, #1
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	0021      	movs	r1, r4
 800234c:	0018      	movs	r0, r3
 800234e:	f7ff ff85 	bl	800225c <write_flash>

	// เขียนข้อมูลประเภท int
	start_address += strlen(data) + 1;
 8002352:	4b15      	ldr	r3, [pc, #84]	@ (80023a8 <main+0x8c>)
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	0018      	movs	r0, r3
 8002358:	f7fd fed6 	bl	8000108 <strlen>
 800235c:	0002      	movs	r2, r0
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	18d3      	adds	r3, r2, r3
 8002362:	3301      	adds	r3, #1
 8002364:	607b      	str	r3, [r7, #4]
	write_flash_int(start_address, int_data);
 8002366:	4b11      	ldr	r3, [pc, #68]	@ (80023ac <main+0x90>)
 8002368:	681a      	ldr	r2, [r3, #0]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	0011      	movs	r1, r2
 800236e:	0018      	movs	r0, r3
 8002370:	f7ff ff9b 	bl	80022aa <write_flash_int>

	// เขียนข้อมูลประเภท float
	start_address += sizeof(int);
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	3304      	adds	r3, #4
 8002378:	607b      	str	r3, [r7, #4]
write_flash_float(start_address, float_data);
 800237a:	4b0d      	ldr	r3, [pc, #52]	@ (80023b0 <main+0x94>)
 800237c:	681a      	ldr	r2, [r3, #0]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	1c11      	adds	r1, r2, #0
 8002382:	0018      	movs	r0, r3
 8002384:	f7ff ffa5 	bl	80022d2 <write_flash_float>

	// เขียนข้อมูลประเภท char
	start_address += sizeof(float);
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	3304      	adds	r3, #4
 800238c:	607b      	str	r3, [r7, #4]
	write_flash_char(start_address, char_data);
 800238e:	4b09      	ldr	r3, [pc, #36]	@ (80023b4 <main+0x98>)
 8002390:	781a      	ldrb	r2, [r3, #0]
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	0011      	movs	r1, r2
 8002396:	0018      	movs	r0, r3
 8002398:	f7ff ffaf 	bl	80022fa <write_flash_char>


	HAL_FLASH_Lock();
 800239c:	f000 fb60 	bl	8002a60 <HAL_FLASH_Lock>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1)
 80023a0:	46c0      	nop			@ (mov r8, r8)
 80023a2:	e7fd      	b.n	80023a0 <main+0x84>
 80023a4:	08007000 	.word	0x08007000
 80023a8:	20000000 	.word	0x20000000
 80023ac:	20000004 	.word	0x20000004
 80023b0:	20000008 	.word	0x20000008
 80023b4:	2000000c 	.word	0x2000000c

080023b8 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 80023b8:	b590      	push	{r4, r7, lr}
 80023ba:	b08d      	sub	sp, #52	@ 0x34
 80023bc:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80023be:	2414      	movs	r4, #20
 80023c0:	193b      	adds	r3, r7, r4
 80023c2:	0018      	movs	r0, r3
 80023c4:	231c      	movs	r3, #28
 80023c6:	001a      	movs	r2, r3
 80023c8:	2100      	movs	r1, #0
 80023ca:	f001 fe17 	bl	8003ffc <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023ce:	003b      	movs	r3, r7
 80023d0:	0018      	movs	r0, r3
 80023d2:	2314      	movs	r3, #20
 80023d4:	001a      	movs	r2, r3
 80023d6:	2100      	movs	r1, #0
 80023d8:	f001 fe10 	bl	8003ffc <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80023dc:	193b      	adds	r3, r7, r4
 80023de:	2202      	movs	r2, #2
 80023e0:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80023e2:	193b      	adds	r3, r7, r4
 80023e4:	2280      	movs	r2, #128	@ 0x80
 80023e6:	0052      	lsls	r2, r2, #1
 80023e8:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV4;
 80023ea:	193b      	adds	r3, r7, r4
 80023ec:	2280      	movs	r2, #128	@ 0x80
 80023ee:	0152      	lsls	r2, r2, #5
 80023f0:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80023f2:	193b      	adds	r3, r7, r4
 80023f4:	2240      	movs	r2, #64	@ 0x40
 80023f6:	615a      	str	r2, [r3, #20]
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023f8:	193b      	adds	r3, r7, r4
 80023fa:	0018      	movs	r0, r3
 80023fc:	f000 fd4e 	bl	8002e9c <HAL_RCC_OscConfig>
 8002400:	1e03      	subs	r3, r0, #0
 8002402:	d001      	beq.n	8002408 <SystemClock_Config+0x50>
	{
		Error_Handler();
 8002404:	f000 f852 	bl	80024ac <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002408:	003b      	movs	r3, r7
 800240a:	2207      	movs	r2, #7
 800240c:	601a      	str	r2, [r3, #0]
			|RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800240e:	003b      	movs	r3, r7
 8002410:	2200      	movs	r2, #0
 8002412:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8002414:	003b      	movs	r3, r7
 8002416:	2200      	movs	r2, #0
 8002418:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 800241a:	003b      	movs	r3, r7
 800241c:	2200      	movs	r2, #0
 800241e:	60da      	str	r2, [r3, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 8002420:	003b      	movs	r3, r7
 8002422:	2200      	movs	r2, #0
 8002424:	611a      	str	r2, [r3, #16]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002426:	003b      	movs	r3, r7
 8002428:	2100      	movs	r1, #0
 800242a:	0018      	movs	r0, r3
 800242c:	f000 ff1a 	bl	8003264 <HAL_RCC_ClockConfig>
 8002430:	1e03      	subs	r3, r0, #0
 8002432:	d001      	beq.n	8002438 <SystemClock_Config+0x80>
	{
		Error_Handler();
 8002434:	f000 f83a 	bl	80024ac <Error_Handler>
	}
}
 8002438:	46c0      	nop			@ (mov r8, r8)
 800243a:	46bd      	mov	sp, r7
 800243c:	b00d      	add	sp, #52	@ 0x34
 800243e:	bd90      	pop	{r4, r7, pc}

08002440 <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 8002440:	b580      	push	{r7, lr}
 8002442:	b086      	sub	sp, #24
 8002444:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002446:	1d3b      	adds	r3, r7, #4
 8002448:	0018      	movs	r0, r3
 800244a:	2314      	movs	r3, #20
 800244c:	001a      	movs	r2, r3
 800244e:	2100      	movs	r1, #0
 8002450:	f001 fdd4 	bl	8003ffc <memset>
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8002454:	4b14      	ldr	r3, [pc, #80]	@ (80024a8 <MX_GPIO_Init+0x68>)
 8002456:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002458:	4b13      	ldr	r3, [pc, #76]	@ (80024a8 <MX_GPIO_Init+0x68>)
 800245a:	2101      	movs	r1, #1
 800245c:	430a      	orrs	r2, r1
 800245e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002460:	4b11      	ldr	r3, [pc, #68]	@ (80024a8 <MX_GPIO_Init+0x68>)
 8002462:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002464:	2201      	movs	r2, #1
 8002466:	4013      	ands	r3, r2
 8002468:	603b      	str	r3, [r7, #0]
 800246a:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 800246c:	23a0      	movs	r3, #160	@ 0xa0
 800246e:	05db      	lsls	r3, r3, #23
 8002470:	2200      	movs	r2, #0
 8002472:	2110      	movs	r1, #16
 8002474:	0018      	movs	r0, r3
 8002476:	f000 fcf3 	bl	8002e60 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : LED_Pin */
	GPIO_InitStruct.Pin = LED_Pin;
 800247a:	1d3b      	adds	r3, r7, #4
 800247c:	2210      	movs	r2, #16
 800247e:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002480:	1d3b      	adds	r3, r7, #4
 8002482:	2201      	movs	r2, #1
 8002484:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002486:	1d3b      	adds	r3, r7, #4
 8002488:	2200      	movs	r2, #0
 800248a:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800248c:	1d3b      	adds	r3, r7, #4
 800248e:	2200      	movs	r2, #0
 8002490:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8002492:	1d3a      	adds	r2, r7, #4
 8002494:	23a0      	movs	r3, #160	@ 0xa0
 8002496:	05db      	lsls	r3, r3, #23
 8002498:	0011      	movs	r1, r2
 800249a:	0018      	movs	r0, r3
 800249c:	f000 fb76 	bl	8002b8c <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 80024a0:	46c0      	nop			@ (mov r8, r8)
 80024a2:	46bd      	mov	sp, r7
 80024a4:	b006      	add	sp, #24
 80024a6:	bd80      	pop	{r7, pc}
 80024a8:	40021000 	.word	0x40021000

080024ac <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 80024ac:	b580      	push	{r7, lr}
 80024ae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80024b0:	b672      	cpsid	i
}
 80024b2:	46c0      	nop			@ (mov r8, r8)
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 80024b4:	46c0      	nop			@ (mov r8, r8)
 80024b6:	e7fd      	b.n	80024b4 <Error_Handler+0x8>

080024b8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	b082      	sub	sp, #8
 80024bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80024be:	4b0f      	ldr	r3, [pc, #60]	@ (80024fc <HAL_MspInit+0x44>)
 80024c0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80024c2:	4b0e      	ldr	r3, [pc, #56]	@ (80024fc <HAL_MspInit+0x44>)
 80024c4:	2101      	movs	r1, #1
 80024c6:	430a      	orrs	r2, r1
 80024c8:	641a      	str	r2, [r3, #64]	@ 0x40
 80024ca:	4b0c      	ldr	r3, [pc, #48]	@ (80024fc <HAL_MspInit+0x44>)
 80024cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024ce:	2201      	movs	r2, #1
 80024d0:	4013      	ands	r3, r2
 80024d2:	607b      	str	r3, [r7, #4]
 80024d4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80024d6:	4b09      	ldr	r3, [pc, #36]	@ (80024fc <HAL_MspInit+0x44>)
 80024d8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80024da:	4b08      	ldr	r3, [pc, #32]	@ (80024fc <HAL_MspInit+0x44>)
 80024dc:	2180      	movs	r1, #128	@ 0x80
 80024de:	0549      	lsls	r1, r1, #21
 80024e0:	430a      	orrs	r2, r1
 80024e2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80024e4:	4b05      	ldr	r3, [pc, #20]	@ (80024fc <HAL_MspInit+0x44>)
 80024e6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80024e8:	2380      	movs	r3, #128	@ 0x80
 80024ea:	055b      	lsls	r3, r3, #21
 80024ec:	4013      	ands	r3, r2
 80024ee:	603b      	str	r3, [r7, #0]
 80024f0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80024f2:	46c0      	nop			@ (mov r8, r8)
 80024f4:	46bd      	mov	sp, r7
 80024f6:	b002      	add	sp, #8
 80024f8:	bd80      	pop	{r7, pc}
 80024fa:	46c0      	nop			@ (mov r8, r8)
 80024fc:	40021000 	.word	0x40021000

08002500 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002500:	b580      	push	{r7, lr}
 8002502:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002504:	46c0      	nop			@ (mov r8, r8)
 8002506:	e7fd      	b.n	8002504 <NMI_Handler+0x4>

08002508 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002508:	b580      	push	{r7, lr}
 800250a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800250c:	46c0      	nop			@ (mov r8, r8)
 800250e:	e7fd      	b.n	800250c <HardFault_Handler+0x4>

08002510 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002514:	46c0      	nop			@ (mov r8, r8)
 8002516:	46bd      	mov	sp, r7
 8002518:	bd80      	pop	{r7, pc}

0800251a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800251a:	b580      	push	{r7, lr}
 800251c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800251e:	46c0      	nop			@ (mov r8, r8)
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}

08002524 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002524:	b580      	push	{r7, lr}
 8002526:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002528:	f000 f958 	bl	80027dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800252c:	46c0      	nop			@ (mov r8, r8)
 800252e:	46bd      	mov	sp, r7
 8002530:	bd80      	pop	{r7, pc}

08002532 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002532:	b580      	push	{r7, lr}
 8002534:	af00      	add	r7, sp, #0
  return 1;
 8002536:	2301      	movs	r3, #1
}
 8002538:	0018      	movs	r0, r3
 800253a:	46bd      	mov	sp, r7
 800253c:	bd80      	pop	{r7, pc}

0800253e <_kill>:

int _kill(int pid, int sig)
{
 800253e:	b580      	push	{r7, lr}
 8002540:	b082      	sub	sp, #8
 8002542:	af00      	add	r7, sp, #0
 8002544:	6078      	str	r0, [r7, #4]
 8002546:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002548:	f001 fdb2 	bl	80040b0 <__errno>
 800254c:	0003      	movs	r3, r0
 800254e:	2216      	movs	r2, #22
 8002550:	601a      	str	r2, [r3, #0]
  return -1;
 8002552:	2301      	movs	r3, #1
 8002554:	425b      	negs	r3, r3
}
 8002556:	0018      	movs	r0, r3
 8002558:	46bd      	mov	sp, r7
 800255a:	b002      	add	sp, #8
 800255c:	bd80      	pop	{r7, pc}

0800255e <_exit>:

void _exit (int status)
{
 800255e:	b580      	push	{r7, lr}
 8002560:	b082      	sub	sp, #8
 8002562:	af00      	add	r7, sp, #0
 8002564:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002566:	2301      	movs	r3, #1
 8002568:	425a      	negs	r2, r3
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	0011      	movs	r1, r2
 800256e:	0018      	movs	r0, r3
 8002570:	f7ff ffe5 	bl	800253e <_kill>
  while (1) {}    /* Make sure we hang here */
 8002574:	46c0      	nop			@ (mov r8, r8)
 8002576:	e7fd      	b.n	8002574 <_exit+0x16>

08002578 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002578:	b580      	push	{r7, lr}
 800257a:	b086      	sub	sp, #24
 800257c:	af00      	add	r7, sp, #0
 800257e:	60f8      	str	r0, [r7, #12]
 8002580:	60b9      	str	r1, [r7, #8]
 8002582:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002584:	2300      	movs	r3, #0
 8002586:	617b      	str	r3, [r7, #20]
 8002588:	e00a      	b.n	80025a0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800258a:	e000      	b.n	800258e <_read+0x16>
 800258c:	bf00      	nop
 800258e:	0001      	movs	r1, r0
 8002590:	68bb      	ldr	r3, [r7, #8]
 8002592:	1c5a      	adds	r2, r3, #1
 8002594:	60ba      	str	r2, [r7, #8]
 8002596:	b2ca      	uxtb	r2, r1
 8002598:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800259a:	697b      	ldr	r3, [r7, #20]
 800259c:	3301      	adds	r3, #1
 800259e:	617b      	str	r3, [r7, #20]
 80025a0:	697a      	ldr	r2, [r7, #20]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	429a      	cmp	r2, r3
 80025a6:	dbf0      	blt.n	800258a <_read+0x12>
  }

  return len;
 80025a8:	687b      	ldr	r3, [r7, #4]
}
 80025aa:	0018      	movs	r0, r3
 80025ac:	46bd      	mov	sp, r7
 80025ae:	b006      	add	sp, #24
 80025b0:	bd80      	pop	{r7, pc}

080025b2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80025b2:	b580      	push	{r7, lr}
 80025b4:	b086      	sub	sp, #24
 80025b6:	af00      	add	r7, sp, #0
 80025b8:	60f8      	str	r0, [r7, #12]
 80025ba:	60b9      	str	r1, [r7, #8]
 80025bc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025be:	2300      	movs	r3, #0
 80025c0:	617b      	str	r3, [r7, #20]
 80025c2:	e009      	b.n	80025d8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80025c4:	68bb      	ldr	r3, [r7, #8]
 80025c6:	1c5a      	adds	r2, r3, #1
 80025c8:	60ba      	str	r2, [r7, #8]
 80025ca:	781b      	ldrb	r3, [r3, #0]
 80025cc:	0018      	movs	r0, r3
 80025ce:	e000      	b.n	80025d2 <_write+0x20>
 80025d0:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025d2:	697b      	ldr	r3, [r7, #20]
 80025d4:	3301      	adds	r3, #1
 80025d6:	617b      	str	r3, [r7, #20]
 80025d8:	697a      	ldr	r2, [r7, #20]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	429a      	cmp	r2, r3
 80025de:	dbf1      	blt.n	80025c4 <_write+0x12>
  }
  return len;
 80025e0:	687b      	ldr	r3, [r7, #4]
}
 80025e2:	0018      	movs	r0, r3
 80025e4:	46bd      	mov	sp, r7
 80025e6:	b006      	add	sp, #24
 80025e8:	bd80      	pop	{r7, pc}

080025ea <_close>:

int _close(int file)
{
 80025ea:	b580      	push	{r7, lr}
 80025ec:	b082      	sub	sp, #8
 80025ee:	af00      	add	r7, sp, #0
 80025f0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80025f2:	2301      	movs	r3, #1
 80025f4:	425b      	negs	r3, r3
}
 80025f6:	0018      	movs	r0, r3
 80025f8:	46bd      	mov	sp, r7
 80025fa:	b002      	add	sp, #8
 80025fc:	bd80      	pop	{r7, pc}

080025fe <_fstat>:


int _fstat(int file, struct stat *st)
{
 80025fe:	b580      	push	{r7, lr}
 8002600:	b082      	sub	sp, #8
 8002602:	af00      	add	r7, sp, #0
 8002604:	6078      	str	r0, [r7, #4]
 8002606:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002608:	683b      	ldr	r3, [r7, #0]
 800260a:	2280      	movs	r2, #128	@ 0x80
 800260c:	0192      	lsls	r2, r2, #6
 800260e:	605a      	str	r2, [r3, #4]
  return 0;
 8002610:	2300      	movs	r3, #0
}
 8002612:	0018      	movs	r0, r3
 8002614:	46bd      	mov	sp, r7
 8002616:	b002      	add	sp, #8
 8002618:	bd80      	pop	{r7, pc}

0800261a <_isatty>:

int _isatty(int file)
{
 800261a:	b580      	push	{r7, lr}
 800261c:	b082      	sub	sp, #8
 800261e:	af00      	add	r7, sp, #0
 8002620:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002622:	2301      	movs	r3, #1
}
 8002624:	0018      	movs	r0, r3
 8002626:	46bd      	mov	sp, r7
 8002628:	b002      	add	sp, #8
 800262a:	bd80      	pop	{r7, pc}

0800262c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800262c:	b580      	push	{r7, lr}
 800262e:	b084      	sub	sp, #16
 8002630:	af00      	add	r7, sp, #0
 8002632:	60f8      	str	r0, [r7, #12]
 8002634:	60b9      	str	r1, [r7, #8]
 8002636:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002638:	2300      	movs	r3, #0
}
 800263a:	0018      	movs	r0, r3
 800263c:	46bd      	mov	sp, r7
 800263e:	b004      	add	sp, #16
 8002640:	bd80      	pop	{r7, pc}
	...

08002644 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	b086      	sub	sp, #24
 8002648:	af00      	add	r7, sp, #0
 800264a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800264c:	4a14      	ldr	r2, [pc, #80]	@ (80026a0 <_sbrk+0x5c>)
 800264e:	4b15      	ldr	r3, [pc, #84]	@ (80026a4 <_sbrk+0x60>)
 8002650:	1ad3      	subs	r3, r2, r3
 8002652:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002654:	697b      	ldr	r3, [r7, #20]
 8002656:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002658:	4b13      	ldr	r3, [pc, #76]	@ (80026a8 <_sbrk+0x64>)
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	2b00      	cmp	r3, #0
 800265e:	d102      	bne.n	8002666 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002660:	4b11      	ldr	r3, [pc, #68]	@ (80026a8 <_sbrk+0x64>)
 8002662:	4a12      	ldr	r2, [pc, #72]	@ (80026ac <_sbrk+0x68>)
 8002664:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002666:	4b10      	ldr	r3, [pc, #64]	@ (80026a8 <_sbrk+0x64>)
 8002668:	681a      	ldr	r2, [r3, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	18d3      	adds	r3, r2, r3
 800266e:	693a      	ldr	r2, [r7, #16]
 8002670:	429a      	cmp	r2, r3
 8002672:	d207      	bcs.n	8002684 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002674:	f001 fd1c 	bl	80040b0 <__errno>
 8002678:	0003      	movs	r3, r0
 800267a:	220c      	movs	r2, #12
 800267c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800267e:	2301      	movs	r3, #1
 8002680:	425b      	negs	r3, r3
 8002682:	e009      	b.n	8002698 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002684:	4b08      	ldr	r3, [pc, #32]	@ (80026a8 <_sbrk+0x64>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800268a:	4b07      	ldr	r3, [pc, #28]	@ (80026a8 <_sbrk+0x64>)
 800268c:	681a      	ldr	r2, [r3, #0]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	18d2      	adds	r2, r2, r3
 8002692:	4b05      	ldr	r3, [pc, #20]	@ (80026a8 <_sbrk+0x64>)
 8002694:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002696:	68fb      	ldr	r3, [r7, #12]
}
 8002698:	0018      	movs	r0, r3
 800269a:	46bd      	mov	sp, r7
 800269c:	b006      	add	sp, #24
 800269e:	bd80      	pop	{r7, pc}
 80026a0:	20001800 	.word	0x20001800
 80026a4:	00000400 	.word	0x00000400
 80026a8:	20000288 	.word	0x20000288
 80026ac:	200003f8 	.word	0x200003f8

080026b0 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	af00      	add	r7, sp, #0
  
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80026b4:	4b03      	ldr	r3, [pc, #12]	@ (80026c4 <SystemInit+0x14>)
 80026b6:	2280      	movs	r2, #128	@ 0x80
 80026b8:	0512      	lsls	r2, r2, #20
 80026ba:	609a      	str	r2, [r3, #8]
#endif
 }
 80026bc:	46c0      	nop			@ (mov r8, r8)
 80026be:	46bd      	mov	sp, r7
 80026c0:	bd80      	pop	{r7, pc}
 80026c2:	46c0      	nop			@ (mov r8, r8)
 80026c4:	e000ed00 	.word	0xe000ed00

080026c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80026c8:	480d      	ldr	r0, [pc, #52]	@ (8002700 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80026ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80026cc:	f7ff fff0 	bl	80026b0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 80026d0:	2100      	movs	r1, #0
  b LoopCopyDataInit
 80026d2:	e003      	b.n	80026dc <LoopCopyDataInit>

080026d4 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 80026d4:	4b0b      	ldr	r3, [pc, #44]	@ (8002704 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 80026d6:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 80026d8:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 80026da:	3104      	adds	r1, #4

080026dc <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 80026dc:	480a      	ldr	r0, [pc, #40]	@ (8002708 <LoopForever+0xa>)
  ldr r3, =_edata
 80026de:	4b0b      	ldr	r3, [pc, #44]	@ (800270c <LoopForever+0xe>)
  adds r2, r0, r1
 80026e0:	1842      	adds	r2, r0, r1
  cmp r2, r3
 80026e2:	429a      	cmp	r2, r3
  bcc CopyDataInit
 80026e4:	d3f6      	bcc.n	80026d4 <CopyDataInit>
  ldr r2, =_sbss
 80026e6:	4a0a      	ldr	r2, [pc, #40]	@ (8002710 <LoopForever+0x12>)
  b LoopFillZerobss
 80026e8:	e002      	b.n	80026f0 <LoopFillZerobss>

080026ea <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 80026ea:	2300      	movs	r3, #0
  str  r3, [r2]
 80026ec:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80026ee:	3204      	adds	r2, #4

080026f0 <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 80026f0:	4b08      	ldr	r3, [pc, #32]	@ (8002714 <LoopForever+0x16>)
  cmp r2, r3
 80026f2:	429a      	cmp	r2, r3
  bcc FillZerobss
 80026f4:	d3f9      	bcc.n	80026ea <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80026f6:	f001 fce1 	bl	80040bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80026fa:	f7ff fe0f 	bl	800231c <main>

080026fe <LoopForever>:

LoopForever:
    b LoopForever
 80026fe:	e7fe      	b.n	80026fe <LoopForever>
  ldr   r0, =_estack
 8002700:	20001800 	.word	0x20001800
  ldr r3, =_sidata
 8002704:	080063c8 	.word	0x080063c8
  ldr r0, =_sdata
 8002708:	20000000 	.word	0x20000000
  ldr r3, =_edata
 800270c:	2000026c 	.word	0x2000026c
  ldr r2, =_sbss
 8002710:	2000026c 	.word	0x2000026c
  ldr r3, = _ebss
 8002714:	200003f4 	.word	0x200003f4

08002718 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002718:	e7fe      	b.n	8002718 <ADC1_IRQHandler>

0800271a <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800271a:	b580      	push	{r7, lr}
 800271c:	b082      	sub	sp, #8
 800271e:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8002720:	1dfb      	adds	r3, r7, #7
 8002722:	2200      	movs	r2, #0
 8002724:	701a      	strb	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002726:	2003      	movs	r0, #3
 8002728:	f000 f80e 	bl	8002748 <HAL_InitTick>
 800272c:	1e03      	subs	r3, r0, #0
 800272e:	d003      	beq.n	8002738 <HAL_Init+0x1e>
  {
    status = HAL_ERROR;
 8002730:	1dfb      	adds	r3, r7, #7
 8002732:	2201      	movs	r2, #1
 8002734:	701a      	strb	r2, [r3, #0]
 8002736:	e001      	b.n	800273c <HAL_Init+0x22>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8002738:	f7ff febe 	bl	80024b8 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 800273c:	1dfb      	adds	r3, r7, #7
 800273e:	781b      	ldrb	r3, [r3, #0]
}
 8002740:	0018      	movs	r0, r3
 8002742:	46bd      	mov	sp, r7
 8002744:	b002      	add	sp, #8
 8002746:	bd80      	pop	{r7, pc}

08002748 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002748:	b590      	push	{r4, r7, lr}
 800274a:	b085      	sub	sp, #20
 800274c:	af00      	add	r7, sp, #0
 800274e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8002750:	230f      	movs	r3, #15
 8002752:	18fb      	adds	r3, r7, r3
 8002754:	2200      	movs	r2, #0
 8002756:	701a      	strb	r2, [r3, #0]

  if ((uint32_t)uwTickFreq != 0UL)
 8002758:	4b1d      	ldr	r3, [pc, #116]	@ (80027d0 <HAL_InitTick+0x88>)
 800275a:	781b      	ldrb	r3, [r3, #0]
 800275c:	2b00      	cmp	r3, #0
 800275e:	d02b      	beq.n	80027b8 <HAL_InitTick+0x70>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) == 0U)
 8002760:	4b1c      	ldr	r3, [pc, #112]	@ (80027d4 <HAL_InitTick+0x8c>)
 8002762:	681c      	ldr	r4, [r3, #0]
 8002764:	4b1a      	ldr	r3, [pc, #104]	@ (80027d0 <HAL_InitTick+0x88>)
 8002766:	781b      	ldrb	r3, [r3, #0]
 8002768:	0019      	movs	r1, r3
 800276a:	23fa      	movs	r3, #250	@ 0xfa
 800276c:	0098      	lsls	r0, r3, #2
 800276e:	f7fd fce7 	bl	8000140 <__udivsi3>
 8002772:	0003      	movs	r3, r0
 8002774:	0019      	movs	r1, r3
 8002776:	0020      	movs	r0, r4
 8002778:	f7fd fce2 	bl	8000140 <__udivsi3>
 800277c:	0003      	movs	r3, r0
 800277e:	0018      	movs	r0, r3
 8002780:	f000 f8ef 	bl	8002962 <HAL_SYSTICK_Config>
 8002784:	1e03      	subs	r3, r0, #0
 8002786:	d112      	bne.n	80027ae <HAL_InitTick+0x66>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	2b03      	cmp	r3, #3
 800278c:	d80a      	bhi.n	80027a4 <HAL_InitTick+0x5c>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800278e:	6879      	ldr	r1, [r7, #4]
 8002790:	2301      	movs	r3, #1
 8002792:	425b      	negs	r3, r3
 8002794:	2200      	movs	r2, #0
 8002796:	0018      	movs	r0, r3
 8002798:	f000 f8ce 	bl	8002938 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800279c:	4b0e      	ldr	r3, [pc, #56]	@ (80027d8 <HAL_InitTick+0x90>)
 800279e:	687a      	ldr	r2, [r7, #4]
 80027a0:	601a      	str	r2, [r3, #0]
 80027a2:	e00d      	b.n	80027c0 <HAL_InitTick+0x78>
      }
      else
      {
        status = HAL_ERROR;
 80027a4:	230f      	movs	r3, #15
 80027a6:	18fb      	adds	r3, r7, r3
 80027a8:	2201      	movs	r2, #1
 80027aa:	701a      	strb	r2, [r3, #0]
 80027ac:	e008      	b.n	80027c0 <HAL_InitTick+0x78>
      }
    }
    else
    {
      status = HAL_ERROR;
 80027ae:	230f      	movs	r3, #15
 80027b0:	18fb      	adds	r3, r7, r3
 80027b2:	2201      	movs	r2, #1
 80027b4:	701a      	strb	r2, [r3, #0]
 80027b6:	e003      	b.n	80027c0 <HAL_InitTick+0x78>
    }
  }
  else
  {
    status = HAL_ERROR;
 80027b8:	230f      	movs	r3, #15
 80027ba:	18fb      	adds	r3, r7, r3
 80027bc:	2201      	movs	r2, #1
 80027be:	701a      	strb	r2, [r3, #0]
  }

  /* Return function status */
  return status;
 80027c0:	230f      	movs	r3, #15
 80027c2:	18fb      	adds	r3, r7, r3
 80027c4:	781b      	ldrb	r3, [r3, #0]
}
 80027c6:	0018      	movs	r0, r3
 80027c8:	46bd      	mov	sp, r7
 80027ca:	b005      	add	sp, #20
 80027cc:	bd90      	pop	{r4, r7, pc}
 80027ce:	46c0      	nop			@ (mov r8, r8)
 80027d0:	20000018 	.word	0x20000018
 80027d4:	20000010 	.word	0x20000010
 80027d8:	20000014 	.word	0x20000014

080027dc <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80027dc:	b580      	push	{r7, lr}
 80027de:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 80027e0:	4b05      	ldr	r3, [pc, #20]	@ (80027f8 <HAL_IncTick+0x1c>)
 80027e2:	781b      	ldrb	r3, [r3, #0]
 80027e4:	001a      	movs	r2, r3
 80027e6:	4b05      	ldr	r3, [pc, #20]	@ (80027fc <HAL_IncTick+0x20>)
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	18d2      	adds	r2, r2, r3
 80027ec:	4b03      	ldr	r3, [pc, #12]	@ (80027fc <HAL_IncTick+0x20>)
 80027ee:	601a      	str	r2, [r3, #0]
}
 80027f0:	46c0      	nop			@ (mov r8, r8)
 80027f2:	46bd      	mov	sp, r7
 80027f4:	bd80      	pop	{r7, pc}
 80027f6:	46c0      	nop			@ (mov r8, r8)
 80027f8:	20000018 	.word	0x20000018
 80027fc:	2000028c 	.word	0x2000028c

08002800 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002800:	b580      	push	{r7, lr}
 8002802:	af00      	add	r7, sp, #0
  return uwTick;
 8002804:	4b02      	ldr	r3, [pc, #8]	@ (8002810 <HAL_GetTick+0x10>)
 8002806:	681b      	ldr	r3, [r3, #0]
}
 8002808:	0018      	movs	r0, r3
 800280a:	46bd      	mov	sp, r7
 800280c:	bd80      	pop	{r7, pc}
 800280e:	46c0      	nop			@ (mov r8, r8)
 8002810:	2000028c 	.word	0x2000028c

08002814 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002814:	b590      	push	{r4, r7, lr}
 8002816:	b083      	sub	sp, #12
 8002818:	af00      	add	r7, sp, #0
 800281a:	0002      	movs	r2, r0
 800281c:	6039      	str	r1, [r7, #0]
 800281e:	1dfb      	adds	r3, r7, #7
 8002820:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002822:	1dfb      	adds	r3, r7, #7
 8002824:	781b      	ldrb	r3, [r3, #0]
 8002826:	2b7f      	cmp	r3, #127	@ 0x7f
 8002828:	d828      	bhi.n	800287c <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800282a:	4a2f      	ldr	r2, [pc, #188]	@ (80028e8 <__NVIC_SetPriority+0xd4>)
 800282c:	1dfb      	adds	r3, r7, #7
 800282e:	781b      	ldrb	r3, [r3, #0]
 8002830:	b25b      	sxtb	r3, r3
 8002832:	089b      	lsrs	r3, r3, #2
 8002834:	33c0      	adds	r3, #192	@ 0xc0
 8002836:	009b      	lsls	r3, r3, #2
 8002838:	589b      	ldr	r3, [r3, r2]
 800283a:	1dfa      	adds	r2, r7, #7
 800283c:	7812      	ldrb	r2, [r2, #0]
 800283e:	0011      	movs	r1, r2
 8002840:	2203      	movs	r2, #3
 8002842:	400a      	ands	r2, r1
 8002844:	00d2      	lsls	r2, r2, #3
 8002846:	21ff      	movs	r1, #255	@ 0xff
 8002848:	4091      	lsls	r1, r2
 800284a:	000a      	movs	r2, r1
 800284c:	43d2      	mvns	r2, r2
 800284e:	401a      	ands	r2, r3
 8002850:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	019b      	lsls	r3, r3, #6
 8002856:	22ff      	movs	r2, #255	@ 0xff
 8002858:	401a      	ands	r2, r3
 800285a:	1dfb      	adds	r3, r7, #7
 800285c:	781b      	ldrb	r3, [r3, #0]
 800285e:	0018      	movs	r0, r3
 8002860:	2303      	movs	r3, #3
 8002862:	4003      	ands	r3, r0
 8002864:	00db      	lsls	r3, r3, #3
 8002866:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002868:	481f      	ldr	r0, [pc, #124]	@ (80028e8 <__NVIC_SetPriority+0xd4>)
 800286a:	1dfb      	adds	r3, r7, #7
 800286c:	781b      	ldrb	r3, [r3, #0]
 800286e:	b25b      	sxtb	r3, r3
 8002870:	089b      	lsrs	r3, r3, #2
 8002872:	430a      	orrs	r2, r1
 8002874:	33c0      	adds	r3, #192	@ 0xc0
 8002876:	009b      	lsls	r3, r3, #2
 8002878:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800287a:	e031      	b.n	80028e0 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800287c:	4a1b      	ldr	r2, [pc, #108]	@ (80028ec <__NVIC_SetPriority+0xd8>)
 800287e:	1dfb      	adds	r3, r7, #7
 8002880:	781b      	ldrb	r3, [r3, #0]
 8002882:	0019      	movs	r1, r3
 8002884:	230f      	movs	r3, #15
 8002886:	400b      	ands	r3, r1
 8002888:	3b08      	subs	r3, #8
 800288a:	089b      	lsrs	r3, r3, #2
 800288c:	3306      	adds	r3, #6
 800288e:	009b      	lsls	r3, r3, #2
 8002890:	18d3      	adds	r3, r2, r3
 8002892:	3304      	adds	r3, #4
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	1dfa      	adds	r2, r7, #7
 8002898:	7812      	ldrb	r2, [r2, #0]
 800289a:	0011      	movs	r1, r2
 800289c:	2203      	movs	r2, #3
 800289e:	400a      	ands	r2, r1
 80028a0:	00d2      	lsls	r2, r2, #3
 80028a2:	21ff      	movs	r1, #255	@ 0xff
 80028a4:	4091      	lsls	r1, r2
 80028a6:	000a      	movs	r2, r1
 80028a8:	43d2      	mvns	r2, r2
 80028aa:	401a      	ands	r2, r3
 80028ac:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80028ae:	683b      	ldr	r3, [r7, #0]
 80028b0:	019b      	lsls	r3, r3, #6
 80028b2:	22ff      	movs	r2, #255	@ 0xff
 80028b4:	401a      	ands	r2, r3
 80028b6:	1dfb      	adds	r3, r7, #7
 80028b8:	781b      	ldrb	r3, [r3, #0]
 80028ba:	0018      	movs	r0, r3
 80028bc:	2303      	movs	r3, #3
 80028be:	4003      	ands	r3, r0
 80028c0:	00db      	lsls	r3, r3, #3
 80028c2:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80028c4:	4809      	ldr	r0, [pc, #36]	@ (80028ec <__NVIC_SetPriority+0xd8>)
 80028c6:	1dfb      	adds	r3, r7, #7
 80028c8:	781b      	ldrb	r3, [r3, #0]
 80028ca:	001c      	movs	r4, r3
 80028cc:	230f      	movs	r3, #15
 80028ce:	4023      	ands	r3, r4
 80028d0:	3b08      	subs	r3, #8
 80028d2:	089b      	lsrs	r3, r3, #2
 80028d4:	430a      	orrs	r2, r1
 80028d6:	3306      	adds	r3, #6
 80028d8:	009b      	lsls	r3, r3, #2
 80028da:	18c3      	adds	r3, r0, r3
 80028dc:	3304      	adds	r3, #4
 80028de:	601a      	str	r2, [r3, #0]
}
 80028e0:	46c0      	nop			@ (mov r8, r8)
 80028e2:	46bd      	mov	sp, r7
 80028e4:	b003      	add	sp, #12
 80028e6:	bd90      	pop	{r4, r7, pc}
 80028e8:	e000e100 	.word	0xe000e100
 80028ec:	e000ed00 	.word	0xe000ed00

080028f0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b082      	sub	sp, #8
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	1e5a      	subs	r2, r3, #1
 80028fc:	2380      	movs	r3, #128	@ 0x80
 80028fe:	045b      	lsls	r3, r3, #17
 8002900:	429a      	cmp	r2, r3
 8002902:	d301      	bcc.n	8002908 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002904:	2301      	movs	r3, #1
 8002906:	e010      	b.n	800292a <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002908:	4b0a      	ldr	r3, [pc, #40]	@ (8002934 <SysTick_Config+0x44>)
 800290a:	687a      	ldr	r2, [r7, #4]
 800290c:	3a01      	subs	r2, #1
 800290e:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002910:	2301      	movs	r3, #1
 8002912:	425b      	negs	r3, r3
 8002914:	2103      	movs	r1, #3
 8002916:	0018      	movs	r0, r3
 8002918:	f7ff ff7c 	bl	8002814 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800291c:	4b05      	ldr	r3, [pc, #20]	@ (8002934 <SysTick_Config+0x44>)
 800291e:	2200      	movs	r2, #0
 8002920:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002922:	4b04      	ldr	r3, [pc, #16]	@ (8002934 <SysTick_Config+0x44>)
 8002924:	2207      	movs	r2, #7
 8002926:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002928:	2300      	movs	r3, #0
}
 800292a:	0018      	movs	r0, r3
 800292c:	46bd      	mov	sp, r7
 800292e:	b002      	add	sp, #8
 8002930:	bd80      	pop	{r7, pc}
 8002932:	46c0      	nop			@ (mov r8, r8)
 8002934:	e000e010 	.word	0xe000e010

08002938 <HAL_NVIC_SetPriority>:
  *         with stm32c0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002938:	b580      	push	{r7, lr}
 800293a:	b084      	sub	sp, #16
 800293c:	af00      	add	r7, sp, #0
 800293e:	60b9      	str	r1, [r7, #8]
 8002940:	607a      	str	r2, [r7, #4]
 8002942:	210f      	movs	r1, #15
 8002944:	187b      	adds	r3, r7, r1
 8002946:	1c02      	adds	r2, r0, #0
 8002948:	701a      	strb	r2, [r3, #0]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
 800294a:	68ba      	ldr	r2, [r7, #8]
 800294c:	187b      	adds	r3, r7, r1
 800294e:	781b      	ldrb	r3, [r3, #0]
 8002950:	b25b      	sxtb	r3, r3
 8002952:	0011      	movs	r1, r2
 8002954:	0018      	movs	r0, r3
 8002956:	f7ff ff5d 	bl	8002814 <__NVIC_SetPriority>
}
 800295a:	46c0      	nop			@ (mov r8, r8)
 800295c:	46bd      	mov	sp, r7
 800295e:	b004      	add	sp, #16
 8002960:	bd80      	pop	{r7, pc}

08002962 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002962:	b580      	push	{r7, lr}
 8002964:	b082      	sub	sp, #8
 8002966:	af00      	add	r7, sp, #0
 8002968:	6078      	str	r0, [r7, #4]
  return SysTick_Config(TicksNumb);
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	0018      	movs	r0, r3
 800296e:	f7ff ffbf 	bl	80028f0 <SysTick_Config>
 8002972:	0003      	movs	r3, r0
}
 8002974:	0018      	movs	r0, r3
 8002976:	46bd      	mov	sp, r7
 8002978:	b002      	add	sp, #8
 800297a:	bd80      	pop	{r7, pc}

0800297c <HAL_FLASH_Program>:
  *               are stored the data for the row fast program.
  *
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
{
 800297c:	b5b0      	push	{r4, r5, r7, lr}
 800297e:	b086      	sub	sp, #24
 8002980:	af00      	add	r7, sp, #0
 8002982:	60f8      	str	r0, [r7, #12]
 8002984:	60b9      	str	r1, [r7, #8]
 8002986:	603a      	str	r2, [r7, #0]
 8002988:	607b      	str	r3, [r7, #4]
  /* Check the parameters */
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
  assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));

  /* Process Locked */
  __HAL_LOCK(&pFlash);
 800298a:	4b21      	ldr	r3, [pc, #132]	@ (8002a10 <HAL_FLASH_Program+0x94>)
 800298c:	781b      	ldrb	r3, [r3, #0]
 800298e:	2b01      	cmp	r3, #1
 8002990:	d101      	bne.n	8002996 <HAL_FLASH_Program+0x1a>
 8002992:	2302      	movs	r3, #2
 8002994:	e038      	b.n	8002a08 <HAL_FLASH_Program+0x8c>
 8002996:	4b1e      	ldr	r3, [pc, #120]	@ (8002a10 <HAL_FLASH_Program+0x94>)
 8002998:	2201      	movs	r2, #1
 800299a:	701a      	strb	r2, [r3, #0]

  /* Reset error code */
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800299c:	4b1c      	ldr	r3, [pc, #112]	@ (8002a10 <HAL_FLASH_Program+0x94>)
 800299e:	2200      	movs	r2, #0
 80029a0:	605a      	str	r2, [r3, #4]

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 80029a2:	2517      	movs	r5, #23
 80029a4:	197c      	adds	r4, r7, r5
 80029a6:	23fa      	movs	r3, #250	@ 0xfa
 80029a8:	009b      	lsls	r3, r3, #2
 80029aa:	0018      	movs	r0, r3
 80029ac:	f000 f874 	bl	8002a98 <FLASH_WaitForLastOperation>
 80029b0:	0003      	movs	r3, r0
 80029b2:	7023      	strb	r3, [r4, #0]

  if (status == HAL_OK)
 80029b4:	197b      	adds	r3, r7, r5
 80029b6:	781b      	ldrb	r3, [r3, #0]
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	d11f      	bne.n	80029fc <HAL_FLASH_Program+0x80>
  {
    if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 80029bc:	68fb      	ldr	r3, [r7, #12]
 80029be:	2b01      	cmp	r3, #1
 80029c0:	d106      	bne.n	80029d0 <HAL_FLASH_Program+0x54>
    {
      /* Check the parameters */
      assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));

      /* Program double-word (64-bit) at a specified address */
      FLASH_Program_DoubleWord(Address, Data);
 80029c2:	683a      	ldr	r2, [r7, #0]
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	68b9      	ldr	r1, [r7, #8]
 80029c8:	0008      	movs	r0, r1
 80029ca:	f000 f8bf 	bl	8002b4c <FLASH_Program_DoubleWord>
 80029ce:	e005      	b.n	80029dc <HAL_FLASH_Program+0x60>
    {
      /* Check the parameters */
      assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));

      /* Fast program a 32 row double-word (64-bit) at a specified address */
      FLASH_Program_Fast(Address, (uint32_t)Data);
 80029d0:	683a      	ldr	r2, [r7, #0]
 80029d2:	68bb      	ldr	r3, [r7, #8]
 80029d4:	0011      	movs	r1, r2
 80029d6:	0018      	movs	r0, r3
 80029d8:	f003 fae6 	bl	8005fa8 <__FLASH_Program_Fast_veneer>
    }

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 80029dc:	2317      	movs	r3, #23
 80029de:	18fc      	adds	r4, r7, r3
 80029e0:	23fa      	movs	r3, #250	@ 0xfa
 80029e2:	009b      	lsls	r3, r3, #2
 80029e4:	0018      	movs	r0, r3
 80029e6:	f000 f857 	bl	8002a98 <FLASH_WaitForLastOperation>
 80029ea:	0003      	movs	r3, r0
 80029ec:	7023      	strb	r3, [r4, #0]

    /* If the program operation is completed, disable the PG or FSTPG Bit */
    CLEAR_BIT(FLASH->CR, TypeProgram);
 80029ee:	4b09      	ldr	r3, [pc, #36]	@ (8002a14 <HAL_FLASH_Program+0x98>)
 80029f0:	695a      	ldr	r2, [r3, #20]
 80029f2:	68fb      	ldr	r3, [r7, #12]
 80029f4:	43d9      	mvns	r1, r3
 80029f6:	4b07      	ldr	r3, [pc, #28]	@ (8002a14 <HAL_FLASH_Program+0x98>)
 80029f8:	400a      	ands	r2, r1
 80029fa:	615a      	str	r2, [r3, #20]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
 80029fc:	4b04      	ldr	r3, [pc, #16]	@ (8002a10 <HAL_FLASH_Program+0x94>)
 80029fe:	2200      	movs	r2, #0
 8002a00:	701a      	strb	r2, [r3, #0]

  /* return status */
  return status;
 8002a02:	2317      	movs	r3, #23
 8002a04:	18fb      	adds	r3, r7, r3
 8002a06:	781b      	ldrb	r3, [r3, #0]
}
 8002a08:	0018      	movs	r0, r3
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	b006      	add	sp, #24
 8002a0e:	bdb0      	pop	{r4, r5, r7, pc}
 8002a10:	20000290 	.word	0x20000290
 8002a14:	40022000 	.word	0x40022000

08002a18 <HAL_FLASH_Unlock>:
/**
  * @brief  Unlock the FLASH control register access.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Unlock(void)
{
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	b082      	sub	sp, #8
 8002a1c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status = HAL_OK;
 8002a1e:	1dfb      	adds	r3, r7, #7
 8002a20:	2200      	movs	r2, #0
 8002a22:	701a      	strb	r2, [r3, #0]

  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00U)
 8002a24:	4b0b      	ldr	r3, [pc, #44]	@ (8002a54 <HAL_FLASH_Unlock+0x3c>)
 8002a26:	695b      	ldr	r3, [r3, #20]
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	da0c      	bge.n	8002a46 <HAL_FLASH_Unlock+0x2e>
  {
    /* Authorize the FLASH Registers access */
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8002a2c:	4b09      	ldr	r3, [pc, #36]	@ (8002a54 <HAL_FLASH_Unlock+0x3c>)
 8002a2e:	4a0a      	ldr	r2, [pc, #40]	@ (8002a58 <HAL_FLASH_Unlock+0x40>)
 8002a30:	609a      	str	r2, [r3, #8]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8002a32:	4b08      	ldr	r3, [pc, #32]	@ (8002a54 <HAL_FLASH_Unlock+0x3c>)
 8002a34:	4a09      	ldr	r2, [pc, #36]	@ (8002a5c <HAL_FLASH_Unlock+0x44>)
 8002a36:	609a      	str	r2, [r3, #8]

    /* verify Flash is unlock */
    if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00U)
 8002a38:	4b06      	ldr	r3, [pc, #24]	@ (8002a54 <HAL_FLASH_Unlock+0x3c>)
 8002a3a:	695b      	ldr	r3, [r3, #20]
 8002a3c:	2b00      	cmp	r3, #0
 8002a3e:	da02      	bge.n	8002a46 <HAL_FLASH_Unlock+0x2e>
    {
      status = HAL_ERROR;
 8002a40:	1dfb      	adds	r3, r7, #7
 8002a42:	2201      	movs	r2, #1
 8002a44:	701a      	strb	r2, [r3, #0]
    }
  }

  return status;
 8002a46:	1dfb      	adds	r3, r7, #7
 8002a48:	781b      	ldrb	r3, [r3, #0]
}
 8002a4a:	0018      	movs	r0, r3
 8002a4c:	46bd      	mov	sp, r7
 8002a4e:	b002      	add	sp, #8
 8002a50:	bd80      	pop	{r7, pc}
 8002a52:	46c0      	nop			@ (mov r8, r8)
 8002a54:	40022000 	.word	0x40022000
 8002a58:	45670123 	.word	0x45670123
 8002a5c:	cdef89ab 	.word	0xcdef89ab

08002a60 <HAL_FLASH_Lock>:
/**
  * @brief  Lock the FLASH control register access.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Lock(void)
{
 8002a60:	b580      	push	{r7, lr}
 8002a62:	b082      	sub	sp, #8
 8002a64:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status = HAL_ERROR;
 8002a66:	1dfb      	adds	r3, r7, #7
 8002a68:	2201      	movs	r2, #1
 8002a6a:	701a      	strb	r2, [r3, #0]

  /* Set the LOCK Bit to lock the FLASH Registers access */
  SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 8002a6c:	4b09      	ldr	r3, [pc, #36]	@ (8002a94 <HAL_FLASH_Lock+0x34>)
 8002a6e:	695a      	ldr	r2, [r3, #20]
 8002a70:	4b08      	ldr	r3, [pc, #32]	@ (8002a94 <HAL_FLASH_Lock+0x34>)
 8002a72:	2180      	movs	r1, #128	@ 0x80
 8002a74:	0609      	lsls	r1, r1, #24
 8002a76:	430a      	orrs	r2, r1
 8002a78:	615a      	str	r2, [r3, #20]

  /* verify Flash is locked */
  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0x00u)
 8002a7a:	4b06      	ldr	r3, [pc, #24]	@ (8002a94 <HAL_FLASH_Lock+0x34>)
 8002a7c:	695b      	ldr	r3, [r3, #20]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	da02      	bge.n	8002a88 <HAL_FLASH_Lock+0x28>
  {
    status = HAL_OK;
 8002a82:	1dfb      	adds	r3, r7, #7
 8002a84:	2200      	movs	r2, #0
 8002a86:	701a      	strb	r2, [r3, #0]
  }

  return status;
 8002a88:	1dfb      	adds	r3, r7, #7
 8002a8a:	781b      	ldrb	r3, [r3, #0]
}
 8002a8c:	0018      	movs	r0, r3
 8002a8e:	46bd      	mov	sp, r7
 8002a90:	b002      	add	sp, #8
 8002a92:	bd80      	pop	{r7, pc}
 8002a94:	40022000 	.word	0x40022000

08002a98 <FLASH_WaitForLastOperation>:
  * @brief  Wait for a FLASH operation to complete.
  * @param  Timeout maximum flash operation timeout
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
{
 8002a98:	b580      	push	{r7, lr}
 8002a9a:	b084      	sub	sp, #16
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
  uint32_t error;
  /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
     Even if the FLASH operation fails, the BUSY flag will be reset and an error
     flag will be set */
  uint32_t timeout = HAL_GetTick() + Timeout;
 8002aa0:	f7ff feae 	bl	8002800 <HAL_GetTick>
 8002aa4:	0002      	movs	r2, r0
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	189b      	adds	r3, r3, r2
 8002aaa:	60fb      	str	r3, [r7, #12]

  /* Wait if any operation is ongoing */
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != 0x00U)
 8002aac:	e007      	b.n	8002abe <FLASH_WaitForLastOperation+0x26>
  {
    if (HAL_GetTick() >= timeout)
 8002aae:	f7ff fea7 	bl	8002800 <HAL_GetTick>
 8002ab2:	0002      	movs	r2, r0
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	4293      	cmp	r3, r2
 8002ab8:	d801      	bhi.n	8002abe <FLASH_WaitForLastOperation+0x26>
    {
      return HAL_TIMEOUT;
 8002aba:	2303      	movs	r3, #3
 8002abc:	e03b      	b.n	8002b36 <FLASH_WaitForLastOperation+0x9e>
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != 0x00U)
 8002abe:	4b20      	ldr	r3, [pc, #128]	@ (8002b40 <FLASH_WaitForLastOperation+0xa8>)
 8002ac0:	691a      	ldr	r2, [r3, #16]
 8002ac2:	2380      	movs	r3, #128	@ 0x80
 8002ac4:	025b      	lsls	r3, r3, #9
 8002ac6:	401a      	ands	r2, r3
 8002ac8:	2380      	movs	r3, #128	@ 0x80
 8002aca:	025b      	lsls	r3, r3, #9
 8002acc:	429a      	cmp	r2, r3
 8002ace:	d101      	bne.n	8002ad4 <FLASH_WaitForLastOperation+0x3c>
 8002ad0:	2301      	movs	r3, #1
 8002ad2:	e000      	b.n	8002ad6 <FLASH_WaitForLastOperation+0x3e>
 8002ad4:	2300      	movs	r3, #0
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d1e9      	bne.n	8002aae <FLASH_WaitForLastOperation+0x16>
    }
  }

  /* check flash errors */
  error = (FLASH->SR & FLASH_FLAG_SR_ERROR);
 8002ada:	4b19      	ldr	r3, [pc, #100]	@ (8002b40 <FLASH_WaitForLastOperation+0xa8>)
 8002adc:	691b      	ldr	r3, [r3, #16]
 8002ade:	4a19      	ldr	r2, [pc, #100]	@ (8002b44 <FLASH_WaitForLastOperation+0xac>)
 8002ae0:	4013      	ands	r3, r2
 8002ae2:	60bb      	str	r3, [r7, #8]

  /* clear error flags */
  __HAL_FLASH_CLEAR_FLAG(error);
 8002ae4:	4b16      	ldr	r3, [pc, #88]	@ (8002b40 <FLASH_WaitForLastOperation+0xa8>)
 8002ae6:	68ba      	ldr	r2, [r7, #8]
 8002ae8:	611a      	str	r2, [r3, #16]

  if (error != 0x00U)
 8002aea:	68bb      	ldr	r3, [r7, #8]
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d004      	beq.n	8002afa <FLASH_WaitForLastOperation+0x62>
  {
    /*Save the error code*/
    pFlash.ErrorCode = error;
 8002af0:	4b15      	ldr	r3, [pc, #84]	@ (8002b48 <FLASH_WaitForLastOperation+0xb0>)
 8002af2:	68ba      	ldr	r2, [r7, #8]
 8002af4:	605a      	str	r2, [r3, #4]

    return HAL_ERROR;
 8002af6:	2301      	movs	r3, #1
 8002af8:	e01d      	b.n	8002b36 <FLASH_WaitForLastOperation+0x9e>
  }

  /* Wait for control register to be written */
  timeout = HAL_GetTick() + Timeout;
 8002afa:	f7ff fe81 	bl	8002800 <HAL_GetTick>
 8002afe:	0002      	movs	r2, r0
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	189b      	adds	r3, r3, r2
 8002b04:	60fb      	str	r3, [r7, #12]

  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CFGBSY) != 0x00U)
 8002b06:	e007      	b.n	8002b18 <FLASH_WaitForLastOperation+0x80>
  {
    if (HAL_GetTick() >= timeout)
 8002b08:	f7ff fe7a 	bl	8002800 <HAL_GetTick>
 8002b0c:	0002      	movs	r2, r0
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	4293      	cmp	r3, r2
 8002b12:	d801      	bhi.n	8002b18 <FLASH_WaitForLastOperation+0x80>
    {
      return HAL_TIMEOUT;
 8002b14:	2303      	movs	r3, #3
 8002b16:	e00e      	b.n	8002b36 <FLASH_WaitForLastOperation+0x9e>
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CFGBSY) != 0x00U)
 8002b18:	4b09      	ldr	r3, [pc, #36]	@ (8002b40 <FLASH_WaitForLastOperation+0xa8>)
 8002b1a:	691a      	ldr	r2, [r3, #16]
 8002b1c:	2380      	movs	r3, #128	@ 0x80
 8002b1e:	02db      	lsls	r3, r3, #11
 8002b20:	401a      	ands	r2, r3
 8002b22:	2380      	movs	r3, #128	@ 0x80
 8002b24:	02db      	lsls	r3, r3, #11
 8002b26:	429a      	cmp	r2, r3
 8002b28:	d101      	bne.n	8002b2e <FLASH_WaitForLastOperation+0x96>
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	e000      	b.n	8002b30 <FLASH_WaitForLastOperation+0x98>
 8002b2e:	2300      	movs	r3, #0
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d1e9      	bne.n	8002b08 <FLASH_WaitForLastOperation+0x70>
    }
  }

  return HAL_OK;
 8002b34:	2300      	movs	r3, #0
}
 8002b36:	0018      	movs	r0, r3
 8002b38:	46bd      	mov	sp, r7
 8002b3a:	b004      	add	sp, #16
 8002b3c:	bd80      	pop	{r7, pc}
 8002b3e:	46c0      	nop			@ (mov r8, r8)
 8002b40:	40022000 	.word	0x40022000
 8002b44:	0000c3fa 	.word	0x0000c3fa
 8002b48:	20000290 	.word	0x20000290

08002b4c <FLASH_Program_DoubleWord>:
  * @param  Address Specifies the address to be programmed.
  * @param  Data Specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
{
 8002b4c:	b5b0      	push	{r4, r5, r7, lr}
 8002b4e:	b084      	sub	sp, #16
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	60f8      	str	r0, [r7, #12]
 8002b54:	603a      	str	r2, [r7, #0]
 8002b56:	607b      	str	r3, [r7, #4]
  /* Set PG bit */
  SET_BIT(FLASH->CR, FLASH_CR_PG);
 8002b58:	4b0b      	ldr	r3, [pc, #44]	@ (8002b88 <FLASH_Program_DoubleWord+0x3c>)
 8002b5a:	695a      	ldr	r2, [r3, #20]
 8002b5c:	4b0a      	ldr	r3, [pc, #40]	@ (8002b88 <FLASH_Program_DoubleWord+0x3c>)
 8002b5e:	2101      	movs	r1, #1
 8002b60:	430a      	orrs	r2, r1
 8002b62:	615a      	str	r2, [r3, #20]

  /* Program first word */
  *(uint32_t *)Address = (uint32_t)Data;
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	683a      	ldr	r2, [r7, #0]
 8002b68:	601a      	str	r2, [r3, #0]
  __ASM volatile ("isb 0xF":::"memory");
 8002b6a:	f3bf 8f6f 	isb	sy
}
 8002b6e:	46c0      	nop			@ (mov r8, r8)
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	001c      	movs	r4, r3
 8002b74:	2300      	movs	r3, #0
 8002b76:	001d      	movs	r5, r3
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	3304      	adds	r3, #4
 8002b7c:	0022      	movs	r2, r4
 8002b7e:	601a      	str	r2, [r3, #0]
}
 8002b80:	46c0      	nop			@ (mov r8, r8)
 8002b82:	46bd      	mov	sp, r7
 8002b84:	b004      	add	sp, #16
 8002b86:	bdb0      	pop	{r4, r5, r7, pc}
 8002b88:	40022000 	.word	0x40022000

08002b8c <HAL_GPIO_Init>:
  * @param  pGPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b086      	sub	sp, #24
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	6078      	str	r0, [r7, #4]
 8002b94:	6039      	str	r1, [r7, #0]
  uint32_t tmp;
  uint32_t iocurrent;
  uint32_t position = 0U;
 8002b96:	2300      	movs	r3, #0
 8002b98:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(pGPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(pGPIO_Init->Mode));

  /* Configure the port pins */
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8002b9a:	e14d      	b.n	8002e38 <HAL_GPIO_Init+0x2ac>
  {
    /* Get current io position */
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 8002b9c:	683b      	ldr	r3, [r7, #0]
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	2101      	movs	r1, #1
 8002ba2:	693a      	ldr	r2, [r7, #16]
 8002ba4:	4091      	lsls	r1, r2
 8002ba6:	000a      	movs	r2, r1
 8002ba8:	4013      	ands	r3, r2
 8002baa:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0U)
 8002bac:	68fb      	ldr	r3, [r7, #12]
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d100      	bne.n	8002bb4 <HAL_GPIO_Init+0x28>
 8002bb2:	e13e      	b.n	8002e32 <HAL_GPIO_Init+0x2a6>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	685b      	ldr	r3, [r3, #4]
 8002bb8:	2b02      	cmp	r3, #2
 8002bba:	d003      	beq.n	8002bc4 <HAL_GPIO_Init+0x38>
 8002bbc:	683b      	ldr	r3, [r7, #0]
 8002bbe:	685b      	ldr	r3, [r3, #4]
 8002bc0:	2b12      	cmp	r3, #18
 8002bc2:	d125      	bne.n	8002c10 <HAL_GPIO_Init+0x84>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(pGPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        tmp = GPIOx->AFR[position >> 3U];
 8002bc4:	693b      	ldr	r3, [r7, #16]
 8002bc6:	08da      	lsrs	r2, r3, #3
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	3208      	adds	r2, #8
 8002bcc:	0092      	lsls	r2, r2, #2
 8002bce:	58d3      	ldr	r3, [r2, r3]
 8002bd0:	617b      	str	r3, [r7, #20]
        tmp &= ~(0xFUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos)) ;
 8002bd2:	693b      	ldr	r3, [r7, #16]
 8002bd4:	2207      	movs	r2, #7
 8002bd6:	4013      	ands	r3, r2
 8002bd8:	009b      	lsls	r3, r3, #2
 8002bda:	220f      	movs	r2, #15
 8002bdc:	409a      	lsls	r2, r3
 8002bde:	0013      	movs	r3, r2
 8002be0:	43da      	mvns	r2, r3
 8002be2:	697b      	ldr	r3, [r7, #20]
 8002be4:	4013      	ands	r3, r2
 8002be6:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8002be8:	683b      	ldr	r3, [r7, #0]
 8002bea:	691b      	ldr	r3, [r3, #16]
 8002bec:	220f      	movs	r2, #15
 8002bee:	401a      	ands	r2, r3
 8002bf0:	693b      	ldr	r3, [r7, #16]
 8002bf2:	2107      	movs	r1, #7
 8002bf4:	400b      	ands	r3, r1
 8002bf6:	009b      	lsls	r3, r3, #2
 8002bf8:	409a      	lsls	r2, r3
 8002bfa:	0013      	movs	r3, r2
 8002bfc:	697a      	ldr	r2, [r7, #20]
 8002bfe:	4313      	orrs	r3, r2
 8002c00:	617b      	str	r3, [r7, #20]
        GPIOx->AFR[position >> 3U] = tmp;
 8002c02:	693b      	ldr	r3, [r7, #16]
 8002c04:	08da      	lsrs	r2, r3, #3
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	3208      	adds	r2, #8
 8002c0a:	0092      	lsls	r2, r2, #2
 8002c0c:	6979      	ldr	r1, [r7, #20]
 8002c0e:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      tmp = GPIOx->MODER;
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	617b      	str	r3, [r7, #20]
      tmp &= ~(GPIO_MODER_MODE0 << (position * GPIO_MODER_MODE1_Pos));
 8002c16:	693b      	ldr	r3, [r7, #16]
 8002c18:	005b      	lsls	r3, r3, #1
 8002c1a:	2203      	movs	r2, #3
 8002c1c:	409a      	lsls	r2, r3
 8002c1e:	0013      	movs	r3, r2
 8002c20:	43da      	mvns	r2, r3
 8002c22:	697b      	ldr	r3, [r7, #20]
 8002c24:	4013      	ands	r3, r2
 8002c26:	617b      	str	r3, [r7, #20]
      tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (position * GPIO_MODER_MODE1_Pos));
 8002c28:	683b      	ldr	r3, [r7, #0]
 8002c2a:	685b      	ldr	r3, [r3, #4]
 8002c2c:	2203      	movs	r2, #3
 8002c2e:	401a      	ands	r2, r3
 8002c30:	693b      	ldr	r3, [r7, #16]
 8002c32:	005b      	lsls	r3, r3, #1
 8002c34:	409a      	lsls	r2, r3
 8002c36:	0013      	movs	r3, r2
 8002c38:	697a      	ldr	r2, [r7, #20]
 8002c3a:	4313      	orrs	r3, r2
 8002c3c:	617b      	str	r3, [r7, #20]
      GPIOx->MODER = tmp;
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	697a      	ldr	r2, [r7, #20]
 8002c42:	601a      	str	r2, [r3, #0]

      /* In case of Output or Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002c44:	683b      	ldr	r3, [r7, #0]
 8002c46:	685b      	ldr	r3, [r3, #4]
 8002c48:	2b01      	cmp	r3, #1
 8002c4a:	d00b      	beq.n	8002c64 <HAL_GPIO_Init+0xd8>
 8002c4c:	683b      	ldr	r3, [r7, #0]
 8002c4e:	685b      	ldr	r3, [r3, #4]
 8002c50:	2b02      	cmp	r3, #2
 8002c52:	d007      	beq.n	8002c64 <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002c54:	683b      	ldr	r3, [r7, #0]
 8002c56:	685b      	ldr	r3, [r3, #4]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002c58:	2b11      	cmp	r3, #17
 8002c5a:	d003      	beq.n	8002c64 <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002c5c:	683b      	ldr	r3, [r7, #0]
 8002c5e:	685b      	ldr	r3, [r3, #4]
 8002c60:	2b12      	cmp	r3, #18
 8002c62:	d130      	bne.n	8002cc6 <HAL_GPIO_Init+0x13a>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(pGPIO_Init->Speed));

        /* Configure the IO Speed */
        tmp = GPIOx->OSPEEDR;
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	689b      	ldr	r3, [r3, #8]
 8002c68:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 8002c6a:	693b      	ldr	r3, [r7, #16]
 8002c6c:	005b      	lsls	r3, r3, #1
 8002c6e:	2203      	movs	r2, #3
 8002c70:	409a      	lsls	r2, r3
 8002c72:	0013      	movs	r3, r2
 8002c74:	43da      	mvns	r2, r3
 8002c76:	697b      	ldr	r3, [r7, #20]
 8002c78:	4013      	ands	r3, r2
 8002c7a:	617b      	str	r3, [r7, #20]
        tmp |= (pGPIO_Init->Speed << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 8002c7c:	683b      	ldr	r3, [r7, #0]
 8002c7e:	68da      	ldr	r2, [r3, #12]
 8002c80:	693b      	ldr	r3, [r7, #16]
 8002c82:	005b      	lsls	r3, r3, #1
 8002c84:	409a      	lsls	r2, r3
 8002c86:	0013      	movs	r3, r2
 8002c88:	697a      	ldr	r2, [r7, #20]
 8002c8a:	4313      	orrs	r3, r2
 8002c8c:	617b      	str	r3, [r7, #20]
        GPIOx->OSPEEDR = tmp;
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	697a      	ldr	r2, [r7, #20]
 8002c92:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        tmp = GPIOx->OTYPER;
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	685b      	ldr	r3, [r3, #4]
 8002c98:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	693b      	ldr	r3, [r7, #16]
 8002c9e:	409a      	lsls	r2, r3
 8002ca0:	0013      	movs	r3, r2
 8002ca2:	43da      	mvns	r2, r3
 8002ca4:	697b      	ldr	r3, [r7, #20]
 8002ca6:	4013      	ands	r3, r2
 8002ca8:	617b      	str	r3, [r7, #20]
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8002caa:	683b      	ldr	r3, [r7, #0]
 8002cac:	685b      	ldr	r3, [r3, #4]
 8002cae:	091b      	lsrs	r3, r3, #4
 8002cb0:	2201      	movs	r2, #1
 8002cb2:	401a      	ands	r2, r3
 8002cb4:	693b      	ldr	r3, [r7, #16]
 8002cb6:	409a      	lsls	r2, r3
 8002cb8:	0013      	movs	r3, r2
 8002cba:	697a      	ldr	r2, [r7, #20]
 8002cbc:	4313      	orrs	r3, r2
 8002cbe:	617b      	str	r3, [r7, #20]
        GPIOx->OTYPER = tmp;
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	697a      	ldr	r2, [r7, #20]
 8002cc4:	605a      	str	r2, [r3, #4]
      }

      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 8002cc6:	683b      	ldr	r3, [r7, #0]
 8002cc8:	685b      	ldr	r3, [r3, #4]
 8002cca:	2b03      	cmp	r3, #3
 8002ccc:	d017      	beq.n	8002cfe <HAL_GPIO_Init+0x172>
      {
        /* Check the Pull parameters */
        assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        tmp = GPIOx->PUPDR;
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	68db      	ldr	r3, [r3, #12]
 8002cd2:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (position * GPIO_PUPDR_PUPD1_Pos));
 8002cd4:	693b      	ldr	r3, [r7, #16]
 8002cd6:	005b      	lsls	r3, r3, #1
 8002cd8:	2203      	movs	r2, #3
 8002cda:	409a      	lsls	r2, r3
 8002cdc:	0013      	movs	r3, r2
 8002cde:	43da      	mvns	r2, r3
 8002ce0:	697b      	ldr	r3, [r7, #20]
 8002ce2:	4013      	ands	r3, r2
 8002ce4:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Pull) << (position * GPIO_PUPDR_PUPD1_Pos));
 8002ce6:	683b      	ldr	r3, [r7, #0]
 8002ce8:	689a      	ldr	r2, [r3, #8]
 8002cea:	693b      	ldr	r3, [r7, #16]
 8002cec:	005b      	lsls	r3, r3, #1
 8002cee:	409a      	lsls	r2, r3
 8002cf0:	0013      	movs	r3, r2
 8002cf2:	697a      	ldr	r2, [r7, #20]
 8002cf4:	4313      	orrs	r3, r2
 8002cf6:	617b      	str	r3, [r7, #20]
        GPIOx->PUPDR = tmp;
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	697a      	ldr	r2, [r7, #20]
 8002cfc:	60da      	str	r2, [r3, #12]
      }

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8002cfe:	683b      	ldr	r3, [r7, #0]
 8002d00:	685a      	ldr	r2, [r3, #4]
 8002d02:	2380      	movs	r3, #128	@ 0x80
 8002d04:	055b      	lsls	r3, r3, #21
 8002d06:	4013      	ands	r3, r2
 8002d08:	d100      	bne.n	8002d0c <HAL_GPIO_Init+0x180>
 8002d0a:	e092      	b.n	8002e32 <HAL_GPIO_Init+0x2a6>
      {
        tmp = EXTI->EXTICR[position >> 2U];
 8002d0c:	4a50      	ldr	r2, [pc, #320]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002d0e:	693b      	ldr	r3, [r7, #16]
 8002d10:	089b      	lsrs	r3, r3, #2
 8002d12:	3318      	adds	r3, #24
 8002d14:	009b      	lsls	r3, r3, #2
 8002d16:	589b      	ldr	r3, [r3, r2]
 8002d18:	617b      	str	r3, [r7, #20]
        tmp &= ~((0x0FUL) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 8002d1a:	693b      	ldr	r3, [r7, #16]
 8002d1c:	2203      	movs	r2, #3
 8002d1e:	4013      	ands	r3, r2
 8002d20:	00db      	lsls	r3, r3, #3
 8002d22:	220f      	movs	r2, #15
 8002d24:	409a      	lsls	r2, r3
 8002d26:	0013      	movs	r3, r2
 8002d28:	43da      	mvns	r2, r3
 8002d2a:	697b      	ldr	r3, [r7, #20]
 8002d2c:	4013      	ands	r3, r2
 8002d2e:	617b      	str	r3, [r7, #20]
        tmp |= (GPIO_GET_INDEX(GPIOx) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 8002d30:	687a      	ldr	r2, [r7, #4]
 8002d32:	23a0      	movs	r3, #160	@ 0xa0
 8002d34:	05db      	lsls	r3, r3, #23
 8002d36:	429a      	cmp	r2, r3
 8002d38:	d013      	beq.n	8002d62 <HAL_GPIO_Init+0x1d6>
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	4a45      	ldr	r2, [pc, #276]	@ (8002e54 <HAL_GPIO_Init+0x2c8>)
 8002d3e:	4293      	cmp	r3, r2
 8002d40:	d00d      	beq.n	8002d5e <HAL_GPIO_Init+0x1d2>
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	4a44      	ldr	r2, [pc, #272]	@ (8002e58 <HAL_GPIO_Init+0x2cc>)
 8002d46:	4293      	cmp	r3, r2
 8002d48:	d007      	beq.n	8002d5a <HAL_GPIO_Init+0x1ce>
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	4a43      	ldr	r2, [pc, #268]	@ (8002e5c <HAL_GPIO_Init+0x2d0>)
 8002d4e:	4293      	cmp	r3, r2
 8002d50:	d101      	bne.n	8002d56 <HAL_GPIO_Init+0x1ca>
 8002d52:	2305      	movs	r3, #5
 8002d54:	e006      	b.n	8002d64 <HAL_GPIO_Init+0x1d8>
 8002d56:	2306      	movs	r3, #6
 8002d58:	e004      	b.n	8002d64 <HAL_GPIO_Init+0x1d8>
 8002d5a:	2302      	movs	r3, #2
 8002d5c:	e002      	b.n	8002d64 <HAL_GPIO_Init+0x1d8>
 8002d5e:	2301      	movs	r3, #1
 8002d60:	e000      	b.n	8002d64 <HAL_GPIO_Init+0x1d8>
 8002d62:	2300      	movs	r3, #0
 8002d64:	693a      	ldr	r2, [r7, #16]
 8002d66:	2103      	movs	r1, #3
 8002d68:	400a      	ands	r2, r1
 8002d6a:	00d2      	lsls	r2, r2, #3
 8002d6c:	4093      	lsls	r3, r2
 8002d6e:	697a      	ldr	r2, [r7, #20]
 8002d70:	4313      	orrs	r3, r2
 8002d72:	617b      	str	r3, [r7, #20]
        EXTI->EXTICR[position >> 2U] = tmp;
 8002d74:	4936      	ldr	r1, [pc, #216]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002d76:	693b      	ldr	r3, [r7, #16]
 8002d78:	089b      	lsrs	r3, r3, #2
 8002d7a:	3318      	adds	r3, #24
 8002d7c:	009b      	lsls	r3, r3, #2
 8002d7e:	697a      	ldr	r2, [r7, #20]
 8002d80:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        tmp = EXTI->IMR1;
 8002d82:	4a33      	ldr	r2, [pc, #204]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002d84:	2380      	movs	r3, #128	@ 0x80
 8002d86:	58d3      	ldr	r3, [r2, r3]
 8002d88:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	43da      	mvns	r2, r3
 8002d8e:	697b      	ldr	r3, [r7, #20]
 8002d90:	4013      	ands	r3, r2
 8002d92:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8002d94:	683b      	ldr	r3, [r7, #0]
 8002d96:	685a      	ldr	r2, [r3, #4]
 8002d98:	2380      	movs	r3, #128	@ 0x80
 8002d9a:	025b      	lsls	r3, r3, #9
 8002d9c:	4013      	ands	r3, r2
 8002d9e:	d003      	beq.n	8002da8 <HAL_GPIO_Init+0x21c>
        {
          tmp |= iocurrent;
 8002da0:	697a      	ldr	r2, [r7, #20]
 8002da2:	68fb      	ldr	r3, [r7, #12]
 8002da4:	4313      	orrs	r3, r2
 8002da6:	617b      	str	r3, [r7, #20]
        }
        EXTI->IMR1 = tmp;
 8002da8:	4929      	ldr	r1, [pc, #164]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002daa:	2280      	movs	r2, #128	@ 0x80
 8002dac:	697b      	ldr	r3, [r7, #20]
 8002dae:	508b      	str	r3, [r1, r2]

        tmp = EXTI->EMR1;
 8002db0:	4a27      	ldr	r2, [pc, #156]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002db2:	2384      	movs	r3, #132	@ 0x84
 8002db4:	58d3      	ldr	r3, [r2, r3]
 8002db6:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	43da      	mvns	r2, r3
 8002dbc:	697b      	ldr	r3, [r7, #20]
 8002dbe:	4013      	ands	r3, r2
 8002dc0:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8002dc2:	683b      	ldr	r3, [r7, #0]
 8002dc4:	685a      	ldr	r2, [r3, #4]
 8002dc6:	2380      	movs	r3, #128	@ 0x80
 8002dc8:	029b      	lsls	r3, r3, #10
 8002dca:	4013      	ands	r3, r2
 8002dcc:	d003      	beq.n	8002dd6 <HAL_GPIO_Init+0x24a>
        {
          tmp |= iocurrent;
 8002dce:	697a      	ldr	r2, [r7, #20]
 8002dd0:	68fb      	ldr	r3, [r7, #12]
 8002dd2:	4313      	orrs	r3, r2
 8002dd4:	617b      	str	r3, [r7, #20]
        }
        EXTI->EMR1 = tmp;
 8002dd6:	491e      	ldr	r1, [pc, #120]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002dd8:	2284      	movs	r2, #132	@ 0x84
 8002dda:	697b      	ldr	r3, [r7, #20]
 8002ddc:	508b      	str	r3, [r1, r2]

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 8002dde:	4b1c      	ldr	r3, [pc, #112]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002de4:	68fb      	ldr	r3, [r7, #12]
 8002de6:	43da      	mvns	r2, r3
 8002de8:	697b      	ldr	r3, [r7, #20]
 8002dea:	4013      	ands	r3, r2
 8002dec:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	685a      	ldr	r2, [r3, #4]
 8002df2:	2380      	movs	r3, #128	@ 0x80
 8002df4:	035b      	lsls	r3, r3, #13
 8002df6:	4013      	ands	r3, r2
 8002df8:	d003      	beq.n	8002e02 <HAL_GPIO_Init+0x276>
        {
          tmp |= iocurrent;
 8002dfa:	697a      	ldr	r2, [r7, #20]
 8002dfc:	68fb      	ldr	r3, [r7, #12]
 8002dfe:	4313      	orrs	r3, r2
 8002e00:	617b      	str	r3, [r7, #20]
        }
        EXTI->RTSR1 = tmp;
 8002e02:	4b13      	ldr	r3, [pc, #76]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002e04:	697a      	ldr	r2, [r7, #20]
 8002e06:	601a      	str	r2, [r3, #0]

        tmp = EXTI->FTSR1;
 8002e08:	4b11      	ldr	r3, [pc, #68]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002e0a:	685b      	ldr	r3, [r3, #4]
 8002e0c:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	43da      	mvns	r2, r3
 8002e12:	697b      	ldr	r3, [r7, #20]
 8002e14:	4013      	ands	r3, r2
 8002e16:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8002e18:	683b      	ldr	r3, [r7, #0]
 8002e1a:	685a      	ldr	r2, [r3, #4]
 8002e1c:	2380      	movs	r3, #128	@ 0x80
 8002e1e:	039b      	lsls	r3, r3, #14
 8002e20:	4013      	ands	r3, r2
 8002e22:	d003      	beq.n	8002e2c <HAL_GPIO_Init+0x2a0>
        {
          tmp |= iocurrent;
 8002e24:	697a      	ldr	r2, [r7, #20]
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	4313      	orrs	r3, r2
 8002e2a:	617b      	str	r3, [r7, #20]
        }
        EXTI->FTSR1 = tmp;
 8002e2c:	4b08      	ldr	r3, [pc, #32]	@ (8002e50 <HAL_GPIO_Init+0x2c4>)
 8002e2e:	697a      	ldr	r2, [r7, #20]
 8002e30:	605a      	str	r2, [r3, #4]
      }
    }

    position++;
 8002e32:	693b      	ldr	r3, [r7, #16]
 8002e34:	3301      	adds	r3, #1
 8002e36:	613b      	str	r3, [r7, #16]
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8002e38:	683b      	ldr	r3, [r7, #0]
 8002e3a:	681a      	ldr	r2, [r3, #0]
 8002e3c:	693b      	ldr	r3, [r7, #16]
 8002e3e:	40da      	lsrs	r2, r3
 8002e40:	1e13      	subs	r3, r2, #0
 8002e42:	d000      	beq.n	8002e46 <HAL_GPIO_Init+0x2ba>
 8002e44:	e6aa      	b.n	8002b9c <HAL_GPIO_Init+0x10>
  }
}
 8002e46:	46c0      	nop			@ (mov r8, r8)
 8002e48:	46c0      	nop			@ (mov r8, r8)
 8002e4a:	46bd      	mov	sp, r7
 8002e4c:	b006      	add	sp, #24
 8002e4e:	bd80      	pop	{r7, pc}
 8002e50:	40021800 	.word	0x40021800
 8002e54:	50000400 	.word	0x50000400
 8002e58:	50000800 	.word	0x50000800
 8002e5c:	50001400 	.word	0x50001400

08002e60 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002e60:	b580      	push	{r7, lr}
 8002e62:	b082      	sub	sp, #8
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	6078      	str	r0, [r7, #4]
 8002e68:	0008      	movs	r0, r1
 8002e6a:	0011      	movs	r1, r2
 8002e6c:	1cbb      	adds	r3, r7, #2
 8002e6e:	1c02      	adds	r2, r0, #0
 8002e70:	801a      	strh	r2, [r3, #0]
 8002e72:	1c7b      	adds	r3, r7, #1
 8002e74:	1c0a      	adds	r2, r1, #0
 8002e76:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002e78:	1c7b      	adds	r3, r7, #1
 8002e7a:	781b      	ldrb	r3, [r3, #0]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	d004      	beq.n	8002e8a <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8002e80:	1cbb      	adds	r3, r7, #2
 8002e82:	881a      	ldrh	r2, [r3, #0]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8002e88:	e003      	b.n	8002e92 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8002e8a:	1cbb      	adds	r3, r7, #2
 8002e8c:	881a      	ldrh	r2, [r3, #0]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002e92:	46c0      	nop			@ (mov r8, r8)
 8002e94:	46bd      	mov	sp, r7
 8002e96:	b002      	add	sp, #8
 8002e98:	bd80      	pop	{r7, pc}
	...

08002e9c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	b086      	sub	sp, #24
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp_sysclksrc;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d101      	bne.n	8002eae <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8002eaa:	2301      	movs	r3, #1
 8002eac:	e1d0      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	2201      	movs	r2, #1
 8002eb4:	4013      	ands	r3, r2
 8002eb6:	d100      	bne.n	8002eba <HAL_RCC_OscConfig+0x1e>
 8002eb8:	e069      	b.n	8002f8e <HAL_RCC_OscConfig+0xf2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002eba:	4bc8      	ldr	r3, [pc, #800]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002ebc:	689b      	ldr	r3, [r3, #8]
 8002ebe:	2238      	movs	r2, #56	@ 0x38
 8002ec0:	4013      	ands	r3, r2
 8002ec2:	617b      	str	r3, [r7, #20]

    /* When the HSE is used as system clock in these cases it is not allowed to be disabled */
    if (temp_sysclksrc == RCC_CFGR_SWS_HSE)
 8002ec4:	697b      	ldr	r3, [r7, #20]
 8002ec6:	2b08      	cmp	r3, #8
 8002ec8:	d105      	bne.n	8002ed6 <HAL_RCC_OscConfig+0x3a>
    {
      if (RCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	685b      	ldr	r3, [r3, #4]
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d15d      	bne.n	8002f8e <HAL_RCC_OscConfig+0xf2>
      {
        return HAL_ERROR;
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	e1bc      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	685a      	ldr	r2, [r3, #4]
 8002eda:	2380      	movs	r3, #128	@ 0x80
 8002edc:	025b      	lsls	r3, r3, #9
 8002ede:	429a      	cmp	r2, r3
 8002ee0:	d107      	bne.n	8002ef2 <HAL_RCC_OscConfig+0x56>
 8002ee2:	4bbe      	ldr	r3, [pc, #760]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002ee4:	681a      	ldr	r2, [r3, #0]
 8002ee6:	4bbd      	ldr	r3, [pc, #756]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002ee8:	2180      	movs	r1, #128	@ 0x80
 8002eea:	0249      	lsls	r1, r1, #9
 8002eec:	430a      	orrs	r2, r1
 8002eee:	601a      	str	r2, [r3, #0]
 8002ef0:	e020      	b.n	8002f34 <HAL_RCC_OscConfig+0x98>
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	685a      	ldr	r2, [r3, #4]
 8002ef6:	23a0      	movs	r3, #160	@ 0xa0
 8002ef8:	02db      	lsls	r3, r3, #11
 8002efa:	429a      	cmp	r2, r3
 8002efc:	d10e      	bne.n	8002f1c <HAL_RCC_OscConfig+0x80>
 8002efe:	4bb7      	ldr	r3, [pc, #732]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f00:	681a      	ldr	r2, [r3, #0]
 8002f02:	4bb6      	ldr	r3, [pc, #728]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f04:	2180      	movs	r1, #128	@ 0x80
 8002f06:	02c9      	lsls	r1, r1, #11
 8002f08:	430a      	orrs	r2, r1
 8002f0a:	601a      	str	r2, [r3, #0]
 8002f0c:	4bb3      	ldr	r3, [pc, #716]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f0e:	681a      	ldr	r2, [r3, #0]
 8002f10:	4bb2      	ldr	r3, [pc, #712]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f12:	2180      	movs	r1, #128	@ 0x80
 8002f14:	0249      	lsls	r1, r1, #9
 8002f16:	430a      	orrs	r2, r1
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	e00b      	b.n	8002f34 <HAL_RCC_OscConfig+0x98>
 8002f1c:	4baf      	ldr	r3, [pc, #700]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	4bae      	ldr	r3, [pc, #696]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f22:	49af      	ldr	r1, [pc, #700]	@ (80031e0 <HAL_RCC_OscConfig+0x344>)
 8002f24:	400a      	ands	r2, r1
 8002f26:	601a      	str	r2, [r3, #0]
 8002f28:	4bac      	ldr	r3, [pc, #688]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f2a:	681a      	ldr	r2, [r3, #0]
 8002f2c:	4bab      	ldr	r3, [pc, #684]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f2e:	49ad      	ldr	r1, [pc, #692]	@ (80031e4 <HAL_RCC_OscConfig+0x348>)
 8002f30:	400a      	ands	r2, r1
 8002f32:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	685b      	ldr	r3, [r3, #4]
 8002f38:	2b00      	cmp	r3, #0
 8002f3a:	d014      	beq.n	8002f66 <HAL_RCC_OscConfig+0xca>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f3c:	f7ff fc60 	bl	8002800 <HAL_GetTick>
 8002f40:	0003      	movs	r3, r0
 8002f42:	613b      	str	r3, [r7, #16]

        /* Wait till HSE is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002f44:	e008      	b.n	8002f58 <HAL_RCC_OscConfig+0xbc>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002f46:	f7ff fc5b 	bl	8002800 <HAL_GetTick>
 8002f4a:	0002      	movs	r2, r0
 8002f4c:	693b      	ldr	r3, [r7, #16]
 8002f4e:	1ad3      	subs	r3, r2, r3
 8002f50:	2b64      	cmp	r3, #100	@ 0x64
 8002f52:	d901      	bls.n	8002f58 <HAL_RCC_OscConfig+0xbc>
          {
            return HAL_TIMEOUT;
 8002f54:	2303      	movs	r3, #3
 8002f56:	e17b      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002f58:	4ba0      	ldr	r3, [pc, #640]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f5a:	681a      	ldr	r2, [r3, #0]
 8002f5c:	2380      	movs	r3, #128	@ 0x80
 8002f5e:	029b      	lsls	r3, r3, #10
 8002f60:	4013      	ands	r3, r2
 8002f62:	d0f0      	beq.n	8002f46 <HAL_RCC_OscConfig+0xaa>
 8002f64:	e013      	b.n	8002f8e <HAL_RCC_OscConfig+0xf2>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f66:	f7ff fc4b 	bl	8002800 <HAL_GetTick>
 8002f6a:	0003      	movs	r3, r0
 8002f6c:	613b      	str	r3, [r7, #16]

        /* Wait till HSE is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002f6e:	e008      	b.n	8002f82 <HAL_RCC_OscConfig+0xe6>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002f70:	f7ff fc46 	bl	8002800 <HAL_GetTick>
 8002f74:	0002      	movs	r2, r0
 8002f76:	693b      	ldr	r3, [r7, #16]
 8002f78:	1ad3      	subs	r3, r2, r3
 8002f7a:	2b64      	cmp	r3, #100	@ 0x64
 8002f7c:	d901      	bls.n	8002f82 <HAL_RCC_OscConfig+0xe6>
          {
            return HAL_TIMEOUT;
 8002f7e:	2303      	movs	r3, #3
 8002f80:	e166      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002f82:	4b96      	ldr	r3, [pc, #600]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f84:	681a      	ldr	r2, [r3, #0]
 8002f86:	2380      	movs	r3, #128	@ 0x80
 8002f88:	029b      	lsls	r3, r3, #10
 8002f8a:	4013      	ands	r3, r2
 8002f8c:	d1f0      	bne.n	8002f70 <HAL_RCC_OscConfig+0xd4>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	2202      	movs	r2, #2
 8002f94:	4013      	ands	r3, r2
 8002f96:	d100      	bne.n	8002f9a <HAL_RCC_OscConfig+0xfe>
 8002f98:	e086      	b.n	80030a8 <HAL_RCC_OscConfig+0x20c>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    assert_param(IS_RCC_HSIDIV(RCC_OscInitStruct->HSIDiv));

    /* Check if HSI48 is used as system clock  */
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002f9a:	4b90      	ldr	r3, [pc, #576]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002f9c:	689b      	ldr	r3, [r3, #8]
 8002f9e:	2238      	movs	r2, #56	@ 0x38
 8002fa0:	4013      	ands	r3, r2
 8002fa2:	617b      	str	r3, [r7, #20]

    if (temp_sysclksrc == RCC_CFGR_SWS_HSI)
 8002fa4:	697b      	ldr	r3, [r7, #20]
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d12f      	bne.n	800300a <HAL_RCC_OscConfig+0x16e>
    {
      /* When HSI is used as system clock it can not be disabled */
      if (RCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	68db      	ldr	r3, [r3, #12]
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d101      	bne.n	8002fb6 <HAL_RCC_OscConfig+0x11a>
      {
        return HAL_ERROR;
 8002fb2:	2301      	movs	r3, #1
 8002fb4:	e14c      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002fb6:	4b89      	ldr	r3, [pc, #548]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002fb8:	685b      	ldr	r3, [r3, #4]
 8002fba:	4a8b      	ldr	r2, [pc, #556]	@ (80031e8 <HAL_RCC_OscConfig+0x34c>)
 8002fbc:	4013      	ands	r3, r2
 8002fbe:	0019      	movs	r1, r3
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	695b      	ldr	r3, [r3, #20]
 8002fc4:	021a      	lsls	r2, r3, #8
 8002fc6:	4b85      	ldr	r3, [pc, #532]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002fc8:	430a      	orrs	r2, r1
 8002fca:	605a      	str	r2, [r3, #4]

        if (temp_sysclksrc == RCC_CFGR_SWS_HSI)
 8002fcc:	697b      	ldr	r3, [r7, #20]
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d112      	bne.n	8002ff8 <HAL_RCC_OscConfig+0x15c>
        {
          /* Adjust the HSI48 division factor */
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002fd2:	4b82      	ldr	r3, [pc, #520]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	4a85      	ldr	r2, [pc, #532]	@ (80031ec <HAL_RCC_OscConfig+0x350>)
 8002fd8:	4013      	ands	r3, r2
 8002fda:	0019      	movs	r1, r3
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	691a      	ldr	r2, [r3, #16]
 8002fe0:	4b7e      	ldr	r3, [pc, #504]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002fe2:	430a      	orrs	r2, r1
 8002fe4:	601a      	str	r2, [r3, #0]

          /* Update the SystemCoreClock global variable with HSISYS value  */
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 8002fe6:	4b7d      	ldr	r3, [pc, #500]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	0adb      	lsrs	r3, r3, #11
 8002fec:	2207      	movs	r2, #7
 8002fee:	4013      	ands	r3, r2
 8002ff0:	4a7f      	ldr	r2, [pc, #508]	@ (80031f0 <HAL_RCC_OscConfig+0x354>)
 8002ff2:	40da      	lsrs	r2, r3
 8002ff4:	4b7f      	ldr	r3, [pc, #508]	@ (80031f4 <HAL_RCC_OscConfig+0x358>)
 8002ff6:	601a      	str	r2, [r3, #0]
        }

        /* Adapt Systick interrupt period */
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8002ff8:	4b7f      	ldr	r3, [pc, #508]	@ (80031f8 <HAL_RCC_OscConfig+0x35c>)
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	0018      	movs	r0, r3
 8002ffe:	f7ff fba3 	bl	8002748 <HAL_InitTick>
 8003002:	1e03      	subs	r3, r0, #0
 8003004:	d050      	beq.n	80030a8 <HAL_RCC_OscConfig+0x20c>
        {
          return HAL_ERROR;
 8003006:	2301      	movs	r3, #1
 8003008:	e122      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	68db      	ldr	r3, [r3, #12]
 800300e:	2b00      	cmp	r3, #0
 8003010:	d030      	beq.n	8003074 <HAL_RCC_OscConfig+0x1d8>
      {
        /* Configure the HSI48 division factor */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8003012:	4b72      	ldr	r3, [pc, #456]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	4a75      	ldr	r2, [pc, #468]	@ (80031ec <HAL_RCC_OscConfig+0x350>)
 8003018:	4013      	ands	r3, r2
 800301a:	0019      	movs	r1, r3
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	691a      	ldr	r2, [r3, #16]
 8003020:	4b6e      	ldr	r3, [pc, #440]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003022:	430a      	orrs	r2, r1
 8003024:	601a      	str	r2, [r3, #0]

        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI_ENABLE();
 8003026:	4b6d      	ldr	r3, [pc, #436]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003028:	681a      	ldr	r2, [r3, #0]
 800302a:	4b6c      	ldr	r3, [pc, #432]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800302c:	2180      	movs	r1, #128	@ 0x80
 800302e:	0049      	lsls	r1, r1, #1
 8003030:	430a      	orrs	r2, r1
 8003032:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003034:	f7ff fbe4 	bl	8002800 <HAL_GetTick>
 8003038:	0003      	movs	r3, r0
 800303a:	613b      	str	r3, [r7, #16]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800303c:	e008      	b.n	8003050 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 800303e:	f7ff fbdf 	bl	8002800 <HAL_GetTick>
 8003042:	0002      	movs	r2, r0
 8003044:	693b      	ldr	r3, [r7, #16]
 8003046:	1ad3      	subs	r3, r2, r3
 8003048:	2b02      	cmp	r3, #2
 800304a:	d901      	bls.n	8003050 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 800304c:	2303      	movs	r3, #3
 800304e:	e0ff      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8003050:	4b62      	ldr	r3, [pc, #392]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003052:	681a      	ldr	r2, [r3, #0]
 8003054:	2380      	movs	r3, #128	@ 0x80
 8003056:	00db      	lsls	r3, r3, #3
 8003058:	4013      	ands	r3, r2
 800305a:	d0f0      	beq.n	800303e <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800305c:	4b5f      	ldr	r3, [pc, #380]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800305e:	685b      	ldr	r3, [r3, #4]
 8003060:	4a61      	ldr	r2, [pc, #388]	@ (80031e8 <HAL_RCC_OscConfig+0x34c>)
 8003062:	4013      	ands	r3, r2
 8003064:	0019      	movs	r1, r3
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	695b      	ldr	r3, [r3, #20]
 800306a:	021a      	lsls	r2, r3, #8
 800306c:	4b5b      	ldr	r3, [pc, #364]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800306e:	430a      	orrs	r2, r1
 8003070:	605a      	str	r2, [r3, #4]
 8003072:	e019      	b.n	80030a8 <HAL_RCC_OscConfig+0x20c>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI_DISABLE();
 8003074:	4b59      	ldr	r3, [pc, #356]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003076:	681a      	ldr	r2, [r3, #0]
 8003078:	4b58      	ldr	r3, [pc, #352]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800307a:	4960      	ldr	r1, [pc, #384]	@ (80031fc <HAL_RCC_OscConfig+0x360>)
 800307c:	400a      	ands	r2, r1
 800307e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003080:	f7ff fbbe 	bl	8002800 <HAL_GetTick>
 8003084:	0003      	movs	r3, r0
 8003086:	613b      	str	r3, [r7, #16]

        /* Wait till HSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8003088:	e008      	b.n	800309c <HAL_RCC_OscConfig+0x200>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 800308a:	f7ff fbb9 	bl	8002800 <HAL_GetTick>
 800308e:	0002      	movs	r2, r0
 8003090:	693b      	ldr	r3, [r7, #16]
 8003092:	1ad3      	subs	r3, r2, r3
 8003094:	2b02      	cmp	r3, #2
 8003096:	d901      	bls.n	800309c <HAL_RCC_OscConfig+0x200>
          {
            return HAL_TIMEOUT;
 8003098:	2303      	movs	r3, #3
 800309a:	e0d9      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 800309c:	4b4f      	ldr	r3, [pc, #316]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800309e:	681a      	ldr	r2, [r3, #0]
 80030a0:	2380      	movs	r3, #128	@ 0x80
 80030a2:	00db      	lsls	r3, r3, #3
 80030a4:	4013      	ands	r3, r2
 80030a6:	d1f0      	bne.n	800308a <HAL_RCC_OscConfig+0x1ee>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	2208      	movs	r2, #8
 80030ae:	4013      	ands	r3, r2
 80030b0:	d042      	beq.n	8003138 <HAL_RCC_OscConfig+0x29c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check if LSI is used as system clock */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSI)
 80030b2:	4b4a      	ldr	r3, [pc, #296]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80030b4:	689b      	ldr	r3, [r3, #8]
 80030b6:	2238      	movs	r2, #56	@ 0x38
 80030b8:	4013      	ands	r3, r2
 80030ba:	2b18      	cmp	r3, #24
 80030bc:	d105      	bne.n	80030ca <HAL_RCC_OscConfig+0x22e>
    {
      /* When LSI is used as system clock it will not be disabled */
      if (RCC_OscInitStruct->LSIState == RCC_LSI_OFF)
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	699b      	ldr	r3, [r3, #24]
 80030c2:	2b00      	cmp	r3, #0
 80030c4:	d138      	bne.n	8003138 <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 80030c6:	2301      	movs	r3, #1
 80030c8:	e0c2      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
      }
    }
    else
    {
      /* Check the LSI State */
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	699b      	ldr	r3, [r3, #24]
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d019      	beq.n	8003106 <HAL_RCC_OscConfig+0x26a>
      {
        /* Enable the Internal Low Speed oscillator (LSI). */
        __HAL_RCC_LSI_ENABLE();
 80030d2:	4b42      	ldr	r3, [pc, #264]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80030d4:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80030d6:	4b41      	ldr	r3, [pc, #260]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80030d8:	2101      	movs	r1, #1
 80030da:	430a      	orrs	r2, r1
 80030dc:	661a      	str	r2, [r3, #96]	@ 0x60

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80030de:	f7ff fb8f 	bl	8002800 <HAL_GetTick>
 80030e2:	0003      	movs	r3, r0
 80030e4:	613b      	str	r3, [r7, #16]

        /* Wait till LSI is ready */
        while (READ_BIT(RCC->CSR2, RCC_CSR2_LSIRDY) == 0U)
 80030e6:	e008      	b.n	80030fa <HAL_RCC_OscConfig+0x25e>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 80030e8:	f7ff fb8a 	bl	8002800 <HAL_GetTick>
 80030ec:	0002      	movs	r2, r0
 80030ee:	693b      	ldr	r3, [r7, #16]
 80030f0:	1ad3      	subs	r3, r2, r3
 80030f2:	2b02      	cmp	r3, #2
 80030f4:	d901      	bls.n	80030fa <HAL_RCC_OscConfig+0x25e>
          {
            return HAL_TIMEOUT;
 80030f6:	2303      	movs	r3, #3
 80030f8:	e0aa      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CSR2, RCC_CSR2_LSIRDY) == 0U)
 80030fa:	4b38      	ldr	r3, [pc, #224]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80030fc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80030fe:	2202      	movs	r2, #2
 8003100:	4013      	ands	r3, r2
 8003102:	d0f1      	beq.n	80030e8 <HAL_RCC_OscConfig+0x24c>
 8003104:	e018      	b.n	8003138 <HAL_RCC_OscConfig+0x29c>
        }
      }
      else
      {
        /* Disable the Internal Low Speed oscillator (LSI). */
        __HAL_RCC_LSI_DISABLE();
 8003106:	4b35      	ldr	r3, [pc, #212]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003108:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800310a:	4b34      	ldr	r3, [pc, #208]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800310c:	2101      	movs	r1, #1
 800310e:	438a      	bics	r2, r1
 8003110:	661a      	str	r2, [r3, #96]	@ 0x60

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003112:	f7ff fb75 	bl	8002800 <HAL_GetTick>
 8003116:	0003      	movs	r3, r0
 8003118:	613b      	str	r3, [r7, #16]

        /* Wait till LSI is disabled */
        while (READ_BIT(RCC->CSR2, RCC_CSR2_LSIRDY) != 0U)
 800311a:	e008      	b.n	800312e <HAL_RCC_OscConfig+0x292>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 800311c:	f7ff fb70 	bl	8002800 <HAL_GetTick>
 8003120:	0002      	movs	r2, r0
 8003122:	693b      	ldr	r3, [r7, #16]
 8003124:	1ad3      	subs	r3, r2, r3
 8003126:	2b02      	cmp	r3, #2
 8003128:	d901      	bls.n	800312e <HAL_RCC_OscConfig+0x292>
          {
            return HAL_TIMEOUT;
 800312a:	2303      	movs	r3, #3
 800312c:	e090      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CSR2, RCC_CSR2_LSIRDY) != 0U)
 800312e:	4b2b      	ldr	r3, [pc, #172]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003130:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003132:	2202      	movs	r2, #2
 8003134:	4013      	ands	r3, r2
 8003136:	d1f1      	bne.n	800311c <HAL_RCC_OscConfig+0x280>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	2204      	movs	r2, #4
 800313e:	4013      	ands	r3, r2
 8003140:	d100      	bne.n	8003144 <HAL_RCC_OscConfig+0x2a8>
 8003142:	e084      	b.n	800324e <HAL_RCC_OscConfig+0x3b2>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003144:	230f      	movs	r3, #15
 8003146:	18fb      	adds	r3, r7, r3
 8003148:	2200      	movs	r2, #0
 800314a:	701a      	strb	r2, [r3, #0]

    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* When the LSE is used as system clock, it is not allowed disable it */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSE)
 800314c:	4b23      	ldr	r3, [pc, #140]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800314e:	689b      	ldr	r3, [r3, #8]
 8003150:	2238      	movs	r2, #56	@ 0x38
 8003152:	4013      	ands	r3, r2
 8003154:	2b20      	cmp	r3, #32
 8003156:	d106      	bne.n	8003166 <HAL_RCC_OscConfig+0x2ca>
    {
      if (RCC_OscInitStruct->LSEState == RCC_LSE_OFF)
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	689b      	ldr	r3, [r3, #8]
 800315c:	2b00      	cmp	r3, #0
 800315e:	d000      	beq.n	8003162 <HAL_RCC_OscConfig+0x2c6>
 8003160:	e075      	b.n	800324e <HAL_RCC_OscConfig+0x3b2>
      {
        return HAL_ERROR;
 8003162:	2301      	movs	r3, #1
 8003164:	e074      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
    }
    else
    {
      /* Update LSE configuration in RTC Domain control register    */
      /* Set the new LSE configuration -----------------------------------------*/
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	689b      	ldr	r3, [r3, #8]
 800316a:	2b01      	cmp	r3, #1
 800316c:	d106      	bne.n	800317c <HAL_RCC_OscConfig+0x2e0>
 800316e:	4b1b      	ldr	r3, [pc, #108]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003170:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003172:	4b1a      	ldr	r3, [pc, #104]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003174:	2101      	movs	r1, #1
 8003176:	430a      	orrs	r2, r1
 8003178:	65da      	str	r2, [r3, #92]	@ 0x5c
 800317a:	e01c      	b.n	80031b6 <HAL_RCC_OscConfig+0x31a>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	689b      	ldr	r3, [r3, #8]
 8003180:	2b05      	cmp	r3, #5
 8003182:	d10c      	bne.n	800319e <HAL_RCC_OscConfig+0x302>
 8003184:	4b15      	ldr	r3, [pc, #84]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003186:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003188:	4b14      	ldr	r3, [pc, #80]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 800318a:	2104      	movs	r1, #4
 800318c:	430a      	orrs	r2, r1
 800318e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003190:	4b12      	ldr	r3, [pc, #72]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003192:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003194:	4b11      	ldr	r3, [pc, #68]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 8003196:	2101      	movs	r1, #1
 8003198:	430a      	orrs	r2, r1
 800319a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800319c:	e00b      	b.n	80031b6 <HAL_RCC_OscConfig+0x31a>
 800319e:	4b0f      	ldr	r3, [pc, #60]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80031a0:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80031a2:	4b0e      	ldr	r3, [pc, #56]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80031a4:	2101      	movs	r1, #1
 80031a6:	438a      	bics	r2, r1
 80031a8:	65da      	str	r2, [r3, #92]	@ 0x5c
 80031aa:	4b0c      	ldr	r3, [pc, #48]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80031ac:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80031ae:	4b0b      	ldr	r3, [pc, #44]	@ (80031dc <HAL_RCC_OscConfig+0x340>)
 80031b0:	2104      	movs	r1, #4
 80031b2:	438a      	bics	r2, r1
 80031b4:	65da      	str	r2, [r3, #92]	@ 0x5c

      /* Check the LSE State */
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	689b      	ldr	r3, [r3, #8]
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d028      	beq.n	8003210 <HAL_RCC_OscConfig+0x374>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80031be:	f7ff fb1f 	bl	8002800 <HAL_GetTick>
 80031c2:	0003      	movs	r3, r0
 80031c4:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->CSR1, RCC_CSR1_LSERDY) == 0U)
 80031c6:	e01d      	b.n	8003204 <HAL_RCC_OscConfig+0x368>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80031c8:	f7ff fb1a 	bl	8002800 <HAL_GetTick>
 80031cc:	0002      	movs	r2, r0
 80031ce:	693b      	ldr	r3, [r7, #16]
 80031d0:	1ad3      	subs	r3, r2, r3
 80031d2:	4a0b      	ldr	r2, [pc, #44]	@ (8003200 <HAL_RCC_OscConfig+0x364>)
 80031d4:	4293      	cmp	r3, r2
 80031d6:	d915      	bls.n	8003204 <HAL_RCC_OscConfig+0x368>
          {
            return HAL_TIMEOUT;
 80031d8:	2303      	movs	r3, #3
 80031da:	e039      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
 80031dc:	40021000 	.word	0x40021000
 80031e0:	fffeffff 	.word	0xfffeffff
 80031e4:	fffbffff 	.word	0xfffbffff
 80031e8:	ffff80ff 	.word	0xffff80ff
 80031ec:	ffffc7ff 	.word	0xffffc7ff
 80031f0:	02dc6c00 	.word	0x02dc6c00
 80031f4:	20000010 	.word	0x20000010
 80031f8:	20000014 	.word	0x20000014
 80031fc:	fffffeff 	.word	0xfffffeff
 8003200:	00001388 	.word	0x00001388
        while (READ_BIT(RCC->CSR1, RCC_CSR1_LSERDY) == 0U)
 8003204:	4b14      	ldr	r3, [pc, #80]	@ (8003258 <HAL_RCC_OscConfig+0x3bc>)
 8003206:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003208:	2202      	movs	r2, #2
 800320a:	4013      	ands	r3, r2
 800320c:	d0dc      	beq.n	80031c8 <HAL_RCC_OscConfig+0x32c>
 800320e:	e013      	b.n	8003238 <HAL_RCC_OscConfig+0x39c>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003210:	f7ff faf6 	bl	8002800 <HAL_GetTick>
 8003214:	0003      	movs	r3, r0
 8003216:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is disabled */
        while (READ_BIT(RCC->CSR1, RCC_CSR1_LSERDY) != 0U)
 8003218:	e009      	b.n	800322e <HAL_RCC_OscConfig+0x392>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800321a:	f7ff faf1 	bl	8002800 <HAL_GetTick>
 800321e:	0002      	movs	r2, r0
 8003220:	693b      	ldr	r3, [r7, #16]
 8003222:	1ad3      	subs	r3, r2, r3
 8003224:	4a0d      	ldr	r2, [pc, #52]	@ (800325c <HAL_RCC_OscConfig+0x3c0>)
 8003226:	4293      	cmp	r3, r2
 8003228:	d901      	bls.n	800322e <HAL_RCC_OscConfig+0x392>
          {
            return HAL_TIMEOUT;
 800322a:	2303      	movs	r3, #3
 800322c:	e010      	b.n	8003250 <HAL_RCC_OscConfig+0x3b4>
        while (READ_BIT(RCC->CSR1, RCC_CSR1_LSERDY) != 0U)
 800322e:	4b0a      	ldr	r3, [pc, #40]	@ (8003258 <HAL_RCC_OscConfig+0x3bc>)
 8003230:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003232:	2202      	movs	r2, #2
 8003234:	4013      	ands	r3, r2
 8003236:	d1f0      	bne.n	800321a <HAL_RCC_OscConfig+0x37e>
          }
        }
      }

      /* Restore clock configuration if changed */
      if (pwrclkchanged == SET)
 8003238:	230f      	movs	r3, #15
 800323a:	18fb      	adds	r3, r7, r3
 800323c:	781b      	ldrb	r3, [r3, #0]
 800323e:	2b01      	cmp	r3, #1
 8003240:	d105      	bne.n	800324e <HAL_RCC_OscConfig+0x3b2>
      {
        __HAL_RCC_PWR_CLK_DISABLE();
 8003242:	4b05      	ldr	r3, [pc, #20]	@ (8003258 <HAL_RCC_OscConfig+0x3bc>)
 8003244:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003246:	4b04      	ldr	r3, [pc, #16]	@ (8003258 <HAL_RCC_OscConfig+0x3bc>)
 8003248:	4905      	ldr	r1, [pc, #20]	@ (8003260 <HAL_RCC_OscConfig+0x3c4>)
 800324a:	400a      	ands	r2, r1
 800324c:	63da      	str	r2, [r3, #60]	@ 0x3c
        }
      }
    }
  }
#endif /* RCC_CR_HSIUSB48ON */
  return HAL_OK;
 800324e:	2300      	movs	r3, #0
}
 8003250:	0018      	movs	r0, r3
 8003252:	46bd      	mov	sp, r7
 8003254:	b006      	add	sp, #24
 8003256:	bd80      	pop	{r7, pc}
 8003258:	40021000 	.word	0x40021000
 800325c:	00001388 	.word	0x00001388
 8003260:	efffffff 	.word	0xefffffff

08003264 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003264:	b580      	push	{r7, lr}
 8003266:	b084      	sub	sp, #16
 8003268:	af00      	add	r7, sp, #0
 800326a:	6078      	str	r0, [r7, #4]
 800326c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	2b00      	cmp	r3, #0
 8003272:	d101      	bne.n	8003278 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003274:	2301      	movs	r3, #1
 8003276:	e0e9      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the FLASH clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8003278:	4b76      	ldr	r3, [pc, #472]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	2207      	movs	r2, #7
 800327e:	4013      	ands	r3, r2
 8003280:	683a      	ldr	r2, [r7, #0]
 8003282:	429a      	cmp	r2, r3
 8003284:	d91e      	bls.n	80032c4 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003286:	4b73      	ldr	r3, [pc, #460]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	2207      	movs	r2, #7
 800328c:	4393      	bics	r3, r2
 800328e:	0019      	movs	r1, r3
 8003290:	4b70      	ldr	r3, [pc, #448]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 8003292:	683a      	ldr	r2, [r7, #0]
 8003294:	430a      	orrs	r2, r1
 8003296:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003298:	f7ff fab2 	bl	8002800 <HAL_GetTick>
 800329c:	0003      	movs	r3, r0
 800329e:	60fb      	str	r3, [r7, #12]

    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80032a0:	e009      	b.n	80032b6 <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 80032a2:	f7ff faad 	bl	8002800 <HAL_GetTick>
 80032a6:	0002      	movs	r2, r0
 80032a8:	68fb      	ldr	r3, [r7, #12]
 80032aa:	1ad3      	subs	r3, r2, r3
 80032ac:	4a6a      	ldr	r2, [pc, #424]	@ (8003458 <HAL_RCC_ClockConfig+0x1f4>)
 80032ae:	4293      	cmp	r3, r2
 80032b0:	d901      	bls.n	80032b6 <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 80032b2:	2303      	movs	r3, #3
 80032b4:	e0ca      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80032b6:	4b67      	ldr	r3, [pc, #412]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	2207      	movs	r2, #7
 80032bc:	4013      	ands	r3, r2
 80032be:	683a      	ldr	r2, [r7, #0]
 80032c0:	429a      	cmp	r2, r3
 80032c2:	d1ee      	bne.n	80032a2 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	2202      	movs	r2, #2
 80032ca:	4013      	ands	r3, r2
 80032cc:	d017      	beq.n	80032fe <HAL_RCC_ClockConfig+0x9a>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	2204      	movs	r2, #4
 80032d4:	4013      	ands	r3, r2
 80032d6:	d008      	beq.n	80032ea <HAL_RCC_ClockConfig+0x86>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 80032d8:	4b60      	ldr	r3, [pc, #384]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 80032da:	689b      	ldr	r3, [r3, #8]
 80032dc:	4a60      	ldr	r2, [pc, #384]	@ (8003460 <HAL_RCC_ClockConfig+0x1fc>)
 80032de:	401a      	ands	r2, r3
 80032e0:	4b5e      	ldr	r3, [pc, #376]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 80032e2:	21b0      	movs	r1, #176	@ 0xb0
 80032e4:	0109      	lsls	r1, r1, #4
 80032e6:	430a      	orrs	r2, r1
 80032e8:	609a      	str	r2, [r3, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80032ea:	4b5c      	ldr	r3, [pc, #368]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 80032ec:	689b      	ldr	r3, [r3, #8]
 80032ee:	4a5d      	ldr	r2, [pc, #372]	@ (8003464 <HAL_RCC_ClockConfig+0x200>)
 80032f0:	4013      	ands	r3, r2
 80032f2:	0019      	movs	r1, r3
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	68da      	ldr	r2, [r3, #12]
 80032f8:	4b58      	ldr	r3, [pc, #352]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 80032fa:	430a      	orrs	r2, r1
 80032fc:	609a      	str	r2, [r3, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	2201      	movs	r2, #1
 8003304:	4013      	ands	r3, r2
 8003306:	d055      	beq.n	80033b4 <HAL_RCC_ClockConfig+0x150>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

#if defined(RCC_CR_SYSDIV)
    MODIFY_REG(RCC->CR, RCC_CR_SYSDIV, RCC_ClkInitStruct->SYSCLKDivider);
 8003308:	4b54      	ldr	r3, [pc, #336]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	221c      	movs	r2, #28
 800330e:	4393      	bics	r3, r2
 8003310:	0019      	movs	r1, r3
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	689a      	ldr	r2, [r3, #8]
 8003316:	4b51      	ldr	r3, [pc, #324]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003318:	430a      	orrs	r2, r1
 800331a:	601a      	str	r2, [r3, #0]
#endif /* RCC_CR_SYSDIV */

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	685b      	ldr	r3, [r3, #4]
 8003320:	2b01      	cmp	r3, #1
 8003322:	d107      	bne.n	8003334 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSE ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8003324:	4b4d      	ldr	r3, [pc, #308]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003326:	681a      	ldr	r2, [r3, #0]
 8003328:	2380      	movs	r3, #128	@ 0x80
 800332a:	029b      	lsls	r3, r3, #10
 800332c:	4013      	ands	r3, r2
 800332e:	d11f      	bne.n	8003370 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 8003330:	2301      	movs	r3, #1
 8003332:	e08b      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    /* HSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	685b      	ldr	r3, [r3, #4]
 8003338:	2b00      	cmp	r3, #0
 800333a:	d107      	bne.n	800334c <HAL_RCC_ClockConfig+0xe8>
    {
      /* Check the HSI ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800333c:	4b47      	ldr	r3, [pc, #284]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 800333e:	681a      	ldr	r2, [r3, #0]
 8003340:	2380      	movs	r3, #128	@ 0x80
 8003342:	00db      	lsls	r3, r3, #3
 8003344:	4013      	ands	r3, r2
 8003346:	d113      	bne.n	8003370 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 8003348:	2301      	movs	r3, #1
 800334a:	e07f      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
        return HAL_ERROR;
      }
    }
#endif /* RCC_HSI48_SUPPORT */
    /* LSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	2b03      	cmp	r3, #3
 8003352:	d106      	bne.n	8003362 <HAL_RCC_ClockConfig+0xfe>
    {
      /* Check the LSI ready flag */
      if (READ_BIT(RCC->CSR2, RCC_CSR2_LSIRDY) == 0U)
 8003354:	4b41      	ldr	r3, [pc, #260]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003356:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003358:	2202      	movs	r2, #2
 800335a:	4013      	ands	r3, r2
 800335c:	d108      	bne.n	8003370 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 800335e:	2301      	movs	r3, #1
 8003360:	e074      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
    }
    /* LSE is selected as System Clock Source */
    else
    {
      /* Check the LSE ready flag */
      if (READ_BIT(RCC->CSR1, RCC_CSR1_LSERDY) == 0U)
 8003362:	4b3e      	ldr	r3, [pc, #248]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003364:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003366:	2202      	movs	r2, #2
 8003368:	4013      	ands	r3, r2
 800336a:	d101      	bne.n	8003370 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 800336c:	2301      	movs	r3, #1
 800336e:	e06d      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8003370:	4b3a      	ldr	r3, [pc, #232]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003372:	689b      	ldr	r3, [r3, #8]
 8003374:	2207      	movs	r2, #7
 8003376:	4393      	bics	r3, r2
 8003378:	0019      	movs	r1, r3
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	685a      	ldr	r2, [r3, #4]
 800337e:	4b37      	ldr	r3, [pc, #220]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003380:	430a      	orrs	r2, r1
 8003382:	609a      	str	r2, [r3, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003384:	f7ff fa3c 	bl	8002800 <HAL_GetTick>
 8003388:	0003      	movs	r3, r0
 800338a:	60fb      	str	r3, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800338c:	e009      	b.n	80033a2 <HAL_RCC_ClockConfig+0x13e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 800338e:	f7ff fa37 	bl	8002800 <HAL_GetTick>
 8003392:	0002      	movs	r2, r0
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	1ad3      	subs	r3, r2, r3
 8003398:	4a2f      	ldr	r2, [pc, #188]	@ (8003458 <HAL_RCC_ClockConfig+0x1f4>)
 800339a:	4293      	cmp	r3, r2
 800339c:	d901      	bls.n	80033a2 <HAL_RCC_ClockConfig+0x13e>
      {
        return HAL_TIMEOUT;
 800339e:	2303      	movs	r3, #3
 80033a0:	e054      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80033a2:	4b2e      	ldr	r3, [pc, #184]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 80033a4:	689b      	ldr	r3, [r3, #8]
 80033a6:	2238      	movs	r2, #56	@ 0x38
 80033a8:	401a      	ands	r2, r3
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	685b      	ldr	r3, [r3, #4]
 80033ae:	00db      	lsls	r3, r3, #3
 80033b0:	429a      	cmp	r2, r3
 80033b2:	d1ec      	bne.n	800338e <HAL_RCC_ClockConfig+0x12a>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80033b4:	4b27      	ldr	r3, [pc, #156]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	2207      	movs	r2, #7
 80033ba:	4013      	ands	r3, r2
 80033bc:	683a      	ldr	r2, [r7, #0]
 80033be:	429a      	cmp	r2, r3
 80033c0:	d21e      	bcs.n	8003400 <HAL_RCC_ClockConfig+0x19c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80033c2:	4b24      	ldr	r3, [pc, #144]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	2207      	movs	r2, #7
 80033c8:	4393      	bics	r3, r2
 80033ca:	0019      	movs	r1, r3
 80033cc:	4b21      	ldr	r3, [pc, #132]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 80033ce:	683a      	ldr	r2, [r7, #0]
 80033d0:	430a      	orrs	r2, r1
 80033d2:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 80033d4:	f7ff fa14 	bl	8002800 <HAL_GetTick>
 80033d8:	0003      	movs	r3, r0
 80033da:	60fb      	str	r3, [r7, #12]

    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80033dc:	e009      	b.n	80033f2 <HAL_RCC_ClockConfig+0x18e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 80033de:	f7ff fa0f 	bl	8002800 <HAL_GetTick>
 80033e2:	0002      	movs	r2, r0
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	1ad3      	subs	r3, r2, r3
 80033e8:	4a1b      	ldr	r2, [pc, #108]	@ (8003458 <HAL_RCC_ClockConfig+0x1f4>)
 80033ea:	4293      	cmp	r3, r2
 80033ec:	d901      	bls.n	80033f2 <HAL_RCC_ClockConfig+0x18e>
      {
        return HAL_TIMEOUT;
 80033ee:	2303      	movs	r3, #3
 80033f0:	e02c      	b.n	800344c <HAL_RCC_ClockConfig+0x1e8>
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80033f2:	4b18      	ldr	r3, [pc, #96]	@ (8003454 <HAL_RCC_ClockConfig+0x1f0>)
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	2207      	movs	r2, #7
 80033f8:	4013      	ands	r3, r2
 80033fa:	683a      	ldr	r2, [r7, #0]
 80033fc:	429a      	cmp	r2, r3
 80033fe:	d1ee      	bne.n	80033de <HAL_RCC_ClockConfig+0x17a>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	2204      	movs	r2, #4
 8003406:	4013      	ands	r3, r2
 8003408:	d009      	beq.n	800341e <HAL_RCC_ClockConfig+0x1ba>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 800340a:	4b14      	ldr	r3, [pc, #80]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 800340c:	689b      	ldr	r3, [r3, #8]
 800340e:	4a16      	ldr	r2, [pc, #88]	@ (8003468 <HAL_RCC_ClockConfig+0x204>)
 8003410:	4013      	ands	r3, r2
 8003412:	0019      	movs	r1, r3
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	691a      	ldr	r2, [r3, #16]
 8003418:	4b10      	ldr	r3, [pc, #64]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 800341a:	430a      	orrs	r2, r1
 800341c:	609a      	str	r2, [r3, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) \
 800341e:	f000 f82b 	bl	8003478 <HAL_RCC_GetSysClockFreq>
 8003422:	0001      	movs	r1, r0
 8003424:	4b0d      	ldr	r3, [pc, #52]	@ (800345c <HAL_RCC_ClockConfig+0x1f8>)
 8003426:	689b      	ldr	r3, [r3, #8]
                                                                  >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8003428:	0a1b      	lsrs	r3, r3, #8
 800342a:	220f      	movs	r2, #15
 800342c:	401a      	ands	r2, r3
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) \
 800342e:	4b0f      	ldr	r3, [pc, #60]	@ (800346c <HAL_RCC_ClockConfig+0x208>)
 8003430:	0092      	lsls	r2, r2, #2
 8003432:	58d3      	ldr	r3, [r2, r3]
                                                                  >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8003434:	221f      	movs	r2, #31
 8003436:	4013      	ands	r3, r2
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) \
 8003438:	000a      	movs	r2, r1
 800343a:	40da      	lsrs	r2, r3
 800343c:	4b0c      	ldr	r3, [pc, #48]	@ (8003470 <HAL_RCC_ClockConfig+0x20c>)
 800343e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  return HAL_InitTick(uwTickPrio);
 8003440:	4b0c      	ldr	r3, [pc, #48]	@ (8003474 <HAL_RCC_ClockConfig+0x210>)
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	0018      	movs	r0, r3
 8003446:	f7ff f97f 	bl	8002748 <HAL_InitTick>
 800344a:	0003      	movs	r3, r0
}
 800344c:	0018      	movs	r0, r3
 800344e:	46bd      	mov	sp, r7
 8003450:	b004      	add	sp, #16
 8003452:	bd80      	pop	{r7, pc}
 8003454:	40022000 	.word	0x40022000
 8003458:	00001388 	.word	0x00001388
 800345c:	40021000 	.word	0x40021000
 8003460:	ffff84ff 	.word	0xffff84ff
 8003464:	fffff0ff 	.word	0xfffff0ff
 8003468:	ffff8fff 	.word	0xffff8fff
 800346c:	08006010 	.word	0x08006010
 8003470:	20000010 	.word	0x20000010
 8003474:	20000014 	.word	0x20000014

08003478 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003478:	b580      	push	{r7, lr}
 800347a:	b084      	sub	sp, #16
 800347c:	af00      	add	r7, sp, #0
  uint32_t hsidiv;
  uint32_t sysclockfreq;
#if defined(RCC_CR_SYSDIV)
  uint32_t sysclockdiv = (uint32_t)(((RCC->CR & RCC_CR_SYSDIV) >> RCC_CR_SYSDIV_Pos) + 1U);
 800347e:	4b23      	ldr	r3, [pc, #140]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	089b      	lsrs	r3, r3, #2
 8003484:	2207      	movs	r2, #7
 8003486:	4013      	ands	r3, r2
 8003488:	3301      	adds	r3, #1
 800348a:	60bb      	str	r3, [r7, #8]
#endif /* RCC_CR_SYSDIV */

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 800348c:	4b1f      	ldr	r3, [pc, #124]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 800348e:	689b      	ldr	r3, [r3, #8]
 8003490:	2238      	movs	r2, #56	@ 0x38
 8003492:	4013      	ands	r3, r2
 8003494:	d10f      	bne.n	80034b6 <HAL_RCC_GetSysClockFreq+0x3e>
  {
    /* HSISYS can be derived for HSI48 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8003496:	4b1d      	ldr	r3, [pc, #116]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	0adb      	lsrs	r3, r3, #11
 800349c:	2207      	movs	r2, #7
 800349e:	4013      	ands	r3, r2
 80034a0:	2201      	movs	r2, #1
 80034a2:	409a      	lsls	r2, r3
 80034a4:	0013      	movs	r3, r2
 80034a6:	607b      	str	r3, [r7, #4]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 80034a8:	6879      	ldr	r1, [r7, #4]
 80034aa:	4819      	ldr	r0, [pc, #100]	@ (8003510 <HAL_RCC_GetSysClockFreq+0x98>)
 80034ac:	f7fc fe48 	bl	8000140 <__udivsi3>
 80034b0:	0003      	movs	r3, r0
 80034b2:	60fb      	str	r3, [r7, #12]
 80034b4:	e01e      	b.n	80034f4 <HAL_RCC_GetSysClockFreq+0x7c>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 80034b6:	4b15      	ldr	r3, [pc, #84]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 80034b8:	689b      	ldr	r3, [r3, #8]
 80034ba:	2238      	movs	r2, #56	@ 0x38
 80034bc:	4013      	ands	r3, r2
 80034be:	2b08      	cmp	r3, #8
 80034c0:	d102      	bne.n	80034c8 <HAL_RCC_GetSysClockFreq+0x50>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 80034c2:	4b14      	ldr	r3, [pc, #80]	@ (8003514 <HAL_RCC_GetSysClockFreq+0x9c>)
 80034c4:	60fb      	str	r3, [r7, #12]
 80034c6:	e015      	b.n	80034f4 <HAL_RCC_GetSysClockFreq+0x7c>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSE)
 80034c8:	4b10      	ldr	r3, [pc, #64]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 80034ca:	689b      	ldr	r3, [r3, #8]
 80034cc:	2238      	movs	r2, #56	@ 0x38
 80034ce:	4013      	ands	r3, r2
 80034d0:	2b20      	cmp	r3, #32
 80034d2:	d103      	bne.n	80034dc <HAL_RCC_GetSysClockFreq+0x64>
  {
    /* LSE used as system clock source */
    sysclockfreq = LSE_VALUE;
 80034d4:	2380      	movs	r3, #128	@ 0x80
 80034d6:	021b      	lsls	r3, r3, #8
 80034d8:	60fb      	str	r3, [r7, #12]
 80034da:	e00b      	b.n	80034f4 <HAL_RCC_GetSysClockFreq+0x7c>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSI)
 80034dc:	4b0b      	ldr	r3, [pc, #44]	@ (800350c <HAL_RCC_GetSysClockFreq+0x94>)
 80034de:	689b      	ldr	r3, [r3, #8]
 80034e0:	2238      	movs	r2, #56	@ 0x38
 80034e2:	4013      	ands	r3, r2
 80034e4:	2b18      	cmp	r3, #24
 80034e6:	d103      	bne.n	80034f0 <HAL_RCC_GetSysClockFreq+0x78>
  {
    /* LSI used as system clock source */
    sysclockfreq = LSI_VALUE;
 80034e8:	23fa      	movs	r3, #250	@ 0xfa
 80034ea:	01db      	lsls	r3, r3, #7
 80034ec:	60fb      	str	r3, [r7, #12]
 80034ee:	e001      	b.n	80034f4 <HAL_RCC_GetSysClockFreq+0x7c>
    sysclockfreq = HSI48_VALUE;
  }
#endif /* RCC_HSI48_SUPPORT */
  else
  {
    sysclockfreq = 0U;
 80034f0:	2300      	movs	r3, #0
 80034f2:	60fb      	str	r3, [r7, #12]
  }
#if defined(RCC_CR_SYSDIV)
  sysclockfreq = sysclockfreq / sysclockdiv;
 80034f4:	68b9      	ldr	r1, [r7, #8]
 80034f6:	68f8      	ldr	r0, [r7, #12]
 80034f8:	f7fc fe22 	bl	8000140 <__udivsi3>
 80034fc:	0003      	movs	r3, r0
 80034fe:	60fb      	str	r3, [r7, #12]
#endif /* RCC_CR_SYSDIV */
  return sysclockfreq;
 8003500:	68fb      	ldr	r3, [r7, #12]
}
 8003502:	0018      	movs	r0, r3
 8003504:	46bd      	mov	sp, r7
 8003506:	b004      	add	sp, #16
 8003508:	bd80      	pop	{r7, pc}
 800350a:	46c0      	nop			@ (mov r8, r8)
 800350c:	40021000 	.word	0x40021000
 8003510:	02dc6c00 	.word	0x02dc6c00
 8003514:	007a1200 	.word	0x007a1200

08003518 <__cvt>:
 8003518:	b5f0      	push	{r4, r5, r6, r7, lr}
 800351a:	001f      	movs	r7, r3
 800351c:	2300      	movs	r3, #0
 800351e:	0016      	movs	r6, r2
 8003520:	b08b      	sub	sp, #44	@ 0x2c
 8003522:	429f      	cmp	r7, r3
 8003524:	da04      	bge.n	8003530 <__cvt+0x18>
 8003526:	2180      	movs	r1, #128	@ 0x80
 8003528:	0609      	lsls	r1, r1, #24
 800352a:	187b      	adds	r3, r7, r1
 800352c:	001f      	movs	r7, r3
 800352e:	232d      	movs	r3, #45	@ 0x2d
 8003530:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003532:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8003534:	7013      	strb	r3, [r2, #0]
 8003536:	2320      	movs	r3, #32
 8003538:	2203      	movs	r2, #3
 800353a:	439d      	bics	r5, r3
 800353c:	2d46      	cmp	r5, #70	@ 0x46
 800353e:	d007      	beq.n	8003550 <__cvt+0x38>
 8003540:	002b      	movs	r3, r5
 8003542:	3b45      	subs	r3, #69	@ 0x45
 8003544:	4259      	negs	r1, r3
 8003546:	414b      	adcs	r3, r1
 8003548:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800354a:	3a01      	subs	r2, #1
 800354c:	18cb      	adds	r3, r1, r3
 800354e:	9310      	str	r3, [sp, #64]	@ 0x40
 8003550:	ab09      	add	r3, sp, #36	@ 0x24
 8003552:	9304      	str	r3, [sp, #16]
 8003554:	ab08      	add	r3, sp, #32
 8003556:	9303      	str	r3, [sp, #12]
 8003558:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800355a:	9200      	str	r2, [sp, #0]
 800355c:	9302      	str	r3, [sp, #8]
 800355e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003560:	0032      	movs	r2, r6
 8003562:	9301      	str	r3, [sp, #4]
 8003564:	003b      	movs	r3, r7
 8003566:	f000 fe69 	bl	800423c <_dtoa_r>
 800356a:	0004      	movs	r4, r0
 800356c:	2d47      	cmp	r5, #71	@ 0x47
 800356e:	d11b      	bne.n	80035a8 <__cvt+0x90>
 8003570:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003572:	07db      	lsls	r3, r3, #31
 8003574:	d511      	bpl.n	800359a <__cvt+0x82>
 8003576:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003578:	18c3      	adds	r3, r0, r3
 800357a:	9307      	str	r3, [sp, #28]
 800357c:	2200      	movs	r2, #0
 800357e:	2300      	movs	r3, #0
 8003580:	0030      	movs	r0, r6
 8003582:	0039      	movs	r1, r7
 8003584:	f7fc ff62 	bl	800044c <__aeabi_dcmpeq>
 8003588:	2800      	cmp	r0, #0
 800358a:	d001      	beq.n	8003590 <__cvt+0x78>
 800358c:	9b07      	ldr	r3, [sp, #28]
 800358e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003590:	2230      	movs	r2, #48	@ 0x30
 8003592:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003594:	9907      	ldr	r1, [sp, #28]
 8003596:	428b      	cmp	r3, r1
 8003598:	d320      	bcc.n	80035dc <__cvt+0xc4>
 800359a:	0020      	movs	r0, r4
 800359c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800359e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80035a0:	1b1b      	subs	r3, r3, r4
 80035a2:	6013      	str	r3, [r2, #0]
 80035a4:	b00b      	add	sp, #44	@ 0x2c
 80035a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80035aa:	18c3      	adds	r3, r0, r3
 80035ac:	9307      	str	r3, [sp, #28]
 80035ae:	2d46      	cmp	r5, #70	@ 0x46
 80035b0:	d1e4      	bne.n	800357c <__cvt+0x64>
 80035b2:	7803      	ldrb	r3, [r0, #0]
 80035b4:	2b30      	cmp	r3, #48	@ 0x30
 80035b6:	d10c      	bne.n	80035d2 <__cvt+0xba>
 80035b8:	2200      	movs	r2, #0
 80035ba:	2300      	movs	r3, #0
 80035bc:	0030      	movs	r0, r6
 80035be:	0039      	movs	r1, r7
 80035c0:	f7fc ff44 	bl	800044c <__aeabi_dcmpeq>
 80035c4:	2800      	cmp	r0, #0
 80035c6:	d104      	bne.n	80035d2 <__cvt+0xba>
 80035c8:	2301      	movs	r3, #1
 80035ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80035cc:	1a9b      	subs	r3, r3, r2
 80035ce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80035d0:	6013      	str	r3, [r2, #0]
 80035d2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80035d4:	9a07      	ldr	r2, [sp, #28]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	18d3      	adds	r3, r2, r3
 80035da:	e7ce      	b.n	800357a <__cvt+0x62>
 80035dc:	1c59      	adds	r1, r3, #1
 80035de:	9109      	str	r1, [sp, #36]	@ 0x24
 80035e0:	701a      	strb	r2, [r3, #0]
 80035e2:	e7d6      	b.n	8003592 <__cvt+0x7a>

080035e4 <__exponent>:
 80035e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80035e6:	232b      	movs	r3, #43	@ 0x2b
 80035e8:	0005      	movs	r5, r0
 80035ea:	000c      	movs	r4, r1
 80035ec:	b085      	sub	sp, #20
 80035ee:	7002      	strb	r2, [r0, #0]
 80035f0:	2900      	cmp	r1, #0
 80035f2:	da01      	bge.n	80035f8 <__exponent+0x14>
 80035f4:	424c      	negs	r4, r1
 80035f6:	3302      	adds	r3, #2
 80035f8:	706b      	strb	r3, [r5, #1]
 80035fa:	2c09      	cmp	r4, #9
 80035fc:	dd2c      	ble.n	8003658 <__exponent+0x74>
 80035fe:	ab02      	add	r3, sp, #8
 8003600:	1dde      	adds	r6, r3, #7
 8003602:	0020      	movs	r0, r4
 8003604:	210a      	movs	r1, #10
 8003606:	f7fc ff0b 	bl	8000420 <__aeabi_idivmod>
 800360a:	0037      	movs	r7, r6
 800360c:	3130      	adds	r1, #48	@ 0x30
 800360e:	3e01      	subs	r6, #1
 8003610:	0020      	movs	r0, r4
 8003612:	7031      	strb	r1, [r6, #0]
 8003614:	210a      	movs	r1, #10
 8003616:	9401      	str	r4, [sp, #4]
 8003618:	f7fc fe1c 	bl	8000254 <__divsi3>
 800361c:	9b01      	ldr	r3, [sp, #4]
 800361e:	0004      	movs	r4, r0
 8003620:	2b63      	cmp	r3, #99	@ 0x63
 8003622:	dcee      	bgt.n	8003602 <__exponent+0x1e>
 8003624:	1eba      	subs	r2, r7, #2
 8003626:	1ca8      	adds	r0, r5, #2
 8003628:	0001      	movs	r1, r0
 800362a:	0013      	movs	r3, r2
 800362c:	3430      	adds	r4, #48	@ 0x30
 800362e:	7014      	strb	r4, [r2, #0]
 8003630:	ac02      	add	r4, sp, #8
 8003632:	3407      	adds	r4, #7
 8003634:	429c      	cmp	r4, r3
 8003636:	d80a      	bhi.n	800364e <__exponent+0x6a>
 8003638:	2300      	movs	r3, #0
 800363a:	42a2      	cmp	r2, r4
 800363c:	d803      	bhi.n	8003646 <__exponent+0x62>
 800363e:	3309      	adds	r3, #9
 8003640:	aa02      	add	r2, sp, #8
 8003642:	189b      	adds	r3, r3, r2
 8003644:	1bdb      	subs	r3, r3, r7
 8003646:	18c0      	adds	r0, r0, r3
 8003648:	1b40      	subs	r0, r0, r5
 800364a:	b005      	add	sp, #20
 800364c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800364e:	781c      	ldrb	r4, [r3, #0]
 8003650:	3301      	adds	r3, #1
 8003652:	700c      	strb	r4, [r1, #0]
 8003654:	3101      	adds	r1, #1
 8003656:	e7eb      	b.n	8003630 <__exponent+0x4c>
 8003658:	2330      	movs	r3, #48	@ 0x30
 800365a:	18e4      	adds	r4, r4, r3
 800365c:	70ab      	strb	r3, [r5, #2]
 800365e:	1d28      	adds	r0, r5, #4
 8003660:	70ec      	strb	r4, [r5, #3]
 8003662:	e7f1      	b.n	8003648 <__exponent+0x64>

08003664 <_printf_float>:
 8003664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003666:	b097      	sub	sp, #92	@ 0x5c
 8003668:	000d      	movs	r5, r1
 800366a:	920a      	str	r2, [sp, #40]	@ 0x28
 800366c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800366e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003670:	9009      	str	r0, [sp, #36]	@ 0x24
 8003672:	f000 fccb 	bl	800400c <_localeconv_r>
 8003676:	6803      	ldr	r3, [r0, #0]
 8003678:	0018      	movs	r0, r3
 800367a:	930d      	str	r3, [sp, #52]	@ 0x34
 800367c:	f7fc fd44 	bl	8000108 <strlen>
 8003680:	2300      	movs	r3, #0
 8003682:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003684:	9314      	str	r3, [sp, #80]	@ 0x50
 8003686:	7e2b      	ldrb	r3, [r5, #24]
 8003688:	2207      	movs	r2, #7
 800368a:	930c      	str	r3, [sp, #48]	@ 0x30
 800368c:	682b      	ldr	r3, [r5, #0]
 800368e:	930e      	str	r3, [sp, #56]	@ 0x38
 8003690:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003692:	6823      	ldr	r3, [r4, #0]
 8003694:	05c9      	lsls	r1, r1, #23
 8003696:	d545      	bpl.n	8003724 <_printf_float+0xc0>
 8003698:	189b      	adds	r3, r3, r2
 800369a:	4393      	bics	r3, r2
 800369c:	001a      	movs	r2, r3
 800369e:	3208      	adds	r2, #8
 80036a0:	6022      	str	r2, [r4, #0]
 80036a2:	2201      	movs	r2, #1
 80036a4:	681e      	ldr	r6, [r3, #0]
 80036a6:	685f      	ldr	r7, [r3, #4]
 80036a8:	007b      	lsls	r3, r7, #1
 80036aa:	085b      	lsrs	r3, r3, #1
 80036ac:	9311      	str	r3, [sp, #68]	@ 0x44
 80036ae:	9610      	str	r6, [sp, #64]	@ 0x40
 80036b0:	64ae      	str	r6, [r5, #72]	@ 0x48
 80036b2:	64ef      	str	r7, [r5, #76]	@ 0x4c
 80036b4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80036b6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80036b8:	4ba7      	ldr	r3, [pc, #668]	@ (8003958 <_printf_float+0x2f4>)
 80036ba:	4252      	negs	r2, r2
 80036bc:	f7fe fd00 	bl	80020c0 <__aeabi_dcmpun>
 80036c0:	2800      	cmp	r0, #0
 80036c2:	d131      	bne.n	8003728 <_printf_float+0xc4>
 80036c4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80036c6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80036c8:	2201      	movs	r2, #1
 80036ca:	4ba3      	ldr	r3, [pc, #652]	@ (8003958 <_printf_float+0x2f4>)
 80036cc:	4252      	negs	r2, r2
 80036ce:	f7fc fecd 	bl	800046c <__aeabi_dcmple>
 80036d2:	2800      	cmp	r0, #0
 80036d4:	d128      	bne.n	8003728 <_printf_float+0xc4>
 80036d6:	2200      	movs	r2, #0
 80036d8:	2300      	movs	r3, #0
 80036da:	0030      	movs	r0, r6
 80036dc:	0039      	movs	r1, r7
 80036de:	f7fc febb 	bl	8000458 <__aeabi_dcmplt>
 80036e2:	2800      	cmp	r0, #0
 80036e4:	d003      	beq.n	80036ee <_printf_float+0x8a>
 80036e6:	002b      	movs	r3, r5
 80036e8:	222d      	movs	r2, #45	@ 0x2d
 80036ea:	3343      	adds	r3, #67	@ 0x43
 80036ec:	701a      	strb	r2, [r3, #0]
 80036ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80036f0:	4f9a      	ldr	r7, [pc, #616]	@ (800395c <_printf_float+0x2f8>)
 80036f2:	2b47      	cmp	r3, #71	@ 0x47
 80036f4:	d900      	bls.n	80036f8 <_printf_float+0x94>
 80036f6:	4f9a      	ldr	r7, [pc, #616]	@ (8003960 <_printf_float+0x2fc>)
 80036f8:	2303      	movs	r3, #3
 80036fa:	2400      	movs	r4, #0
 80036fc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80036fe:	612b      	str	r3, [r5, #16]
 8003700:	3301      	adds	r3, #1
 8003702:	439a      	bics	r2, r3
 8003704:	602a      	str	r2, [r5, #0]
 8003706:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003708:	0029      	movs	r1, r5
 800370a:	9300      	str	r3, [sp, #0]
 800370c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800370e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003710:	aa15      	add	r2, sp, #84	@ 0x54
 8003712:	f000 f9e5 	bl	8003ae0 <_printf_common>
 8003716:	3001      	adds	r0, #1
 8003718:	d000      	beq.n	800371c <_printf_float+0xb8>
 800371a:	e09f      	b.n	800385c <_printf_float+0x1f8>
 800371c:	2001      	movs	r0, #1
 800371e:	4240      	negs	r0, r0
 8003720:	b017      	add	sp, #92	@ 0x5c
 8003722:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003724:	3307      	adds	r3, #7
 8003726:	e7b8      	b.n	800369a <_printf_float+0x36>
 8003728:	0032      	movs	r2, r6
 800372a:	003b      	movs	r3, r7
 800372c:	0030      	movs	r0, r6
 800372e:	0039      	movs	r1, r7
 8003730:	f7fe fcc6 	bl	80020c0 <__aeabi_dcmpun>
 8003734:	2800      	cmp	r0, #0
 8003736:	d00b      	beq.n	8003750 <_printf_float+0xec>
 8003738:	2f00      	cmp	r7, #0
 800373a:	da03      	bge.n	8003744 <_printf_float+0xe0>
 800373c:	002b      	movs	r3, r5
 800373e:	222d      	movs	r2, #45	@ 0x2d
 8003740:	3343      	adds	r3, #67	@ 0x43
 8003742:	701a      	strb	r2, [r3, #0]
 8003744:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003746:	4f87      	ldr	r7, [pc, #540]	@ (8003964 <_printf_float+0x300>)
 8003748:	2b47      	cmp	r3, #71	@ 0x47
 800374a:	d9d5      	bls.n	80036f8 <_printf_float+0x94>
 800374c:	4f86      	ldr	r7, [pc, #536]	@ (8003968 <_printf_float+0x304>)
 800374e:	e7d3      	b.n	80036f8 <_printf_float+0x94>
 8003750:	2220      	movs	r2, #32
 8003752:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8003754:	686b      	ldr	r3, [r5, #4]
 8003756:	4394      	bics	r4, r2
 8003758:	1c5a      	adds	r2, r3, #1
 800375a:	d146      	bne.n	80037ea <_printf_float+0x186>
 800375c:	3307      	adds	r3, #7
 800375e:	606b      	str	r3, [r5, #4]
 8003760:	2380      	movs	r3, #128	@ 0x80
 8003762:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003764:	00db      	lsls	r3, r3, #3
 8003766:	4313      	orrs	r3, r2
 8003768:	2200      	movs	r2, #0
 800376a:	602b      	str	r3, [r5, #0]
 800376c:	9206      	str	r2, [sp, #24]
 800376e:	aa14      	add	r2, sp, #80	@ 0x50
 8003770:	9205      	str	r2, [sp, #20]
 8003772:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003774:	a90a      	add	r1, sp, #40	@ 0x28
 8003776:	9204      	str	r2, [sp, #16]
 8003778:	aa13      	add	r2, sp, #76	@ 0x4c
 800377a:	9203      	str	r2, [sp, #12]
 800377c:	2223      	movs	r2, #35	@ 0x23
 800377e:	1852      	adds	r2, r2, r1
 8003780:	9202      	str	r2, [sp, #8]
 8003782:	9301      	str	r3, [sp, #4]
 8003784:	686b      	ldr	r3, [r5, #4]
 8003786:	0032      	movs	r2, r6
 8003788:	9300      	str	r3, [sp, #0]
 800378a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800378c:	003b      	movs	r3, r7
 800378e:	f7ff fec3 	bl	8003518 <__cvt>
 8003792:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8003794:	0007      	movs	r7, r0
 8003796:	2c47      	cmp	r4, #71	@ 0x47
 8003798:	d12d      	bne.n	80037f6 <_printf_float+0x192>
 800379a:	1cd3      	adds	r3, r2, #3
 800379c:	db02      	blt.n	80037a4 <_printf_float+0x140>
 800379e:	686b      	ldr	r3, [r5, #4]
 80037a0:	429a      	cmp	r2, r3
 80037a2:	dd48      	ble.n	8003836 <_printf_float+0x1d2>
 80037a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80037a6:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80037a8:	3b02      	subs	r3, #2
 80037aa:	b2db      	uxtb	r3, r3
 80037ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80037ae:	0028      	movs	r0, r5
 80037b0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80037b2:	3901      	subs	r1, #1
 80037b4:	3050      	adds	r0, #80	@ 0x50
 80037b6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80037b8:	f7ff ff14 	bl	80035e4 <__exponent>
 80037bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80037be:	0004      	movs	r4, r0
 80037c0:	1813      	adds	r3, r2, r0
 80037c2:	612b      	str	r3, [r5, #16]
 80037c4:	2a01      	cmp	r2, #1
 80037c6:	dc02      	bgt.n	80037ce <_printf_float+0x16a>
 80037c8:	682a      	ldr	r2, [r5, #0]
 80037ca:	07d2      	lsls	r2, r2, #31
 80037cc:	d501      	bpl.n	80037d2 <_printf_float+0x16e>
 80037ce:	3301      	adds	r3, #1
 80037d0:	612b      	str	r3, [r5, #16]
 80037d2:	2323      	movs	r3, #35	@ 0x23
 80037d4:	aa0a      	add	r2, sp, #40	@ 0x28
 80037d6:	189b      	adds	r3, r3, r2
 80037d8:	781b      	ldrb	r3, [r3, #0]
 80037da:	2b00      	cmp	r3, #0
 80037dc:	d100      	bne.n	80037e0 <_printf_float+0x17c>
 80037de:	e792      	b.n	8003706 <_printf_float+0xa2>
 80037e0:	002b      	movs	r3, r5
 80037e2:	222d      	movs	r2, #45	@ 0x2d
 80037e4:	3343      	adds	r3, #67	@ 0x43
 80037e6:	701a      	strb	r2, [r3, #0]
 80037e8:	e78d      	b.n	8003706 <_printf_float+0xa2>
 80037ea:	2c47      	cmp	r4, #71	@ 0x47
 80037ec:	d1b8      	bne.n	8003760 <_printf_float+0xfc>
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d1b6      	bne.n	8003760 <_printf_float+0xfc>
 80037f2:	3301      	adds	r3, #1
 80037f4:	e7b3      	b.n	800375e <_printf_float+0xfa>
 80037f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80037f8:	0011      	movs	r1, r2
 80037fa:	2b65      	cmp	r3, #101	@ 0x65
 80037fc:	d9d7      	bls.n	80037ae <_printf_float+0x14a>
 80037fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003800:	2b66      	cmp	r3, #102	@ 0x66
 8003802:	d11a      	bne.n	800383a <_printf_float+0x1d6>
 8003804:	686b      	ldr	r3, [r5, #4]
 8003806:	2a00      	cmp	r2, #0
 8003808:	dd09      	ble.n	800381e <_printf_float+0x1ba>
 800380a:	612a      	str	r2, [r5, #16]
 800380c:	2b00      	cmp	r3, #0
 800380e:	d102      	bne.n	8003816 <_printf_float+0x1b2>
 8003810:	6829      	ldr	r1, [r5, #0]
 8003812:	07c9      	lsls	r1, r1, #31
 8003814:	d50b      	bpl.n	800382e <_printf_float+0x1ca>
 8003816:	3301      	adds	r3, #1
 8003818:	189b      	adds	r3, r3, r2
 800381a:	612b      	str	r3, [r5, #16]
 800381c:	e007      	b.n	800382e <_printf_float+0x1ca>
 800381e:	2b00      	cmp	r3, #0
 8003820:	d103      	bne.n	800382a <_printf_float+0x1c6>
 8003822:	2201      	movs	r2, #1
 8003824:	6829      	ldr	r1, [r5, #0]
 8003826:	4211      	tst	r1, r2
 8003828:	d000      	beq.n	800382c <_printf_float+0x1c8>
 800382a:	1c9a      	adds	r2, r3, #2
 800382c:	612a      	str	r2, [r5, #16]
 800382e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003830:	2400      	movs	r4, #0
 8003832:	65ab      	str	r3, [r5, #88]	@ 0x58
 8003834:	e7cd      	b.n	80037d2 <_printf_float+0x16e>
 8003836:	2367      	movs	r3, #103	@ 0x67
 8003838:	930c      	str	r3, [sp, #48]	@ 0x30
 800383a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800383c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800383e:	4299      	cmp	r1, r3
 8003840:	db06      	blt.n	8003850 <_printf_float+0x1ec>
 8003842:	682b      	ldr	r3, [r5, #0]
 8003844:	6129      	str	r1, [r5, #16]
 8003846:	07db      	lsls	r3, r3, #31
 8003848:	d5f1      	bpl.n	800382e <_printf_float+0x1ca>
 800384a:	3101      	adds	r1, #1
 800384c:	6129      	str	r1, [r5, #16]
 800384e:	e7ee      	b.n	800382e <_printf_float+0x1ca>
 8003850:	2201      	movs	r2, #1
 8003852:	2900      	cmp	r1, #0
 8003854:	dce0      	bgt.n	8003818 <_printf_float+0x1b4>
 8003856:	1892      	adds	r2, r2, r2
 8003858:	1a52      	subs	r2, r2, r1
 800385a:	e7dd      	b.n	8003818 <_printf_float+0x1b4>
 800385c:	682a      	ldr	r2, [r5, #0]
 800385e:	0553      	lsls	r3, r2, #21
 8003860:	d408      	bmi.n	8003874 <_printf_float+0x210>
 8003862:	692b      	ldr	r3, [r5, #16]
 8003864:	003a      	movs	r2, r7
 8003866:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003868:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800386a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800386c:	47a0      	blx	r4
 800386e:	3001      	adds	r0, #1
 8003870:	d129      	bne.n	80038c6 <_printf_float+0x262>
 8003872:	e753      	b.n	800371c <_printf_float+0xb8>
 8003874:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003876:	2b65      	cmp	r3, #101	@ 0x65
 8003878:	d800      	bhi.n	800387c <_printf_float+0x218>
 800387a:	e0da      	b.n	8003a32 <_printf_float+0x3ce>
 800387c:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 800387e:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8003880:	2200      	movs	r2, #0
 8003882:	2300      	movs	r3, #0
 8003884:	f7fc fde2 	bl	800044c <__aeabi_dcmpeq>
 8003888:	2800      	cmp	r0, #0
 800388a:	d033      	beq.n	80038f4 <_printf_float+0x290>
 800388c:	2301      	movs	r3, #1
 800388e:	4a37      	ldr	r2, [pc, #220]	@ (800396c <_printf_float+0x308>)
 8003890:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003892:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003894:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003896:	47a0      	blx	r4
 8003898:	3001      	adds	r0, #1
 800389a:	d100      	bne.n	800389e <_printf_float+0x23a>
 800389c:	e73e      	b.n	800371c <_printf_float+0xb8>
 800389e:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80038a0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80038a2:	42b3      	cmp	r3, r6
 80038a4:	db02      	blt.n	80038ac <_printf_float+0x248>
 80038a6:	682b      	ldr	r3, [r5, #0]
 80038a8:	07db      	lsls	r3, r3, #31
 80038aa:	d50c      	bpl.n	80038c6 <_printf_float+0x262>
 80038ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80038ae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80038b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80038b2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80038b4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80038b6:	47a0      	blx	r4
 80038b8:	2400      	movs	r4, #0
 80038ba:	3001      	adds	r0, #1
 80038bc:	d100      	bne.n	80038c0 <_printf_float+0x25c>
 80038be:	e72d      	b.n	800371c <_printf_float+0xb8>
 80038c0:	1e73      	subs	r3, r6, #1
 80038c2:	42a3      	cmp	r3, r4
 80038c4:	dc0a      	bgt.n	80038dc <_printf_float+0x278>
 80038c6:	682b      	ldr	r3, [r5, #0]
 80038c8:	079b      	lsls	r3, r3, #30
 80038ca:	d500      	bpl.n	80038ce <_printf_float+0x26a>
 80038cc:	e105      	b.n	8003ada <_printf_float+0x476>
 80038ce:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80038d0:	68e8      	ldr	r0, [r5, #12]
 80038d2:	4298      	cmp	r0, r3
 80038d4:	db00      	blt.n	80038d8 <_printf_float+0x274>
 80038d6:	e723      	b.n	8003720 <_printf_float+0xbc>
 80038d8:	0018      	movs	r0, r3
 80038da:	e721      	b.n	8003720 <_printf_float+0xbc>
 80038dc:	002a      	movs	r2, r5
 80038de:	2301      	movs	r3, #1
 80038e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80038e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80038e4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80038e6:	321a      	adds	r2, #26
 80038e8:	47b8      	blx	r7
 80038ea:	3001      	adds	r0, #1
 80038ec:	d100      	bne.n	80038f0 <_printf_float+0x28c>
 80038ee:	e715      	b.n	800371c <_printf_float+0xb8>
 80038f0:	3401      	adds	r4, #1
 80038f2:	e7e5      	b.n	80038c0 <_printf_float+0x25c>
 80038f4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	dc3a      	bgt.n	8003970 <_printf_float+0x30c>
 80038fa:	2301      	movs	r3, #1
 80038fc:	4a1b      	ldr	r2, [pc, #108]	@ (800396c <_printf_float+0x308>)
 80038fe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003900:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003902:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003904:	47a0      	blx	r4
 8003906:	3001      	adds	r0, #1
 8003908:	d100      	bne.n	800390c <_printf_float+0x2a8>
 800390a:	e707      	b.n	800371c <_printf_float+0xb8>
 800390c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800390e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003910:	4333      	orrs	r3, r6
 8003912:	d102      	bne.n	800391a <_printf_float+0x2b6>
 8003914:	682b      	ldr	r3, [r5, #0]
 8003916:	07db      	lsls	r3, r3, #31
 8003918:	d5d5      	bpl.n	80038c6 <_printf_float+0x262>
 800391a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800391c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800391e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003920:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003922:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003924:	47a0      	blx	r4
 8003926:	2300      	movs	r3, #0
 8003928:	3001      	adds	r0, #1
 800392a:	d100      	bne.n	800392e <_printf_float+0x2ca>
 800392c:	e6f6      	b.n	800371c <_printf_float+0xb8>
 800392e:	930c      	str	r3, [sp, #48]	@ 0x30
 8003930:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003932:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003934:	425b      	negs	r3, r3
 8003936:	4293      	cmp	r3, r2
 8003938:	dc01      	bgt.n	800393e <_printf_float+0x2da>
 800393a:	0033      	movs	r3, r6
 800393c:	e792      	b.n	8003864 <_printf_float+0x200>
 800393e:	002a      	movs	r2, r5
 8003940:	2301      	movs	r3, #1
 8003942:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003944:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003946:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003948:	321a      	adds	r2, #26
 800394a:	47a0      	blx	r4
 800394c:	3001      	adds	r0, #1
 800394e:	d100      	bne.n	8003952 <_printf_float+0x2ee>
 8003950:	e6e4      	b.n	800371c <_printf_float+0xb8>
 8003952:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003954:	3301      	adds	r3, #1
 8003956:	e7ea      	b.n	800392e <_printf_float+0x2ca>
 8003958:	7fefffff 	.word	0x7fefffff
 800395c:	08006050 	.word	0x08006050
 8003960:	08006054 	.word	0x08006054
 8003964:	08006058 	.word	0x08006058
 8003968:	0800605c 	.word	0x0800605c
 800396c:	08006060 	.word	0x08006060
 8003970:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003972:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8003974:	930c      	str	r3, [sp, #48]	@ 0x30
 8003976:	429e      	cmp	r6, r3
 8003978:	dd00      	ble.n	800397c <_printf_float+0x318>
 800397a:	001e      	movs	r6, r3
 800397c:	2e00      	cmp	r6, #0
 800397e:	dc31      	bgt.n	80039e4 <_printf_float+0x380>
 8003980:	43f3      	mvns	r3, r6
 8003982:	2400      	movs	r4, #0
 8003984:	17db      	asrs	r3, r3, #31
 8003986:	4033      	ands	r3, r6
 8003988:	930e      	str	r3, [sp, #56]	@ 0x38
 800398a:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 800398c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800398e:	1af3      	subs	r3, r6, r3
 8003990:	42a3      	cmp	r3, r4
 8003992:	dc30      	bgt.n	80039f6 <_printf_float+0x392>
 8003994:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003996:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003998:	429a      	cmp	r2, r3
 800399a:	dc38      	bgt.n	8003a0e <_printf_float+0x3aa>
 800399c:	682b      	ldr	r3, [r5, #0]
 800399e:	07db      	lsls	r3, r3, #31
 80039a0:	d435      	bmi.n	8003a0e <_printf_float+0x3aa>
 80039a2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80039a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80039a6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80039a8:	1b9b      	subs	r3, r3, r6
 80039aa:	1b14      	subs	r4, r2, r4
 80039ac:	429c      	cmp	r4, r3
 80039ae:	dd00      	ble.n	80039b2 <_printf_float+0x34e>
 80039b0:	001c      	movs	r4, r3
 80039b2:	2c00      	cmp	r4, #0
 80039b4:	dc34      	bgt.n	8003a20 <_printf_float+0x3bc>
 80039b6:	43e3      	mvns	r3, r4
 80039b8:	2600      	movs	r6, #0
 80039ba:	17db      	asrs	r3, r3, #31
 80039bc:	401c      	ands	r4, r3
 80039be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80039c0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80039c2:	1ad3      	subs	r3, r2, r3
 80039c4:	1b1b      	subs	r3, r3, r4
 80039c6:	42b3      	cmp	r3, r6
 80039c8:	dc00      	bgt.n	80039cc <_printf_float+0x368>
 80039ca:	e77c      	b.n	80038c6 <_printf_float+0x262>
 80039cc:	002a      	movs	r2, r5
 80039ce:	2301      	movs	r3, #1
 80039d0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80039d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80039d4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80039d6:	321a      	adds	r2, #26
 80039d8:	47b8      	blx	r7
 80039da:	3001      	adds	r0, #1
 80039dc:	d100      	bne.n	80039e0 <_printf_float+0x37c>
 80039de:	e69d      	b.n	800371c <_printf_float+0xb8>
 80039e0:	3601      	adds	r6, #1
 80039e2:	e7ec      	b.n	80039be <_printf_float+0x35a>
 80039e4:	0033      	movs	r3, r6
 80039e6:	003a      	movs	r2, r7
 80039e8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80039ea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80039ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80039ee:	47a0      	blx	r4
 80039f0:	3001      	adds	r0, #1
 80039f2:	d1c5      	bne.n	8003980 <_printf_float+0x31c>
 80039f4:	e692      	b.n	800371c <_printf_float+0xb8>
 80039f6:	002a      	movs	r2, r5
 80039f8:	2301      	movs	r3, #1
 80039fa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80039fc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80039fe:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003a00:	321a      	adds	r2, #26
 8003a02:	47b0      	blx	r6
 8003a04:	3001      	adds	r0, #1
 8003a06:	d100      	bne.n	8003a0a <_printf_float+0x3a6>
 8003a08:	e688      	b.n	800371c <_printf_float+0xb8>
 8003a0a:	3401      	adds	r4, #1
 8003a0c:	e7bd      	b.n	800398a <_printf_float+0x326>
 8003a0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003a10:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003a12:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a14:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a16:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003a18:	47a0      	blx	r4
 8003a1a:	3001      	adds	r0, #1
 8003a1c:	d1c1      	bne.n	80039a2 <_printf_float+0x33e>
 8003a1e:	e67d      	b.n	800371c <_printf_float+0xb8>
 8003a20:	19ba      	adds	r2, r7, r6
 8003a22:	0023      	movs	r3, r4
 8003a24:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a28:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003a2a:	47b0      	blx	r6
 8003a2c:	3001      	adds	r0, #1
 8003a2e:	d1c2      	bne.n	80039b6 <_printf_float+0x352>
 8003a30:	e674      	b.n	800371c <_printf_float+0xb8>
 8003a32:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003a34:	930c      	str	r3, [sp, #48]	@ 0x30
 8003a36:	2b01      	cmp	r3, #1
 8003a38:	dc02      	bgt.n	8003a40 <_printf_float+0x3dc>
 8003a3a:	2301      	movs	r3, #1
 8003a3c:	421a      	tst	r2, r3
 8003a3e:	d039      	beq.n	8003ab4 <_printf_float+0x450>
 8003a40:	2301      	movs	r3, #1
 8003a42:	003a      	movs	r2, r7
 8003a44:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a46:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a48:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003a4a:	47b0      	blx	r6
 8003a4c:	3001      	adds	r0, #1
 8003a4e:	d100      	bne.n	8003a52 <_printf_float+0x3ee>
 8003a50:	e664      	b.n	800371c <_printf_float+0xb8>
 8003a52:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003a54:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003a56:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a58:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a5a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003a5c:	47b0      	blx	r6
 8003a5e:	3001      	adds	r0, #1
 8003a60:	d100      	bne.n	8003a64 <_printf_float+0x400>
 8003a62:	e65b      	b.n	800371c <_printf_float+0xb8>
 8003a64:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8003a66:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8003a68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	3b01      	subs	r3, #1
 8003a6e:	930c      	str	r3, [sp, #48]	@ 0x30
 8003a70:	2300      	movs	r3, #0
 8003a72:	f7fc fceb 	bl	800044c <__aeabi_dcmpeq>
 8003a76:	2800      	cmp	r0, #0
 8003a78:	d11a      	bne.n	8003ab0 <_printf_float+0x44c>
 8003a7a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003a7c:	1c7a      	adds	r2, r7, #1
 8003a7e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a80:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a82:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003a84:	47b0      	blx	r6
 8003a86:	3001      	adds	r0, #1
 8003a88:	d10e      	bne.n	8003aa8 <_printf_float+0x444>
 8003a8a:	e647      	b.n	800371c <_printf_float+0xb8>
 8003a8c:	002a      	movs	r2, r5
 8003a8e:	2301      	movs	r3, #1
 8003a90:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a94:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8003a96:	321a      	adds	r2, #26
 8003a98:	47b8      	blx	r7
 8003a9a:	3001      	adds	r0, #1
 8003a9c:	d100      	bne.n	8003aa0 <_printf_float+0x43c>
 8003a9e:	e63d      	b.n	800371c <_printf_float+0xb8>
 8003aa0:	3601      	adds	r6, #1
 8003aa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003aa4:	429e      	cmp	r6, r3
 8003aa6:	dbf1      	blt.n	8003a8c <_printf_float+0x428>
 8003aa8:	002a      	movs	r2, r5
 8003aaa:	0023      	movs	r3, r4
 8003aac:	3250      	adds	r2, #80	@ 0x50
 8003aae:	e6da      	b.n	8003866 <_printf_float+0x202>
 8003ab0:	2600      	movs	r6, #0
 8003ab2:	e7f6      	b.n	8003aa2 <_printf_float+0x43e>
 8003ab4:	003a      	movs	r2, r7
 8003ab6:	e7e2      	b.n	8003a7e <_printf_float+0x41a>
 8003ab8:	002a      	movs	r2, r5
 8003aba:	2301      	movs	r3, #1
 8003abc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003abe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003ac0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8003ac2:	3219      	adds	r2, #25
 8003ac4:	47b0      	blx	r6
 8003ac6:	3001      	adds	r0, #1
 8003ac8:	d100      	bne.n	8003acc <_printf_float+0x468>
 8003aca:	e627      	b.n	800371c <_printf_float+0xb8>
 8003acc:	3401      	adds	r4, #1
 8003ace:	68eb      	ldr	r3, [r5, #12]
 8003ad0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8003ad2:	1a9b      	subs	r3, r3, r2
 8003ad4:	42a3      	cmp	r3, r4
 8003ad6:	dcef      	bgt.n	8003ab8 <_printf_float+0x454>
 8003ad8:	e6f9      	b.n	80038ce <_printf_float+0x26a>
 8003ada:	2400      	movs	r4, #0
 8003adc:	e7f7      	b.n	8003ace <_printf_float+0x46a>
 8003ade:	46c0      	nop			@ (mov r8, r8)

08003ae0 <_printf_common>:
 8003ae0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003ae2:	0016      	movs	r6, r2
 8003ae4:	9301      	str	r3, [sp, #4]
 8003ae6:	688a      	ldr	r2, [r1, #8]
 8003ae8:	690b      	ldr	r3, [r1, #16]
 8003aea:	000c      	movs	r4, r1
 8003aec:	9000      	str	r0, [sp, #0]
 8003aee:	4293      	cmp	r3, r2
 8003af0:	da00      	bge.n	8003af4 <_printf_common+0x14>
 8003af2:	0013      	movs	r3, r2
 8003af4:	0022      	movs	r2, r4
 8003af6:	6033      	str	r3, [r6, #0]
 8003af8:	3243      	adds	r2, #67	@ 0x43
 8003afa:	7812      	ldrb	r2, [r2, #0]
 8003afc:	2a00      	cmp	r2, #0
 8003afe:	d001      	beq.n	8003b04 <_printf_common+0x24>
 8003b00:	3301      	adds	r3, #1
 8003b02:	6033      	str	r3, [r6, #0]
 8003b04:	6823      	ldr	r3, [r4, #0]
 8003b06:	069b      	lsls	r3, r3, #26
 8003b08:	d502      	bpl.n	8003b10 <_printf_common+0x30>
 8003b0a:	6833      	ldr	r3, [r6, #0]
 8003b0c:	3302      	adds	r3, #2
 8003b0e:	6033      	str	r3, [r6, #0]
 8003b10:	6822      	ldr	r2, [r4, #0]
 8003b12:	2306      	movs	r3, #6
 8003b14:	0015      	movs	r5, r2
 8003b16:	401d      	ands	r5, r3
 8003b18:	421a      	tst	r2, r3
 8003b1a:	d027      	beq.n	8003b6c <_printf_common+0x8c>
 8003b1c:	0023      	movs	r3, r4
 8003b1e:	3343      	adds	r3, #67	@ 0x43
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	1e5a      	subs	r2, r3, #1
 8003b24:	4193      	sbcs	r3, r2
 8003b26:	6822      	ldr	r2, [r4, #0]
 8003b28:	0692      	lsls	r2, r2, #26
 8003b2a:	d430      	bmi.n	8003b8e <_printf_common+0xae>
 8003b2c:	0022      	movs	r2, r4
 8003b2e:	9901      	ldr	r1, [sp, #4]
 8003b30:	9800      	ldr	r0, [sp, #0]
 8003b32:	9d08      	ldr	r5, [sp, #32]
 8003b34:	3243      	adds	r2, #67	@ 0x43
 8003b36:	47a8      	blx	r5
 8003b38:	3001      	adds	r0, #1
 8003b3a:	d025      	beq.n	8003b88 <_printf_common+0xa8>
 8003b3c:	2206      	movs	r2, #6
 8003b3e:	6823      	ldr	r3, [r4, #0]
 8003b40:	2500      	movs	r5, #0
 8003b42:	4013      	ands	r3, r2
 8003b44:	2b04      	cmp	r3, #4
 8003b46:	d105      	bne.n	8003b54 <_printf_common+0x74>
 8003b48:	6833      	ldr	r3, [r6, #0]
 8003b4a:	68e5      	ldr	r5, [r4, #12]
 8003b4c:	1aed      	subs	r5, r5, r3
 8003b4e:	43eb      	mvns	r3, r5
 8003b50:	17db      	asrs	r3, r3, #31
 8003b52:	401d      	ands	r5, r3
 8003b54:	68a3      	ldr	r3, [r4, #8]
 8003b56:	6922      	ldr	r2, [r4, #16]
 8003b58:	4293      	cmp	r3, r2
 8003b5a:	dd01      	ble.n	8003b60 <_printf_common+0x80>
 8003b5c:	1a9b      	subs	r3, r3, r2
 8003b5e:	18ed      	adds	r5, r5, r3
 8003b60:	2600      	movs	r6, #0
 8003b62:	42b5      	cmp	r5, r6
 8003b64:	d120      	bne.n	8003ba8 <_printf_common+0xc8>
 8003b66:	2000      	movs	r0, #0
 8003b68:	e010      	b.n	8003b8c <_printf_common+0xac>
 8003b6a:	3501      	adds	r5, #1
 8003b6c:	68e3      	ldr	r3, [r4, #12]
 8003b6e:	6832      	ldr	r2, [r6, #0]
 8003b70:	1a9b      	subs	r3, r3, r2
 8003b72:	42ab      	cmp	r3, r5
 8003b74:	ddd2      	ble.n	8003b1c <_printf_common+0x3c>
 8003b76:	0022      	movs	r2, r4
 8003b78:	2301      	movs	r3, #1
 8003b7a:	9901      	ldr	r1, [sp, #4]
 8003b7c:	9800      	ldr	r0, [sp, #0]
 8003b7e:	9f08      	ldr	r7, [sp, #32]
 8003b80:	3219      	adds	r2, #25
 8003b82:	47b8      	blx	r7
 8003b84:	3001      	adds	r0, #1
 8003b86:	d1f0      	bne.n	8003b6a <_printf_common+0x8a>
 8003b88:	2001      	movs	r0, #1
 8003b8a:	4240      	negs	r0, r0
 8003b8c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003b8e:	2030      	movs	r0, #48	@ 0x30
 8003b90:	18e1      	adds	r1, r4, r3
 8003b92:	3143      	adds	r1, #67	@ 0x43
 8003b94:	7008      	strb	r0, [r1, #0]
 8003b96:	0021      	movs	r1, r4
 8003b98:	1c5a      	adds	r2, r3, #1
 8003b9a:	3145      	adds	r1, #69	@ 0x45
 8003b9c:	7809      	ldrb	r1, [r1, #0]
 8003b9e:	18a2      	adds	r2, r4, r2
 8003ba0:	3243      	adds	r2, #67	@ 0x43
 8003ba2:	3302      	adds	r3, #2
 8003ba4:	7011      	strb	r1, [r2, #0]
 8003ba6:	e7c1      	b.n	8003b2c <_printf_common+0x4c>
 8003ba8:	0022      	movs	r2, r4
 8003baa:	2301      	movs	r3, #1
 8003bac:	9901      	ldr	r1, [sp, #4]
 8003bae:	9800      	ldr	r0, [sp, #0]
 8003bb0:	9f08      	ldr	r7, [sp, #32]
 8003bb2:	321a      	adds	r2, #26
 8003bb4:	47b8      	blx	r7
 8003bb6:	3001      	adds	r0, #1
 8003bb8:	d0e6      	beq.n	8003b88 <_printf_common+0xa8>
 8003bba:	3601      	adds	r6, #1
 8003bbc:	e7d1      	b.n	8003b62 <_printf_common+0x82>
	...

08003bc0 <_printf_i>:
 8003bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003bc2:	b08b      	sub	sp, #44	@ 0x2c
 8003bc4:	9206      	str	r2, [sp, #24]
 8003bc6:	000a      	movs	r2, r1
 8003bc8:	3243      	adds	r2, #67	@ 0x43
 8003bca:	9307      	str	r3, [sp, #28]
 8003bcc:	9005      	str	r0, [sp, #20]
 8003bce:	9203      	str	r2, [sp, #12]
 8003bd0:	7e0a      	ldrb	r2, [r1, #24]
 8003bd2:	000c      	movs	r4, r1
 8003bd4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003bd6:	2a78      	cmp	r2, #120	@ 0x78
 8003bd8:	d809      	bhi.n	8003bee <_printf_i+0x2e>
 8003bda:	2a62      	cmp	r2, #98	@ 0x62
 8003bdc:	d80b      	bhi.n	8003bf6 <_printf_i+0x36>
 8003bde:	2a00      	cmp	r2, #0
 8003be0:	d100      	bne.n	8003be4 <_printf_i+0x24>
 8003be2:	e0bc      	b.n	8003d5e <_printf_i+0x19e>
 8003be4:	497b      	ldr	r1, [pc, #492]	@ (8003dd4 <_printf_i+0x214>)
 8003be6:	9104      	str	r1, [sp, #16]
 8003be8:	2a58      	cmp	r2, #88	@ 0x58
 8003bea:	d100      	bne.n	8003bee <_printf_i+0x2e>
 8003bec:	e090      	b.n	8003d10 <_printf_i+0x150>
 8003bee:	0025      	movs	r5, r4
 8003bf0:	3542      	adds	r5, #66	@ 0x42
 8003bf2:	702a      	strb	r2, [r5, #0]
 8003bf4:	e022      	b.n	8003c3c <_printf_i+0x7c>
 8003bf6:	0010      	movs	r0, r2
 8003bf8:	3863      	subs	r0, #99	@ 0x63
 8003bfa:	2815      	cmp	r0, #21
 8003bfc:	d8f7      	bhi.n	8003bee <_printf_i+0x2e>
 8003bfe:	f7fc fa95 	bl	800012c <__gnu_thumb1_case_shi>
 8003c02:	0016      	.short	0x0016
 8003c04:	fff6001f 	.word	0xfff6001f
 8003c08:	fff6fff6 	.word	0xfff6fff6
 8003c0c:	001ffff6 	.word	0x001ffff6
 8003c10:	fff6fff6 	.word	0xfff6fff6
 8003c14:	fff6fff6 	.word	0xfff6fff6
 8003c18:	003600a1 	.word	0x003600a1
 8003c1c:	fff60080 	.word	0xfff60080
 8003c20:	00b2fff6 	.word	0x00b2fff6
 8003c24:	0036fff6 	.word	0x0036fff6
 8003c28:	fff6fff6 	.word	0xfff6fff6
 8003c2c:	0084      	.short	0x0084
 8003c2e:	0025      	movs	r5, r4
 8003c30:	681a      	ldr	r2, [r3, #0]
 8003c32:	3542      	adds	r5, #66	@ 0x42
 8003c34:	1d11      	adds	r1, r2, #4
 8003c36:	6019      	str	r1, [r3, #0]
 8003c38:	6813      	ldr	r3, [r2, #0]
 8003c3a:	702b      	strb	r3, [r5, #0]
 8003c3c:	2301      	movs	r3, #1
 8003c3e:	e0a0      	b.n	8003d82 <_printf_i+0x1c2>
 8003c40:	6818      	ldr	r0, [r3, #0]
 8003c42:	6809      	ldr	r1, [r1, #0]
 8003c44:	1d02      	adds	r2, r0, #4
 8003c46:	060d      	lsls	r5, r1, #24
 8003c48:	d50b      	bpl.n	8003c62 <_printf_i+0xa2>
 8003c4a:	6806      	ldr	r6, [r0, #0]
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	2e00      	cmp	r6, #0
 8003c50:	da03      	bge.n	8003c5a <_printf_i+0x9a>
 8003c52:	232d      	movs	r3, #45	@ 0x2d
 8003c54:	9a03      	ldr	r2, [sp, #12]
 8003c56:	4276      	negs	r6, r6
 8003c58:	7013      	strb	r3, [r2, #0]
 8003c5a:	4b5e      	ldr	r3, [pc, #376]	@ (8003dd4 <_printf_i+0x214>)
 8003c5c:	270a      	movs	r7, #10
 8003c5e:	9304      	str	r3, [sp, #16]
 8003c60:	e018      	b.n	8003c94 <_printf_i+0xd4>
 8003c62:	6806      	ldr	r6, [r0, #0]
 8003c64:	601a      	str	r2, [r3, #0]
 8003c66:	0649      	lsls	r1, r1, #25
 8003c68:	d5f1      	bpl.n	8003c4e <_printf_i+0x8e>
 8003c6a:	b236      	sxth	r6, r6
 8003c6c:	e7ef      	b.n	8003c4e <_printf_i+0x8e>
 8003c6e:	6808      	ldr	r0, [r1, #0]
 8003c70:	6819      	ldr	r1, [r3, #0]
 8003c72:	c940      	ldmia	r1!, {r6}
 8003c74:	0605      	lsls	r5, r0, #24
 8003c76:	d402      	bmi.n	8003c7e <_printf_i+0xbe>
 8003c78:	0640      	lsls	r0, r0, #25
 8003c7a:	d500      	bpl.n	8003c7e <_printf_i+0xbe>
 8003c7c:	b2b6      	uxth	r6, r6
 8003c7e:	6019      	str	r1, [r3, #0]
 8003c80:	4b54      	ldr	r3, [pc, #336]	@ (8003dd4 <_printf_i+0x214>)
 8003c82:	270a      	movs	r7, #10
 8003c84:	9304      	str	r3, [sp, #16]
 8003c86:	2a6f      	cmp	r2, #111	@ 0x6f
 8003c88:	d100      	bne.n	8003c8c <_printf_i+0xcc>
 8003c8a:	3f02      	subs	r7, #2
 8003c8c:	0023      	movs	r3, r4
 8003c8e:	2200      	movs	r2, #0
 8003c90:	3343      	adds	r3, #67	@ 0x43
 8003c92:	701a      	strb	r2, [r3, #0]
 8003c94:	6863      	ldr	r3, [r4, #4]
 8003c96:	60a3      	str	r3, [r4, #8]
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	db03      	blt.n	8003ca4 <_printf_i+0xe4>
 8003c9c:	2104      	movs	r1, #4
 8003c9e:	6822      	ldr	r2, [r4, #0]
 8003ca0:	438a      	bics	r2, r1
 8003ca2:	6022      	str	r2, [r4, #0]
 8003ca4:	2e00      	cmp	r6, #0
 8003ca6:	d102      	bne.n	8003cae <_printf_i+0xee>
 8003ca8:	9d03      	ldr	r5, [sp, #12]
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	d00c      	beq.n	8003cc8 <_printf_i+0x108>
 8003cae:	9d03      	ldr	r5, [sp, #12]
 8003cb0:	0030      	movs	r0, r6
 8003cb2:	0039      	movs	r1, r7
 8003cb4:	f7fc faca 	bl	800024c <__aeabi_uidivmod>
 8003cb8:	9b04      	ldr	r3, [sp, #16]
 8003cba:	3d01      	subs	r5, #1
 8003cbc:	5c5b      	ldrb	r3, [r3, r1]
 8003cbe:	702b      	strb	r3, [r5, #0]
 8003cc0:	0033      	movs	r3, r6
 8003cc2:	0006      	movs	r6, r0
 8003cc4:	429f      	cmp	r7, r3
 8003cc6:	d9f3      	bls.n	8003cb0 <_printf_i+0xf0>
 8003cc8:	2f08      	cmp	r7, #8
 8003cca:	d109      	bne.n	8003ce0 <_printf_i+0x120>
 8003ccc:	6823      	ldr	r3, [r4, #0]
 8003cce:	07db      	lsls	r3, r3, #31
 8003cd0:	d506      	bpl.n	8003ce0 <_printf_i+0x120>
 8003cd2:	6862      	ldr	r2, [r4, #4]
 8003cd4:	6923      	ldr	r3, [r4, #16]
 8003cd6:	429a      	cmp	r2, r3
 8003cd8:	dc02      	bgt.n	8003ce0 <_printf_i+0x120>
 8003cda:	2330      	movs	r3, #48	@ 0x30
 8003cdc:	3d01      	subs	r5, #1
 8003cde:	702b      	strb	r3, [r5, #0]
 8003ce0:	9b03      	ldr	r3, [sp, #12]
 8003ce2:	1b5b      	subs	r3, r3, r5
 8003ce4:	6123      	str	r3, [r4, #16]
 8003ce6:	9b07      	ldr	r3, [sp, #28]
 8003ce8:	0021      	movs	r1, r4
 8003cea:	9300      	str	r3, [sp, #0]
 8003cec:	9805      	ldr	r0, [sp, #20]
 8003cee:	9b06      	ldr	r3, [sp, #24]
 8003cf0:	aa09      	add	r2, sp, #36	@ 0x24
 8003cf2:	f7ff fef5 	bl	8003ae0 <_printf_common>
 8003cf6:	3001      	adds	r0, #1
 8003cf8:	d148      	bne.n	8003d8c <_printf_i+0x1cc>
 8003cfa:	2001      	movs	r0, #1
 8003cfc:	4240      	negs	r0, r0
 8003cfe:	b00b      	add	sp, #44	@ 0x2c
 8003d00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d02:	2220      	movs	r2, #32
 8003d04:	6809      	ldr	r1, [r1, #0]
 8003d06:	430a      	orrs	r2, r1
 8003d08:	6022      	str	r2, [r4, #0]
 8003d0a:	2278      	movs	r2, #120	@ 0x78
 8003d0c:	4932      	ldr	r1, [pc, #200]	@ (8003dd8 <_printf_i+0x218>)
 8003d0e:	9104      	str	r1, [sp, #16]
 8003d10:	0021      	movs	r1, r4
 8003d12:	3145      	adds	r1, #69	@ 0x45
 8003d14:	700a      	strb	r2, [r1, #0]
 8003d16:	6819      	ldr	r1, [r3, #0]
 8003d18:	6822      	ldr	r2, [r4, #0]
 8003d1a:	c940      	ldmia	r1!, {r6}
 8003d1c:	0610      	lsls	r0, r2, #24
 8003d1e:	d402      	bmi.n	8003d26 <_printf_i+0x166>
 8003d20:	0650      	lsls	r0, r2, #25
 8003d22:	d500      	bpl.n	8003d26 <_printf_i+0x166>
 8003d24:	b2b6      	uxth	r6, r6
 8003d26:	6019      	str	r1, [r3, #0]
 8003d28:	07d3      	lsls	r3, r2, #31
 8003d2a:	d502      	bpl.n	8003d32 <_printf_i+0x172>
 8003d2c:	2320      	movs	r3, #32
 8003d2e:	4313      	orrs	r3, r2
 8003d30:	6023      	str	r3, [r4, #0]
 8003d32:	2e00      	cmp	r6, #0
 8003d34:	d001      	beq.n	8003d3a <_printf_i+0x17a>
 8003d36:	2710      	movs	r7, #16
 8003d38:	e7a8      	b.n	8003c8c <_printf_i+0xcc>
 8003d3a:	2220      	movs	r2, #32
 8003d3c:	6823      	ldr	r3, [r4, #0]
 8003d3e:	4393      	bics	r3, r2
 8003d40:	6023      	str	r3, [r4, #0]
 8003d42:	e7f8      	b.n	8003d36 <_printf_i+0x176>
 8003d44:	681a      	ldr	r2, [r3, #0]
 8003d46:	680d      	ldr	r5, [r1, #0]
 8003d48:	1d10      	adds	r0, r2, #4
 8003d4a:	6949      	ldr	r1, [r1, #20]
 8003d4c:	6018      	str	r0, [r3, #0]
 8003d4e:	6813      	ldr	r3, [r2, #0]
 8003d50:	062e      	lsls	r6, r5, #24
 8003d52:	d501      	bpl.n	8003d58 <_printf_i+0x198>
 8003d54:	6019      	str	r1, [r3, #0]
 8003d56:	e002      	b.n	8003d5e <_printf_i+0x19e>
 8003d58:	066d      	lsls	r5, r5, #25
 8003d5a:	d5fb      	bpl.n	8003d54 <_printf_i+0x194>
 8003d5c:	8019      	strh	r1, [r3, #0]
 8003d5e:	2300      	movs	r3, #0
 8003d60:	9d03      	ldr	r5, [sp, #12]
 8003d62:	6123      	str	r3, [r4, #16]
 8003d64:	e7bf      	b.n	8003ce6 <_printf_i+0x126>
 8003d66:	681a      	ldr	r2, [r3, #0]
 8003d68:	1d11      	adds	r1, r2, #4
 8003d6a:	6019      	str	r1, [r3, #0]
 8003d6c:	6815      	ldr	r5, [r2, #0]
 8003d6e:	2100      	movs	r1, #0
 8003d70:	0028      	movs	r0, r5
 8003d72:	6862      	ldr	r2, [r4, #4]
 8003d74:	f000 f9c9 	bl	800410a <memchr>
 8003d78:	2800      	cmp	r0, #0
 8003d7a:	d001      	beq.n	8003d80 <_printf_i+0x1c0>
 8003d7c:	1b40      	subs	r0, r0, r5
 8003d7e:	6060      	str	r0, [r4, #4]
 8003d80:	6863      	ldr	r3, [r4, #4]
 8003d82:	6123      	str	r3, [r4, #16]
 8003d84:	2300      	movs	r3, #0
 8003d86:	9a03      	ldr	r2, [sp, #12]
 8003d88:	7013      	strb	r3, [r2, #0]
 8003d8a:	e7ac      	b.n	8003ce6 <_printf_i+0x126>
 8003d8c:	002a      	movs	r2, r5
 8003d8e:	6923      	ldr	r3, [r4, #16]
 8003d90:	9906      	ldr	r1, [sp, #24]
 8003d92:	9805      	ldr	r0, [sp, #20]
 8003d94:	9d07      	ldr	r5, [sp, #28]
 8003d96:	47a8      	blx	r5
 8003d98:	3001      	adds	r0, #1
 8003d9a:	d0ae      	beq.n	8003cfa <_printf_i+0x13a>
 8003d9c:	6823      	ldr	r3, [r4, #0]
 8003d9e:	079b      	lsls	r3, r3, #30
 8003da0:	d415      	bmi.n	8003dce <_printf_i+0x20e>
 8003da2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003da4:	68e0      	ldr	r0, [r4, #12]
 8003da6:	4298      	cmp	r0, r3
 8003da8:	daa9      	bge.n	8003cfe <_printf_i+0x13e>
 8003daa:	0018      	movs	r0, r3
 8003dac:	e7a7      	b.n	8003cfe <_printf_i+0x13e>
 8003dae:	0022      	movs	r2, r4
 8003db0:	2301      	movs	r3, #1
 8003db2:	9906      	ldr	r1, [sp, #24]
 8003db4:	9805      	ldr	r0, [sp, #20]
 8003db6:	9e07      	ldr	r6, [sp, #28]
 8003db8:	3219      	adds	r2, #25
 8003dba:	47b0      	blx	r6
 8003dbc:	3001      	adds	r0, #1
 8003dbe:	d09c      	beq.n	8003cfa <_printf_i+0x13a>
 8003dc0:	3501      	adds	r5, #1
 8003dc2:	68e3      	ldr	r3, [r4, #12]
 8003dc4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003dc6:	1a9b      	subs	r3, r3, r2
 8003dc8:	42ab      	cmp	r3, r5
 8003dca:	dcf0      	bgt.n	8003dae <_printf_i+0x1ee>
 8003dcc:	e7e9      	b.n	8003da2 <_printf_i+0x1e2>
 8003dce:	2500      	movs	r5, #0
 8003dd0:	e7f7      	b.n	8003dc2 <_printf_i+0x202>
 8003dd2:	46c0      	nop			@ (mov r8, r8)
 8003dd4:	08006062 	.word	0x08006062
 8003dd8:	08006073 	.word	0x08006073

08003ddc <std>:
 8003ddc:	2300      	movs	r3, #0
 8003dde:	b510      	push	{r4, lr}
 8003de0:	0004      	movs	r4, r0
 8003de2:	6003      	str	r3, [r0, #0]
 8003de4:	6043      	str	r3, [r0, #4]
 8003de6:	6083      	str	r3, [r0, #8]
 8003de8:	8181      	strh	r1, [r0, #12]
 8003dea:	6643      	str	r3, [r0, #100]	@ 0x64
 8003dec:	81c2      	strh	r2, [r0, #14]
 8003dee:	6103      	str	r3, [r0, #16]
 8003df0:	6143      	str	r3, [r0, #20]
 8003df2:	6183      	str	r3, [r0, #24]
 8003df4:	0019      	movs	r1, r3
 8003df6:	2208      	movs	r2, #8
 8003df8:	305c      	adds	r0, #92	@ 0x5c
 8003dfa:	f000 f8ff 	bl	8003ffc <memset>
 8003dfe:	4b0b      	ldr	r3, [pc, #44]	@ (8003e2c <std+0x50>)
 8003e00:	6224      	str	r4, [r4, #32]
 8003e02:	6263      	str	r3, [r4, #36]	@ 0x24
 8003e04:	4b0a      	ldr	r3, [pc, #40]	@ (8003e30 <std+0x54>)
 8003e06:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003e08:	4b0a      	ldr	r3, [pc, #40]	@ (8003e34 <std+0x58>)
 8003e0a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003e0c:	4b0a      	ldr	r3, [pc, #40]	@ (8003e38 <std+0x5c>)
 8003e0e:	6323      	str	r3, [r4, #48]	@ 0x30
 8003e10:	4b0a      	ldr	r3, [pc, #40]	@ (8003e3c <std+0x60>)
 8003e12:	429c      	cmp	r4, r3
 8003e14:	d005      	beq.n	8003e22 <std+0x46>
 8003e16:	4b0a      	ldr	r3, [pc, #40]	@ (8003e40 <std+0x64>)
 8003e18:	429c      	cmp	r4, r3
 8003e1a:	d002      	beq.n	8003e22 <std+0x46>
 8003e1c:	4b09      	ldr	r3, [pc, #36]	@ (8003e44 <std+0x68>)
 8003e1e:	429c      	cmp	r4, r3
 8003e20:	d103      	bne.n	8003e2a <std+0x4e>
 8003e22:	0020      	movs	r0, r4
 8003e24:	3058      	adds	r0, #88	@ 0x58
 8003e26:	f000 f96d 	bl	8004104 <__retarget_lock_init_recursive>
 8003e2a:	bd10      	pop	{r4, pc}
 8003e2c:	08003f65 	.word	0x08003f65
 8003e30:	08003f8d 	.word	0x08003f8d
 8003e34:	08003fc5 	.word	0x08003fc5
 8003e38:	08003ff1 	.word	0x08003ff1
 8003e3c:	200002a8 	.word	0x200002a8
 8003e40:	20000310 	.word	0x20000310
 8003e44:	20000378 	.word	0x20000378

08003e48 <stdio_exit_handler>:
 8003e48:	b510      	push	{r4, lr}
 8003e4a:	4a03      	ldr	r2, [pc, #12]	@ (8003e58 <stdio_exit_handler+0x10>)
 8003e4c:	4903      	ldr	r1, [pc, #12]	@ (8003e5c <stdio_exit_handler+0x14>)
 8003e4e:	4804      	ldr	r0, [pc, #16]	@ (8003e60 <stdio_exit_handler+0x18>)
 8003e50:	f000 f86c 	bl	8003f2c <_fwalk_sglue>
 8003e54:	bd10      	pop	{r4, pc}
 8003e56:	46c0      	nop			@ (mov r8, r8)
 8003e58:	2000001c 	.word	0x2000001c
 8003e5c:	08005885 	.word	0x08005885
 8003e60:	2000002c 	.word	0x2000002c

08003e64 <cleanup_stdio>:
 8003e64:	6841      	ldr	r1, [r0, #4]
 8003e66:	4b0b      	ldr	r3, [pc, #44]	@ (8003e94 <cleanup_stdio+0x30>)
 8003e68:	b510      	push	{r4, lr}
 8003e6a:	0004      	movs	r4, r0
 8003e6c:	4299      	cmp	r1, r3
 8003e6e:	d001      	beq.n	8003e74 <cleanup_stdio+0x10>
 8003e70:	f001 fd08 	bl	8005884 <_fflush_r>
 8003e74:	68a1      	ldr	r1, [r4, #8]
 8003e76:	4b08      	ldr	r3, [pc, #32]	@ (8003e98 <cleanup_stdio+0x34>)
 8003e78:	4299      	cmp	r1, r3
 8003e7a:	d002      	beq.n	8003e82 <cleanup_stdio+0x1e>
 8003e7c:	0020      	movs	r0, r4
 8003e7e:	f001 fd01 	bl	8005884 <_fflush_r>
 8003e82:	68e1      	ldr	r1, [r4, #12]
 8003e84:	4b05      	ldr	r3, [pc, #20]	@ (8003e9c <cleanup_stdio+0x38>)
 8003e86:	4299      	cmp	r1, r3
 8003e88:	d002      	beq.n	8003e90 <cleanup_stdio+0x2c>
 8003e8a:	0020      	movs	r0, r4
 8003e8c:	f001 fcfa 	bl	8005884 <_fflush_r>
 8003e90:	bd10      	pop	{r4, pc}
 8003e92:	46c0      	nop			@ (mov r8, r8)
 8003e94:	200002a8 	.word	0x200002a8
 8003e98:	20000310 	.word	0x20000310
 8003e9c:	20000378 	.word	0x20000378

08003ea0 <global_stdio_init.part.0>:
 8003ea0:	b510      	push	{r4, lr}
 8003ea2:	4b09      	ldr	r3, [pc, #36]	@ (8003ec8 <global_stdio_init.part.0+0x28>)
 8003ea4:	4a09      	ldr	r2, [pc, #36]	@ (8003ecc <global_stdio_init.part.0+0x2c>)
 8003ea6:	2104      	movs	r1, #4
 8003ea8:	601a      	str	r2, [r3, #0]
 8003eaa:	4809      	ldr	r0, [pc, #36]	@ (8003ed0 <global_stdio_init.part.0+0x30>)
 8003eac:	2200      	movs	r2, #0
 8003eae:	f7ff ff95 	bl	8003ddc <std>
 8003eb2:	2201      	movs	r2, #1
 8003eb4:	2109      	movs	r1, #9
 8003eb6:	4807      	ldr	r0, [pc, #28]	@ (8003ed4 <global_stdio_init.part.0+0x34>)
 8003eb8:	f7ff ff90 	bl	8003ddc <std>
 8003ebc:	2202      	movs	r2, #2
 8003ebe:	2112      	movs	r1, #18
 8003ec0:	4805      	ldr	r0, [pc, #20]	@ (8003ed8 <global_stdio_init.part.0+0x38>)
 8003ec2:	f7ff ff8b 	bl	8003ddc <std>
 8003ec6:	bd10      	pop	{r4, pc}
 8003ec8:	200003e0 	.word	0x200003e0
 8003ecc:	08003e49 	.word	0x08003e49
 8003ed0:	200002a8 	.word	0x200002a8
 8003ed4:	20000310 	.word	0x20000310
 8003ed8:	20000378 	.word	0x20000378

08003edc <__sfp_lock_acquire>:
 8003edc:	b510      	push	{r4, lr}
 8003ede:	4802      	ldr	r0, [pc, #8]	@ (8003ee8 <__sfp_lock_acquire+0xc>)
 8003ee0:	f000 f911 	bl	8004106 <__retarget_lock_acquire_recursive>
 8003ee4:	bd10      	pop	{r4, pc}
 8003ee6:	46c0      	nop			@ (mov r8, r8)
 8003ee8:	200003e9 	.word	0x200003e9

08003eec <__sfp_lock_release>:
 8003eec:	b510      	push	{r4, lr}
 8003eee:	4802      	ldr	r0, [pc, #8]	@ (8003ef8 <__sfp_lock_release+0xc>)
 8003ef0:	f000 f90a 	bl	8004108 <__retarget_lock_release_recursive>
 8003ef4:	bd10      	pop	{r4, pc}
 8003ef6:	46c0      	nop			@ (mov r8, r8)
 8003ef8:	200003e9 	.word	0x200003e9

08003efc <__sinit>:
 8003efc:	b510      	push	{r4, lr}
 8003efe:	0004      	movs	r4, r0
 8003f00:	f7ff ffec 	bl	8003edc <__sfp_lock_acquire>
 8003f04:	6a23      	ldr	r3, [r4, #32]
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d002      	beq.n	8003f10 <__sinit+0x14>
 8003f0a:	f7ff ffef 	bl	8003eec <__sfp_lock_release>
 8003f0e:	bd10      	pop	{r4, pc}
 8003f10:	4b04      	ldr	r3, [pc, #16]	@ (8003f24 <__sinit+0x28>)
 8003f12:	6223      	str	r3, [r4, #32]
 8003f14:	4b04      	ldr	r3, [pc, #16]	@ (8003f28 <__sinit+0x2c>)
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d1f6      	bne.n	8003f0a <__sinit+0xe>
 8003f1c:	f7ff ffc0 	bl	8003ea0 <global_stdio_init.part.0>
 8003f20:	e7f3      	b.n	8003f0a <__sinit+0xe>
 8003f22:	46c0      	nop			@ (mov r8, r8)
 8003f24:	08003e65 	.word	0x08003e65
 8003f28:	200003e0 	.word	0x200003e0

08003f2c <_fwalk_sglue>:
 8003f2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f2e:	0014      	movs	r4, r2
 8003f30:	2600      	movs	r6, #0
 8003f32:	9000      	str	r0, [sp, #0]
 8003f34:	9101      	str	r1, [sp, #4]
 8003f36:	68a5      	ldr	r5, [r4, #8]
 8003f38:	6867      	ldr	r7, [r4, #4]
 8003f3a:	3f01      	subs	r7, #1
 8003f3c:	d504      	bpl.n	8003f48 <_fwalk_sglue+0x1c>
 8003f3e:	6824      	ldr	r4, [r4, #0]
 8003f40:	2c00      	cmp	r4, #0
 8003f42:	d1f8      	bne.n	8003f36 <_fwalk_sglue+0xa>
 8003f44:	0030      	movs	r0, r6
 8003f46:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003f48:	89ab      	ldrh	r3, [r5, #12]
 8003f4a:	2b01      	cmp	r3, #1
 8003f4c:	d908      	bls.n	8003f60 <_fwalk_sglue+0x34>
 8003f4e:	220e      	movs	r2, #14
 8003f50:	5eab      	ldrsh	r3, [r5, r2]
 8003f52:	3301      	adds	r3, #1
 8003f54:	d004      	beq.n	8003f60 <_fwalk_sglue+0x34>
 8003f56:	0029      	movs	r1, r5
 8003f58:	9800      	ldr	r0, [sp, #0]
 8003f5a:	9b01      	ldr	r3, [sp, #4]
 8003f5c:	4798      	blx	r3
 8003f5e:	4306      	orrs	r6, r0
 8003f60:	3568      	adds	r5, #104	@ 0x68
 8003f62:	e7ea      	b.n	8003f3a <_fwalk_sglue+0xe>

08003f64 <__sread>:
 8003f64:	b570      	push	{r4, r5, r6, lr}
 8003f66:	000c      	movs	r4, r1
 8003f68:	250e      	movs	r5, #14
 8003f6a:	5f49      	ldrsh	r1, [r1, r5]
 8003f6c:	f000 f878 	bl	8004060 <_read_r>
 8003f70:	2800      	cmp	r0, #0
 8003f72:	db03      	blt.n	8003f7c <__sread+0x18>
 8003f74:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8003f76:	181b      	adds	r3, r3, r0
 8003f78:	6563      	str	r3, [r4, #84]	@ 0x54
 8003f7a:	bd70      	pop	{r4, r5, r6, pc}
 8003f7c:	89a3      	ldrh	r3, [r4, #12]
 8003f7e:	4a02      	ldr	r2, [pc, #8]	@ (8003f88 <__sread+0x24>)
 8003f80:	4013      	ands	r3, r2
 8003f82:	81a3      	strh	r3, [r4, #12]
 8003f84:	e7f9      	b.n	8003f7a <__sread+0x16>
 8003f86:	46c0      	nop			@ (mov r8, r8)
 8003f88:	ffffefff 	.word	0xffffefff

08003f8c <__swrite>:
 8003f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f8e:	001f      	movs	r7, r3
 8003f90:	898b      	ldrh	r3, [r1, #12]
 8003f92:	0005      	movs	r5, r0
 8003f94:	000c      	movs	r4, r1
 8003f96:	0016      	movs	r6, r2
 8003f98:	05db      	lsls	r3, r3, #23
 8003f9a:	d505      	bpl.n	8003fa8 <__swrite+0x1c>
 8003f9c:	230e      	movs	r3, #14
 8003f9e:	5ec9      	ldrsh	r1, [r1, r3]
 8003fa0:	2200      	movs	r2, #0
 8003fa2:	2302      	movs	r3, #2
 8003fa4:	f000 f848 	bl	8004038 <_lseek_r>
 8003fa8:	89a3      	ldrh	r3, [r4, #12]
 8003faa:	4a05      	ldr	r2, [pc, #20]	@ (8003fc0 <__swrite+0x34>)
 8003fac:	0028      	movs	r0, r5
 8003fae:	4013      	ands	r3, r2
 8003fb0:	81a3      	strh	r3, [r4, #12]
 8003fb2:	0032      	movs	r2, r6
 8003fb4:	230e      	movs	r3, #14
 8003fb6:	5ee1      	ldrsh	r1, [r4, r3]
 8003fb8:	003b      	movs	r3, r7
 8003fba:	f000 f865 	bl	8004088 <_write_r>
 8003fbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003fc0:	ffffefff 	.word	0xffffefff

08003fc4 <__sseek>:
 8003fc4:	b570      	push	{r4, r5, r6, lr}
 8003fc6:	000c      	movs	r4, r1
 8003fc8:	250e      	movs	r5, #14
 8003fca:	5f49      	ldrsh	r1, [r1, r5]
 8003fcc:	f000 f834 	bl	8004038 <_lseek_r>
 8003fd0:	89a3      	ldrh	r3, [r4, #12]
 8003fd2:	1c42      	adds	r2, r0, #1
 8003fd4:	d103      	bne.n	8003fde <__sseek+0x1a>
 8003fd6:	4a05      	ldr	r2, [pc, #20]	@ (8003fec <__sseek+0x28>)
 8003fd8:	4013      	ands	r3, r2
 8003fda:	81a3      	strh	r3, [r4, #12]
 8003fdc:	bd70      	pop	{r4, r5, r6, pc}
 8003fde:	2280      	movs	r2, #128	@ 0x80
 8003fe0:	0152      	lsls	r2, r2, #5
 8003fe2:	4313      	orrs	r3, r2
 8003fe4:	81a3      	strh	r3, [r4, #12]
 8003fe6:	6560      	str	r0, [r4, #84]	@ 0x54
 8003fe8:	e7f8      	b.n	8003fdc <__sseek+0x18>
 8003fea:	46c0      	nop			@ (mov r8, r8)
 8003fec:	ffffefff 	.word	0xffffefff

08003ff0 <__sclose>:
 8003ff0:	b510      	push	{r4, lr}
 8003ff2:	230e      	movs	r3, #14
 8003ff4:	5ec9      	ldrsh	r1, [r1, r3]
 8003ff6:	f000 f80d 	bl	8004014 <_close_r>
 8003ffa:	bd10      	pop	{r4, pc}

08003ffc <memset>:
 8003ffc:	0003      	movs	r3, r0
 8003ffe:	1882      	adds	r2, r0, r2
 8004000:	4293      	cmp	r3, r2
 8004002:	d100      	bne.n	8004006 <memset+0xa>
 8004004:	4770      	bx	lr
 8004006:	7019      	strb	r1, [r3, #0]
 8004008:	3301      	adds	r3, #1
 800400a:	e7f9      	b.n	8004000 <memset+0x4>

0800400c <_localeconv_r>:
 800400c:	4800      	ldr	r0, [pc, #0]	@ (8004010 <_localeconv_r+0x4>)
 800400e:	4770      	bx	lr
 8004010:	20000168 	.word	0x20000168

08004014 <_close_r>:
 8004014:	2300      	movs	r3, #0
 8004016:	b570      	push	{r4, r5, r6, lr}
 8004018:	4d06      	ldr	r5, [pc, #24]	@ (8004034 <_close_r+0x20>)
 800401a:	0004      	movs	r4, r0
 800401c:	0008      	movs	r0, r1
 800401e:	602b      	str	r3, [r5, #0]
 8004020:	f7fe fae3 	bl	80025ea <_close>
 8004024:	1c43      	adds	r3, r0, #1
 8004026:	d103      	bne.n	8004030 <_close_r+0x1c>
 8004028:	682b      	ldr	r3, [r5, #0]
 800402a:	2b00      	cmp	r3, #0
 800402c:	d000      	beq.n	8004030 <_close_r+0x1c>
 800402e:	6023      	str	r3, [r4, #0]
 8004030:	bd70      	pop	{r4, r5, r6, pc}
 8004032:	46c0      	nop			@ (mov r8, r8)
 8004034:	200003e4 	.word	0x200003e4

08004038 <_lseek_r>:
 8004038:	b570      	push	{r4, r5, r6, lr}
 800403a:	0004      	movs	r4, r0
 800403c:	0008      	movs	r0, r1
 800403e:	0011      	movs	r1, r2
 8004040:	001a      	movs	r2, r3
 8004042:	2300      	movs	r3, #0
 8004044:	4d05      	ldr	r5, [pc, #20]	@ (800405c <_lseek_r+0x24>)
 8004046:	602b      	str	r3, [r5, #0]
 8004048:	f7fe faf0 	bl	800262c <_lseek>
 800404c:	1c43      	adds	r3, r0, #1
 800404e:	d103      	bne.n	8004058 <_lseek_r+0x20>
 8004050:	682b      	ldr	r3, [r5, #0]
 8004052:	2b00      	cmp	r3, #0
 8004054:	d000      	beq.n	8004058 <_lseek_r+0x20>
 8004056:	6023      	str	r3, [r4, #0]
 8004058:	bd70      	pop	{r4, r5, r6, pc}
 800405a:	46c0      	nop			@ (mov r8, r8)
 800405c:	200003e4 	.word	0x200003e4

08004060 <_read_r>:
 8004060:	b570      	push	{r4, r5, r6, lr}
 8004062:	0004      	movs	r4, r0
 8004064:	0008      	movs	r0, r1
 8004066:	0011      	movs	r1, r2
 8004068:	001a      	movs	r2, r3
 800406a:	2300      	movs	r3, #0
 800406c:	4d05      	ldr	r5, [pc, #20]	@ (8004084 <_read_r+0x24>)
 800406e:	602b      	str	r3, [r5, #0]
 8004070:	f7fe fa82 	bl	8002578 <_read>
 8004074:	1c43      	adds	r3, r0, #1
 8004076:	d103      	bne.n	8004080 <_read_r+0x20>
 8004078:	682b      	ldr	r3, [r5, #0]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d000      	beq.n	8004080 <_read_r+0x20>
 800407e:	6023      	str	r3, [r4, #0]
 8004080:	bd70      	pop	{r4, r5, r6, pc}
 8004082:	46c0      	nop			@ (mov r8, r8)
 8004084:	200003e4 	.word	0x200003e4

08004088 <_write_r>:
 8004088:	b570      	push	{r4, r5, r6, lr}
 800408a:	0004      	movs	r4, r0
 800408c:	0008      	movs	r0, r1
 800408e:	0011      	movs	r1, r2
 8004090:	001a      	movs	r2, r3
 8004092:	2300      	movs	r3, #0
 8004094:	4d05      	ldr	r5, [pc, #20]	@ (80040ac <_write_r+0x24>)
 8004096:	602b      	str	r3, [r5, #0]
 8004098:	f7fe fa8b 	bl	80025b2 <_write>
 800409c:	1c43      	adds	r3, r0, #1
 800409e:	d103      	bne.n	80040a8 <_write_r+0x20>
 80040a0:	682b      	ldr	r3, [r5, #0]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d000      	beq.n	80040a8 <_write_r+0x20>
 80040a6:	6023      	str	r3, [r4, #0]
 80040a8:	bd70      	pop	{r4, r5, r6, pc}
 80040aa:	46c0      	nop			@ (mov r8, r8)
 80040ac:	200003e4 	.word	0x200003e4

080040b0 <__errno>:
 80040b0:	4b01      	ldr	r3, [pc, #4]	@ (80040b8 <__errno+0x8>)
 80040b2:	6818      	ldr	r0, [r3, #0]
 80040b4:	4770      	bx	lr
 80040b6:	46c0      	nop			@ (mov r8, r8)
 80040b8:	20000028 	.word	0x20000028

080040bc <__libc_init_array>:
 80040bc:	b570      	push	{r4, r5, r6, lr}
 80040be:	2600      	movs	r6, #0
 80040c0:	4c0c      	ldr	r4, [pc, #48]	@ (80040f4 <__libc_init_array+0x38>)
 80040c2:	4d0d      	ldr	r5, [pc, #52]	@ (80040f8 <__libc_init_array+0x3c>)
 80040c4:	1b64      	subs	r4, r4, r5
 80040c6:	10a4      	asrs	r4, r4, #2
 80040c8:	42a6      	cmp	r6, r4
 80040ca:	d109      	bne.n	80040e0 <__libc_init_array+0x24>
 80040cc:	2600      	movs	r6, #0
 80040ce:	f001 ff5f 	bl	8005f90 <_init>
 80040d2:	4c0a      	ldr	r4, [pc, #40]	@ (80040fc <__libc_init_array+0x40>)
 80040d4:	4d0a      	ldr	r5, [pc, #40]	@ (8004100 <__libc_init_array+0x44>)
 80040d6:	1b64      	subs	r4, r4, r5
 80040d8:	10a4      	asrs	r4, r4, #2
 80040da:	42a6      	cmp	r6, r4
 80040dc:	d105      	bne.n	80040ea <__libc_init_array+0x2e>
 80040de:	bd70      	pop	{r4, r5, r6, pc}
 80040e0:	00b3      	lsls	r3, r6, #2
 80040e2:	58eb      	ldr	r3, [r5, r3]
 80040e4:	4798      	blx	r3
 80040e6:	3601      	adds	r6, #1
 80040e8:	e7ee      	b.n	80040c8 <__libc_init_array+0xc>
 80040ea:	00b3      	lsls	r3, r6, #2
 80040ec:	58eb      	ldr	r3, [r5, r3]
 80040ee:	4798      	blx	r3
 80040f0:	3601      	adds	r6, #1
 80040f2:	e7f2      	b.n	80040da <__libc_init_array+0x1e>
 80040f4:	080063c0 	.word	0x080063c0
 80040f8:	080063c0 	.word	0x080063c0
 80040fc:	080063c4 	.word	0x080063c4
 8004100:	080063c0 	.word	0x080063c0

08004104 <__retarget_lock_init_recursive>:
 8004104:	4770      	bx	lr

08004106 <__retarget_lock_acquire_recursive>:
 8004106:	4770      	bx	lr

08004108 <__retarget_lock_release_recursive>:
 8004108:	4770      	bx	lr

0800410a <memchr>:
 800410a:	b2c9      	uxtb	r1, r1
 800410c:	1882      	adds	r2, r0, r2
 800410e:	4290      	cmp	r0, r2
 8004110:	d101      	bne.n	8004116 <memchr+0xc>
 8004112:	2000      	movs	r0, #0
 8004114:	4770      	bx	lr
 8004116:	7803      	ldrb	r3, [r0, #0]
 8004118:	428b      	cmp	r3, r1
 800411a:	d0fb      	beq.n	8004114 <memchr+0xa>
 800411c:	3001      	adds	r0, #1
 800411e:	e7f6      	b.n	800410e <memchr+0x4>

08004120 <quorem>:
 8004120:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004122:	6902      	ldr	r2, [r0, #16]
 8004124:	690f      	ldr	r7, [r1, #16]
 8004126:	b087      	sub	sp, #28
 8004128:	0006      	movs	r6, r0
 800412a:	000b      	movs	r3, r1
 800412c:	2000      	movs	r0, #0
 800412e:	9102      	str	r1, [sp, #8]
 8004130:	42ba      	cmp	r2, r7
 8004132:	db6d      	blt.n	8004210 <quorem+0xf0>
 8004134:	3f01      	subs	r7, #1
 8004136:	00bc      	lsls	r4, r7, #2
 8004138:	3314      	adds	r3, #20
 800413a:	9305      	str	r3, [sp, #20]
 800413c:	191b      	adds	r3, r3, r4
 800413e:	9303      	str	r3, [sp, #12]
 8004140:	0033      	movs	r3, r6
 8004142:	3314      	adds	r3, #20
 8004144:	191c      	adds	r4, r3, r4
 8004146:	9301      	str	r3, [sp, #4]
 8004148:	6823      	ldr	r3, [r4, #0]
 800414a:	9304      	str	r3, [sp, #16]
 800414c:	9b03      	ldr	r3, [sp, #12]
 800414e:	9804      	ldr	r0, [sp, #16]
 8004150:	681d      	ldr	r5, [r3, #0]
 8004152:	3501      	adds	r5, #1
 8004154:	0029      	movs	r1, r5
 8004156:	f7fb fff3 	bl	8000140 <__udivsi3>
 800415a:	9b04      	ldr	r3, [sp, #16]
 800415c:	9000      	str	r0, [sp, #0]
 800415e:	42ab      	cmp	r3, r5
 8004160:	d32b      	bcc.n	80041ba <quorem+0x9a>
 8004162:	9b05      	ldr	r3, [sp, #20]
 8004164:	9d01      	ldr	r5, [sp, #4]
 8004166:	469c      	mov	ip, r3
 8004168:	2300      	movs	r3, #0
 800416a:	9305      	str	r3, [sp, #20]
 800416c:	9304      	str	r3, [sp, #16]
 800416e:	4662      	mov	r2, ip
 8004170:	ca08      	ldmia	r2!, {r3}
 8004172:	6828      	ldr	r0, [r5, #0]
 8004174:	4694      	mov	ip, r2
 8004176:	9a00      	ldr	r2, [sp, #0]
 8004178:	b299      	uxth	r1, r3
 800417a:	4351      	muls	r1, r2
 800417c:	9a05      	ldr	r2, [sp, #20]
 800417e:	0c1b      	lsrs	r3, r3, #16
 8004180:	1889      	adds	r1, r1, r2
 8004182:	9a00      	ldr	r2, [sp, #0]
 8004184:	4353      	muls	r3, r2
 8004186:	0c0a      	lsrs	r2, r1, #16
 8004188:	189b      	adds	r3, r3, r2
 800418a:	0c1a      	lsrs	r2, r3, #16
 800418c:	b289      	uxth	r1, r1
 800418e:	9205      	str	r2, [sp, #20]
 8004190:	b282      	uxth	r2, r0
 8004192:	1a52      	subs	r2, r2, r1
 8004194:	9904      	ldr	r1, [sp, #16]
 8004196:	0c00      	lsrs	r0, r0, #16
 8004198:	1852      	adds	r2, r2, r1
 800419a:	b29b      	uxth	r3, r3
 800419c:	1411      	asrs	r1, r2, #16
 800419e:	1ac3      	subs	r3, r0, r3
 80041a0:	185b      	adds	r3, r3, r1
 80041a2:	1419      	asrs	r1, r3, #16
 80041a4:	b292      	uxth	r2, r2
 80041a6:	041b      	lsls	r3, r3, #16
 80041a8:	431a      	orrs	r2, r3
 80041aa:	9b03      	ldr	r3, [sp, #12]
 80041ac:	9104      	str	r1, [sp, #16]
 80041ae:	c504      	stmia	r5!, {r2}
 80041b0:	4563      	cmp	r3, ip
 80041b2:	d2dc      	bcs.n	800416e <quorem+0x4e>
 80041b4:	6823      	ldr	r3, [r4, #0]
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d030      	beq.n	800421c <quorem+0xfc>
 80041ba:	0030      	movs	r0, r6
 80041bc:	9902      	ldr	r1, [sp, #8]
 80041be:	f001 f9c5 	bl	800554c <__mcmp>
 80041c2:	2800      	cmp	r0, #0
 80041c4:	db23      	blt.n	800420e <quorem+0xee>
 80041c6:	0034      	movs	r4, r6
 80041c8:	2500      	movs	r5, #0
 80041ca:	9902      	ldr	r1, [sp, #8]
 80041cc:	3414      	adds	r4, #20
 80041ce:	3114      	adds	r1, #20
 80041d0:	6823      	ldr	r3, [r4, #0]
 80041d2:	c901      	ldmia	r1!, {r0}
 80041d4:	9302      	str	r3, [sp, #8]
 80041d6:	466b      	mov	r3, sp
 80041d8:	891b      	ldrh	r3, [r3, #8]
 80041da:	b282      	uxth	r2, r0
 80041dc:	1a9a      	subs	r2, r3, r2
 80041de:	9b02      	ldr	r3, [sp, #8]
 80041e0:	1952      	adds	r2, r2, r5
 80041e2:	0c00      	lsrs	r0, r0, #16
 80041e4:	0c1b      	lsrs	r3, r3, #16
 80041e6:	1a1b      	subs	r3, r3, r0
 80041e8:	1410      	asrs	r0, r2, #16
 80041ea:	181b      	adds	r3, r3, r0
 80041ec:	141d      	asrs	r5, r3, #16
 80041ee:	b292      	uxth	r2, r2
 80041f0:	041b      	lsls	r3, r3, #16
 80041f2:	431a      	orrs	r2, r3
 80041f4:	9b03      	ldr	r3, [sp, #12]
 80041f6:	c404      	stmia	r4!, {r2}
 80041f8:	428b      	cmp	r3, r1
 80041fa:	d2e9      	bcs.n	80041d0 <quorem+0xb0>
 80041fc:	9a01      	ldr	r2, [sp, #4]
 80041fe:	00bb      	lsls	r3, r7, #2
 8004200:	18d3      	adds	r3, r2, r3
 8004202:	681a      	ldr	r2, [r3, #0]
 8004204:	2a00      	cmp	r2, #0
 8004206:	d013      	beq.n	8004230 <quorem+0x110>
 8004208:	9b00      	ldr	r3, [sp, #0]
 800420a:	3301      	adds	r3, #1
 800420c:	9300      	str	r3, [sp, #0]
 800420e:	9800      	ldr	r0, [sp, #0]
 8004210:	b007      	add	sp, #28
 8004212:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004214:	6823      	ldr	r3, [r4, #0]
 8004216:	2b00      	cmp	r3, #0
 8004218:	d104      	bne.n	8004224 <quorem+0x104>
 800421a:	3f01      	subs	r7, #1
 800421c:	9b01      	ldr	r3, [sp, #4]
 800421e:	3c04      	subs	r4, #4
 8004220:	42a3      	cmp	r3, r4
 8004222:	d3f7      	bcc.n	8004214 <quorem+0xf4>
 8004224:	6137      	str	r7, [r6, #16]
 8004226:	e7c8      	b.n	80041ba <quorem+0x9a>
 8004228:	681a      	ldr	r2, [r3, #0]
 800422a:	2a00      	cmp	r2, #0
 800422c:	d104      	bne.n	8004238 <quorem+0x118>
 800422e:	3f01      	subs	r7, #1
 8004230:	9a01      	ldr	r2, [sp, #4]
 8004232:	3b04      	subs	r3, #4
 8004234:	429a      	cmp	r2, r3
 8004236:	d3f7      	bcc.n	8004228 <quorem+0x108>
 8004238:	6137      	str	r7, [r6, #16]
 800423a:	e7e5      	b.n	8004208 <quorem+0xe8>

0800423c <_dtoa_r>:
 800423c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800423e:	0014      	movs	r4, r2
 8004240:	001d      	movs	r5, r3
 8004242:	69c6      	ldr	r6, [r0, #28]
 8004244:	b09d      	sub	sp, #116	@ 0x74
 8004246:	940a      	str	r4, [sp, #40]	@ 0x28
 8004248:	950b      	str	r5, [sp, #44]	@ 0x2c
 800424a:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 800424c:	9003      	str	r0, [sp, #12]
 800424e:	2e00      	cmp	r6, #0
 8004250:	d10f      	bne.n	8004272 <_dtoa_r+0x36>
 8004252:	2010      	movs	r0, #16
 8004254:	f000 fe30 	bl	8004eb8 <malloc>
 8004258:	9b03      	ldr	r3, [sp, #12]
 800425a:	1e02      	subs	r2, r0, #0
 800425c:	61d8      	str	r0, [r3, #28]
 800425e:	d104      	bne.n	800426a <_dtoa_r+0x2e>
 8004260:	21ef      	movs	r1, #239	@ 0xef
 8004262:	4bc7      	ldr	r3, [pc, #796]	@ (8004580 <_dtoa_r+0x344>)
 8004264:	48c7      	ldr	r0, [pc, #796]	@ (8004584 <_dtoa_r+0x348>)
 8004266:	f001 fb55 	bl	8005914 <__assert_func>
 800426a:	6046      	str	r6, [r0, #4]
 800426c:	6086      	str	r6, [r0, #8]
 800426e:	6006      	str	r6, [r0, #0]
 8004270:	60c6      	str	r6, [r0, #12]
 8004272:	9b03      	ldr	r3, [sp, #12]
 8004274:	69db      	ldr	r3, [r3, #28]
 8004276:	6819      	ldr	r1, [r3, #0]
 8004278:	2900      	cmp	r1, #0
 800427a:	d00b      	beq.n	8004294 <_dtoa_r+0x58>
 800427c:	685a      	ldr	r2, [r3, #4]
 800427e:	2301      	movs	r3, #1
 8004280:	4093      	lsls	r3, r2
 8004282:	604a      	str	r2, [r1, #4]
 8004284:	608b      	str	r3, [r1, #8]
 8004286:	9803      	ldr	r0, [sp, #12]
 8004288:	f000 ff16 	bl	80050b8 <_Bfree>
 800428c:	2200      	movs	r2, #0
 800428e:	9b03      	ldr	r3, [sp, #12]
 8004290:	69db      	ldr	r3, [r3, #28]
 8004292:	601a      	str	r2, [r3, #0]
 8004294:	2d00      	cmp	r5, #0
 8004296:	da1e      	bge.n	80042d6 <_dtoa_r+0x9a>
 8004298:	2301      	movs	r3, #1
 800429a:	603b      	str	r3, [r7, #0]
 800429c:	006b      	lsls	r3, r5, #1
 800429e:	085b      	lsrs	r3, r3, #1
 80042a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80042a2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80042a4:	4bb8      	ldr	r3, [pc, #736]	@ (8004588 <_dtoa_r+0x34c>)
 80042a6:	4ab8      	ldr	r2, [pc, #736]	@ (8004588 <_dtoa_r+0x34c>)
 80042a8:	403b      	ands	r3, r7
 80042aa:	4293      	cmp	r3, r2
 80042ac:	d116      	bne.n	80042dc <_dtoa_r+0xa0>
 80042ae:	4bb7      	ldr	r3, [pc, #732]	@ (800458c <_dtoa_r+0x350>)
 80042b0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80042b2:	6013      	str	r3, [r2, #0]
 80042b4:	033b      	lsls	r3, r7, #12
 80042b6:	0b1b      	lsrs	r3, r3, #12
 80042b8:	4323      	orrs	r3, r4
 80042ba:	d101      	bne.n	80042c0 <_dtoa_r+0x84>
 80042bc:	f000 fd83 	bl	8004dc6 <_dtoa_r+0xb8a>
 80042c0:	4bb3      	ldr	r3, [pc, #716]	@ (8004590 <_dtoa_r+0x354>)
 80042c2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80042c4:	9308      	str	r3, [sp, #32]
 80042c6:	2a00      	cmp	r2, #0
 80042c8:	d002      	beq.n	80042d0 <_dtoa_r+0x94>
 80042ca:	4bb2      	ldr	r3, [pc, #712]	@ (8004594 <_dtoa_r+0x358>)
 80042cc:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80042ce:	6013      	str	r3, [r2, #0]
 80042d0:	9808      	ldr	r0, [sp, #32]
 80042d2:	b01d      	add	sp, #116	@ 0x74
 80042d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042d6:	2300      	movs	r3, #0
 80042d8:	603b      	str	r3, [r7, #0]
 80042da:	e7e2      	b.n	80042a2 <_dtoa_r+0x66>
 80042dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80042de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80042e0:	9212      	str	r2, [sp, #72]	@ 0x48
 80042e2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80042e4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80042e6:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80042e8:	2200      	movs	r2, #0
 80042ea:	2300      	movs	r3, #0
 80042ec:	f7fc f8ae 	bl	800044c <__aeabi_dcmpeq>
 80042f0:	1e06      	subs	r6, r0, #0
 80042f2:	d00b      	beq.n	800430c <_dtoa_r+0xd0>
 80042f4:	2301      	movs	r3, #1
 80042f6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80042f8:	6013      	str	r3, [r2, #0]
 80042fa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d002      	beq.n	8004306 <_dtoa_r+0xca>
 8004300:	4ba5      	ldr	r3, [pc, #660]	@ (8004598 <_dtoa_r+0x35c>)
 8004302:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8004304:	6013      	str	r3, [r2, #0]
 8004306:	4ba5      	ldr	r3, [pc, #660]	@ (800459c <_dtoa_r+0x360>)
 8004308:	9308      	str	r3, [sp, #32]
 800430a:	e7e1      	b.n	80042d0 <_dtoa_r+0x94>
 800430c:	ab1a      	add	r3, sp, #104	@ 0x68
 800430e:	9301      	str	r3, [sp, #4]
 8004310:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004312:	9300      	str	r3, [sp, #0]
 8004314:	9803      	ldr	r0, [sp, #12]
 8004316:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004318:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800431a:	f001 f9cd 	bl	80056b8 <__d2b>
 800431e:	007a      	lsls	r2, r7, #1
 8004320:	9005      	str	r0, [sp, #20]
 8004322:	0d52      	lsrs	r2, r2, #21
 8004324:	d100      	bne.n	8004328 <_dtoa_r+0xec>
 8004326:	e07b      	b.n	8004420 <_dtoa_r+0x1e4>
 8004328:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800432a:	9618      	str	r6, [sp, #96]	@ 0x60
 800432c:	0319      	lsls	r1, r3, #12
 800432e:	4b9c      	ldr	r3, [pc, #624]	@ (80045a0 <_dtoa_r+0x364>)
 8004330:	0b09      	lsrs	r1, r1, #12
 8004332:	430b      	orrs	r3, r1
 8004334:	499b      	ldr	r1, [pc, #620]	@ (80045a4 <_dtoa_r+0x368>)
 8004336:	1857      	adds	r7, r2, r1
 8004338:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800433a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800433c:	0019      	movs	r1, r3
 800433e:	2200      	movs	r2, #0
 8004340:	4b99      	ldr	r3, [pc, #612]	@ (80045a8 <_dtoa_r+0x36c>)
 8004342:	f7fd fb21 	bl	8001988 <__aeabi_dsub>
 8004346:	4a99      	ldr	r2, [pc, #612]	@ (80045ac <_dtoa_r+0x370>)
 8004348:	4b99      	ldr	r3, [pc, #612]	@ (80045b0 <_dtoa_r+0x374>)
 800434a:	f7fd f855 	bl	80013f8 <__aeabi_dmul>
 800434e:	4a99      	ldr	r2, [pc, #612]	@ (80045b4 <_dtoa_r+0x378>)
 8004350:	4b99      	ldr	r3, [pc, #612]	@ (80045b8 <_dtoa_r+0x37c>)
 8004352:	f7fc f8a9 	bl	80004a8 <__aeabi_dadd>
 8004356:	0004      	movs	r4, r0
 8004358:	0038      	movs	r0, r7
 800435a:	000d      	movs	r5, r1
 800435c:	f7fd ff0e 	bl	800217c <__aeabi_i2d>
 8004360:	4a96      	ldr	r2, [pc, #600]	@ (80045bc <_dtoa_r+0x380>)
 8004362:	4b97      	ldr	r3, [pc, #604]	@ (80045c0 <_dtoa_r+0x384>)
 8004364:	f7fd f848 	bl	80013f8 <__aeabi_dmul>
 8004368:	0002      	movs	r2, r0
 800436a:	000b      	movs	r3, r1
 800436c:	0020      	movs	r0, r4
 800436e:	0029      	movs	r1, r5
 8004370:	f7fc f89a 	bl	80004a8 <__aeabi_dadd>
 8004374:	0004      	movs	r4, r0
 8004376:	000d      	movs	r5, r1
 8004378:	f7fd fec4 	bl	8002104 <__aeabi_d2iz>
 800437c:	2200      	movs	r2, #0
 800437e:	9004      	str	r0, [sp, #16]
 8004380:	2300      	movs	r3, #0
 8004382:	0020      	movs	r0, r4
 8004384:	0029      	movs	r1, r5
 8004386:	f7fc f867 	bl	8000458 <__aeabi_dcmplt>
 800438a:	2800      	cmp	r0, #0
 800438c:	d00b      	beq.n	80043a6 <_dtoa_r+0x16a>
 800438e:	9804      	ldr	r0, [sp, #16]
 8004390:	f7fd fef4 	bl	800217c <__aeabi_i2d>
 8004394:	002b      	movs	r3, r5
 8004396:	0022      	movs	r2, r4
 8004398:	f7fc f858 	bl	800044c <__aeabi_dcmpeq>
 800439c:	4243      	negs	r3, r0
 800439e:	4158      	adcs	r0, r3
 80043a0:	9b04      	ldr	r3, [sp, #16]
 80043a2:	1a1b      	subs	r3, r3, r0
 80043a4:	9304      	str	r3, [sp, #16]
 80043a6:	2301      	movs	r3, #1
 80043a8:	9315      	str	r3, [sp, #84]	@ 0x54
 80043aa:	9b04      	ldr	r3, [sp, #16]
 80043ac:	2b16      	cmp	r3, #22
 80043ae:	d810      	bhi.n	80043d2 <_dtoa_r+0x196>
 80043b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80043b2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80043b4:	9a04      	ldr	r2, [sp, #16]
 80043b6:	4b83      	ldr	r3, [pc, #524]	@ (80045c4 <_dtoa_r+0x388>)
 80043b8:	00d2      	lsls	r2, r2, #3
 80043ba:	189b      	adds	r3, r3, r2
 80043bc:	681a      	ldr	r2, [r3, #0]
 80043be:	685b      	ldr	r3, [r3, #4]
 80043c0:	f7fc f84a 	bl	8000458 <__aeabi_dcmplt>
 80043c4:	2800      	cmp	r0, #0
 80043c6:	d047      	beq.n	8004458 <_dtoa_r+0x21c>
 80043c8:	9b04      	ldr	r3, [sp, #16]
 80043ca:	3b01      	subs	r3, #1
 80043cc:	9304      	str	r3, [sp, #16]
 80043ce:	2300      	movs	r3, #0
 80043d0:	9315      	str	r3, [sp, #84]	@ 0x54
 80043d2:	2200      	movs	r2, #0
 80043d4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80043d6:	9206      	str	r2, [sp, #24]
 80043d8:	1bdb      	subs	r3, r3, r7
 80043da:	1e5a      	subs	r2, r3, #1
 80043dc:	d53e      	bpl.n	800445c <_dtoa_r+0x220>
 80043de:	2201      	movs	r2, #1
 80043e0:	1ad3      	subs	r3, r2, r3
 80043e2:	9306      	str	r3, [sp, #24]
 80043e4:	2300      	movs	r3, #0
 80043e6:	930d      	str	r3, [sp, #52]	@ 0x34
 80043e8:	9b04      	ldr	r3, [sp, #16]
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	db38      	blt.n	8004460 <_dtoa_r+0x224>
 80043ee:	9a04      	ldr	r2, [sp, #16]
 80043f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80043f2:	4694      	mov	ip, r2
 80043f4:	4463      	add	r3, ip
 80043f6:	930d      	str	r3, [sp, #52]	@ 0x34
 80043f8:	2300      	movs	r3, #0
 80043fa:	9214      	str	r2, [sp, #80]	@ 0x50
 80043fc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80043fe:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004400:	2401      	movs	r4, #1
 8004402:	2b09      	cmp	r3, #9
 8004404:	d867      	bhi.n	80044d6 <_dtoa_r+0x29a>
 8004406:	2b05      	cmp	r3, #5
 8004408:	dd02      	ble.n	8004410 <_dtoa_r+0x1d4>
 800440a:	2400      	movs	r4, #0
 800440c:	3b04      	subs	r3, #4
 800440e:	9322      	str	r3, [sp, #136]	@ 0x88
 8004410:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004412:	1e98      	subs	r0, r3, #2
 8004414:	2803      	cmp	r0, #3
 8004416:	d867      	bhi.n	80044e8 <_dtoa_r+0x2ac>
 8004418:	f7fb fe7e 	bl	8000118 <__gnu_thumb1_case_uqi>
 800441c:	5b383a2b 	.word	0x5b383a2b
 8004420:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8004422:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8004424:	18f6      	adds	r6, r6, r3
 8004426:	4b68      	ldr	r3, [pc, #416]	@ (80045c8 <_dtoa_r+0x38c>)
 8004428:	18f2      	adds	r2, r6, r3
 800442a:	2a20      	cmp	r2, #32
 800442c:	dd0f      	ble.n	800444e <_dtoa_r+0x212>
 800442e:	2340      	movs	r3, #64	@ 0x40
 8004430:	1a9b      	subs	r3, r3, r2
 8004432:	409f      	lsls	r7, r3
 8004434:	4b65      	ldr	r3, [pc, #404]	@ (80045cc <_dtoa_r+0x390>)
 8004436:	0038      	movs	r0, r7
 8004438:	18f3      	adds	r3, r6, r3
 800443a:	40dc      	lsrs	r4, r3
 800443c:	4320      	orrs	r0, r4
 800443e:	f7fd fecb 	bl	80021d8 <__aeabi_ui2d>
 8004442:	2201      	movs	r2, #1
 8004444:	4b62      	ldr	r3, [pc, #392]	@ (80045d0 <_dtoa_r+0x394>)
 8004446:	1e77      	subs	r7, r6, #1
 8004448:	18cb      	adds	r3, r1, r3
 800444a:	9218      	str	r2, [sp, #96]	@ 0x60
 800444c:	e776      	b.n	800433c <_dtoa_r+0x100>
 800444e:	2320      	movs	r3, #32
 8004450:	0020      	movs	r0, r4
 8004452:	1a9b      	subs	r3, r3, r2
 8004454:	4098      	lsls	r0, r3
 8004456:	e7f2      	b.n	800443e <_dtoa_r+0x202>
 8004458:	9015      	str	r0, [sp, #84]	@ 0x54
 800445a:	e7ba      	b.n	80043d2 <_dtoa_r+0x196>
 800445c:	920d      	str	r2, [sp, #52]	@ 0x34
 800445e:	e7c3      	b.n	80043e8 <_dtoa_r+0x1ac>
 8004460:	9b06      	ldr	r3, [sp, #24]
 8004462:	9a04      	ldr	r2, [sp, #16]
 8004464:	1a9b      	subs	r3, r3, r2
 8004466:	9306      	str	r3, [sp, #24]
 8004468:	4253      	negs	r3, r2
 800446a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800446c:	2300      	movs	r3, #0
 800446e:	9314      	str	r3, [sp, #80]	@ 0x50
 8004470:	e7c5      	b.n	80043fe <_dtoa_r+0x1c2>
 8004472:	2300      	movs	r3, #0
 8004474:	9310      	str	r3, [sp, #64]	@ 0x40
 8004476:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8004478:	930e      	str	r3, [sp, #56]	@ 0x38
 800447a:	9309      	str	r3, [sp, #36]	@ 0x24
 800447c:	2b00      	cmp	r3, #0
 800447e:	dc13      	bgt.n	80044a8 <_dtoa_r+0x26c>
 8004480:	2301      	movs	r3, #1
 8004482:	001a      	movs	r2, r3
 8004484:	930e      	str	r3, [sp, #56]	@ 0x38
 8004486:	9309      	str	r3, [sp, #36]	@ 0x24
 8004488:	9223      	str	r2, [sp, #140]	@ 0x8c
 800448a:	e00d      	b.n	80044a8 <_dtoa_r+0x26c>
 800448c:	2301      	movs	r3, #1
 800448e:	e7f1      	b.n	8004474 <_dtoa_r+0x238>
 8004490:	2300      	movs	r3, #0
 8004492:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8004494:	9310      	str	r3, [sp, #64]	@ 0x40
 8004496:	4694      	mov	ip, r2
 8004498:	9b04      	ldr	r3, [sp, #16]
 800449a:	4463      	add	r3, ip
 800449c:	930e      	str	r3, [sp, #56]	@ 0x38
 800449e:	3301      	adds	r3, #1
 80044a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	dc00      	bgt.n	80044a8 <_dtoa_r+0x26c>
 80044a6:	2301      	movs	r3, #1
 80044a8:	9a03      	ldr	r2, [sp, #12]
 80044aa:	2100      	movs	r1, #0
 80044ac:	69d0      	ldr	r0, [r2, #28]
 80044ae:	2204      	movs	r2, #4
 80044b0:	0015      	movs	r5, r2
 80044b2:	3514      	adds	r5, #20
 80044b4:	429d      	cmp	r5, r3
 80044b6:	d91b      	bls.n	80044f0 <_dtoa_r+0x2b4>
 80044b8:	6041      	str	r1, [r0, #4]
 80044ba:	9803      	ldr	r0, [sp, #12]
 80044bc:	f000 fdb8 	bl	8005030 <_Balloc>
 80044c0:	9008      	str	r0, [sp, #32]
 80044c2:	2800      	cmp	r0, #0
 80044c4:	d117      	bne.n	80044f6 <_dtoa_r+0x2ba>
 80044c6:	21b0      	movs	r1, #176	@ 0xb0
 80044c8:	4b42      	ldr	r3, [pc, #264]	@ (80045d4 <_dtoa_r+0x398>)
 80044ca:	482e      	ldr	r0, [pc, #184]	@ (8004584 <_dtoa_r+0x348>)
 80044cc:	9a08      	ldr	r2, [sp, #32]
 80044ce:	31ff      	adds	r1, #255	@ 0xff
 80044d0:	e6c9      	b.n	8004266 <_dtoa_r+0x2a>
 80044d2:	2301      	movs	r3, #1
 80044d4:	e7dd      	b.n	8004492 <_dtoa_r+0x256>
 80044d6:	2300      	movs	r3, #0
 80044d8:	9410      	str	r4, [sp, #64]	@ 0x40
 80044da:	9322      	str	r3, [sp, #136]	@ 0x88
 80044dc:	3b01      	subs	r3, #1
 80044de:	930e      	str	r3, [sp, #56]	@ 0x38
 80044e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80044e2:	2200      	movs	r2, #0
 80044e4:	3313      	adds	r3, #19
 80044e6:	e7cf      	b.n	8004488 <_dtoa_r+0x24c>
 80044e8:	2301      	movs	r3, #1
 80044ea:	9310      	str	r3, [sp, #64]	@ 0x40
 80044ec:	3b02      	subs	r3, #2
 80044ee:	e7f6      	b.n	80044de <_dtoa_r+0x2a2>
 80044f0:	3101      	adds	r1, #1
 80044f2:	0052      	lsls	r2, r2, #1
 80044f4:	e7dc      	b.n	80044b0 <_dtoa_r+0x274>
 80044f6:	9b03      	ldr	r3, [sp, #12]
 80044f8:	9a08      	ldr	r2, [sp, #32]
 80044fa:	69db      	ldr	r3, [r3, #28]
 80044fc:	601a      	str	r2, [r3, #0]
 80044fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004500:	2b0e      	cmp	r3, #14
 8004502:	d900      	bls.n	8004506 <_dtoa_r+0x2ca>
 8004504:	e0d9      	b.n	80046ba <_dtoa_r+0x47e>
 8004506:	2c00      	cmp	r4, #0
 8004508:	d100      	bne.n	800450c <_dtoa_r+0x2d0>
 800450a:	e0d6      	b.n	80046ba <_dtoa_r+0x47e>
 800450c:	9b04      	ldr	r3, [sp, #16]
 800450e:	2b00      	cmp	r3, #0
 8004510:	dd64      	ble.n	80045dc <_dtoa_r+0x3a0>
 8004512:	210f      	movs	r1, #15
 8004514:	9a04      	ldr	r2, [sp, #16]
 8004516:	4b2b      	ldr	r3, [pc, #172]	@ (80045c4 <_dtoa_r+0x388>)
 8004518:	400a      	ands	r2, r1
 800451a:	00d2      	lsls	r2, r2, #3
 800451c:	189b      	adds	r3, r3, r2
 800451e:	681e      	ldr	r6, [r3, #0]
 8004520:	685f      	ldr	r7, [r3, #4]
 8004522:	9b04      	ldr	r3, [sp, #16]
 8004524:	2402      	movs	r4, #2
 8004526:	111d      	asrs	r5, r3, #4
 8004528:	05db      	lsls	r3, r3, #23
 800452a:	d50a      	bpl.n	8004542 <_dtoa_r+0x306>
 800452c:	4b2a      	ldr	r3, [pc, #168]	@ (80045d8 <_dtoa_r+0x39c>)
 800452e:	400d      	ands	r5, r1
 8004530:	6a1a      	ldr	r2, [r3, #32]
 8004532:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004534:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004536:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004538:	f7fc fb1a 	bl	8000b70 <__aeabi_ddiv>
 800453c:	900a      	str	r0, [sp, #40]	@ 0x28
 800453e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004540:	3401      	adds	r4, #1
 8004542:	4b25      	ldr	r3, [pc, #148]	@ (80045d8 <_dtoa_r+0x39c>)
 8004544:	930c      	str	r3, [sp, #48]	@ 0x30
 8004546:	2d00      	cmp	r5, #0
 8004548:	d108      	bne.n	800455c <_dtoa_r+0x320>
 800454a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800454c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800454e:	0032      	movs	r2, r6
 8004550:	003b      	movs	r3, r7
 8004552:	f7fc fb0d 	bl	8000b70 <__aeabi_ddiv>
 8004556:	900a      	str	r0, [sp, #40]	@ 0x28
 8004558:	910b      	str	r1, [sp, #44]	@ 0x2c
 800455a:	e05a      	b.n	8004612 <_dtoa_r+0x3d6>
 800455c:	2301      	movs	r3, #1
 800455e:	421d      	tst	r5, r3
 8004560:	d009      	beq.n	8004576 <_dtoa_r+0x33a>
 8004562:	18e4      	adds	r4, r4, r3
 8004564:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004566:	0030      	movs	r0, r6
 8004568:	681a      	ldr	r2, [r3, #0]
 800456a:	685b      	ldr	r3, [r3, #4]
 800456c:	0039      	movs	r1, r7
 800456e:	f7fc ff43 	bl	80013f8 <__aeabi_dmul>
 8004572:	0006      	movs	r6, r0
 8004574:	000f      	movs	r7, r1
 8004576:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004578:	106d      	asrs	r5, r5, #1
 800457a:	3308      	adds	r3, #8
 800457c:	e7e2      	b.n	8004544 <_dtoa_r+0x308>
 800457e:	46c0      	nop			@ (mov r8, r8)
 8004580:	08006091 	.word	0x08006091
 8004584:	080060a8 	.word	0x080060a8
 8004588:	7ff00000 	.word	0x7ff00000
 800458c:	0000270f 	.word	0x0000270f
 8004590:	0800608d 	.word	0x0800608d
 8004594:	08006090 	.word	0x08006090
 8004598:	08006061 	.word	0x08006061
 800459c:	08006060 	.word	0x08006060
 80045a0:	3ff00000 	.word	0x3ff00000
 80045a4:	fffffc01 	.word	0xfffffc01
 80045a8:	3ff80000 	.word	0x3ff80000
 80045ac:	636f4361 	.word	0x636f4361
 80045b0:	3fd287a7 	.word	0x3fd287a7
 80045b4:	8b60c8b3 	.word	0x8b60c8b3
 80045b8:	3fc68a28 	.word	0x3fc68a28
 80045bc:	509f79fb 	.word	0x509f79fb
 80045c0:	3fd34413 	.word	0x3fd34413
 80045c4:	080061a0 	.word	0x080061a0
 80045c8:	00000432 	.word	0x00000432
 80045cc:	00000412 	.word	0x00000412
 80045d0:	fe100000 	.word	0xfe100000
 80045d4:	08006100 	.word	0x08006100
 80045d8:	08006178 	.word	0x08006178
 80045dc:	9b04      	ldr	r3, [sp, #16]
 80045de:	2402      	movs	r4, #2
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	d016      	beq.n	8004612 <_dtoa_r+0x3d6>
 80045e4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80045e6:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80045e8:	220f      	movs	r2, #15
 80045ea:	425d      	negs	r5, r3
 80045ec:	402a      	ands	r2, r5
 80045ee:	4bd7      	ldr	r3, [pc, #860]	@ (800494c <_dtoa_r+0x710>)
 80045f0:	00d2      	lsls	r2, r2, #3
 80045f2:	189b      	adds	r3, r3, r2
 80045f4:	681a      	ldr	r2, [r3, #0]
 80045f6:	685b      	ldr	r3, [r3, #4]
 80045f8:	f7fc fefe 	bl	80013f8 <__aeabi_dmul>
 80045fc:	2701      	movs	r7, #1
 80045fe:	2300      	movs	r3, #0
 8004600:	900a      	str	r0, [sp, #40]	@ 0x28
 8004602:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004604:	4ed2      	ldr	r6, [pc, #840]	@ (8004950 <_dtoa_r+0x714>)
 8004606:	112d      	asrs	r5, r5, #4
 8004608:	2d00      	cmp	r5, #0
 800460a:	d000      	beq.n	800460e <_dtoa_r+0x3d2>
 800460c:	e0ba      	b.n	8004784 <_dtoa_r+0x548>
 800460e:	2b00      	cmp	r3, #0
 8004610:	d1a1      	bne.n	8004556 <_dtoa_r+0x31a>
 8004612:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8004614:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8004616:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004618:	2b00      	cmp	r3, #0
 800461a:	d100      	bne.n	800461e <_dtoa_r+0x3e2>
 800461c:	e0bd      	b.n	800479a <_dtoa_r+0x55e>
 800461e:	2200      	movs	r2, #0
 8004620:	0030      	movs	r0, r6
 8004622:	0039      	movs	r1, r7
 8004624:	4bcb      	ldr	r3, [pc, #812]	@ (8004954 <_dtoa_r+0x718>)
 8004626:	f7fb ff17 	bl	8000458 <__aeabi_dcmplt>
 800462a:	2800      	cmp	r0, #0
 800462c:	d100      	bne.n	8004630 <_dtoa_r+0x3f4>
 800462e:	e0b4      	b.n	800479a <_dtoa_r+0x55e>
 8004630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004632:	2b00      	cmp	r3, #0
 8004634:	d100      	bne.n	8004638 <_dtoa_r+0x3fc>
 8004636:	e0b0      	b.n	800479a <_dtoa_r+0x55e>
 8004638:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800463a:	2b00      	cmp	r3, #0
 800463c:	dd39      	ble.n	80046b2 <_dtoa_r+0x476>
 800463e:	9b04      	ldr	r3, [sp, #16]
 8004640:	2200      	movs	r2, #0
 8004642:	3b01      	subs	r3, #1
 8004644:	930c      	str	r3, [sp, #48]	@ 0x30
 8004646:	0030      	movs	r0, r6
 8004648:	4bc3      	ldr	r3, [pc, #780]	@ (8004958 <_dtoa_r+0x71c>)
 800464a:	0039      	movs	r1, r7
 800464c:	f7fc fed4 	bl	80013f8 <__aeabi_dmul>
 8004650:	900a      	str	r0, [sp, #40]	@ 0x28
 8004652:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004654:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004656:	3401      	adds	r4, #1
 8004658:	0020      	movs	r0, r4
 800465a:	9311      	str	r3, [sp, #68]	@ 0x44
 800465c:	f7fd fd8e 	bl	800217c <__aeabi_i2d>
 8004660:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004662:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004664:	f7fc fec8 	bl	80013f8 <__aeabi_dmul>
 8004668:	4bbc      	ldr	r3, [pc, #752]	@ (800495c <_dtoa_r+0x720>)
 800466a:	2200      	movs	r2, #0
 800466c:	f7fb ff1c 	bl	80004a8 <__aeabi_dadd>
 8004670:	4bbb      	ldr	r3, [pc, #748]	@ (8004960 <_dtoa_r+0x724>)
 8004672:	0006      	movs	r6, r0
 8004674:	18cf      	adds	r7, r1, r3
 8004676:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004678:	2b00      	cmp	r3, #0
 800467a:	d000      	beq.n	800467e <_dtoa_r+0x442>
 800467c:	e091      	b.n	80047a2 <_dtoa_r+0x566>
 800467e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004680:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004682:	2200      	movs	r2, #0
 8004684:	4bb7      	ldr	r3, [pc, #732]	@ (8004964 <_dtoa_r+0x728>)
 8004686:	f7fd f97f 	bl	8001988 <__aeabi_dsub>
 800468a:	0032      	movs	r2, r6
 800468c:	003b      	movs	r3, r7
 800468e:	0004      	movs	r4, r0
 8004690:	000d      	movs	r5, r1
 8004692:	f7fb fef5 	bl	8000480 <__aeabi_dcmpgt>
 8004696:	2800      	cmp	r0, #0
 8004698:	d000      	beq.n	800469c <_dtoa_r+0x460>
 800469a:	e29d      	b.n	8004bd8 <_dtoa_r+0x99c>
 800469c:	2180      	movs	r1, #128	@ 0x80
 800469e:	0609      	lsls	r1, r1, #24
 80046a0:	187b      	adds	r3, r7, r1
 80046a2:	0032      	movs	r2, r6
 80046a4:	0020      	movs	r0, r4
 80046a6:	0029      	movs	r1, r5
 80046a8:	f7fb fed6 	bl	8000458 <__aeabi_dcmplt>
 80046ac:	2800      	cmp	r0, #0
 80046ae:	d000      	beq.n	80046b2 <_dtoa_r+0x476>
 80046b0:	e130      	b.n	8004914 <_dtoa_r+0x6d8>
 80046b2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80046b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80046b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80046b8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80046ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80046bc:	2b00      	cmp	r3, #0
 80046be:	da00      	bge.n	80046c2 <_dtoa_r+0x486>
 80046c0:	e177      	b.n	80049b2 <_dtoa_r+0x776>
 80046c2:	9a04      	ldr	r2, [sp, #16]
 80046c4:	2a0e      	cmp	r2, #14
 80046c6:	dd00      	ble.n	80046ca <_dtoa_r+0x48e>
 80046c8:	e173      	b.n	80049b2 <_dtoa_r+0x776>
 80046ca:	4ba0      	ldr	r3, [pc, #640]	@ (800494c <_dtoa_r+0x710>)
 80046cc:	00d2      	lsls	r2, r2, #3
 80046ce:	189b      	adds	r3, r3, r2
 80046d0:	685c      	ldr	r4, [r3, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	9306      	str	r3, [sp, #24]
 80046d6:	9407      	str	r4, [sp, #28]
 80046d8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80046da:	2b00      	cmp	r3, #0
 80046dc:	da03      	bge.n	80046e6 <_dtoa_r+0x4aa>
 80046de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	dc00      	bgt.n	80046e6 <_dtoa_r+0x4aa>
 80046e4:	e106      	b.n	80048f4 <_dtoa_r+0x6b8>
 80046e6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80046e8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80046ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046ec:	9d08      	ldr	r5, [sp, #32]
 80046ee:	3b01      	subs	r3, #1
 80046f0:	195b      	adds	r3, r3, r5
 80046f2:	930a      	str	r3, [sp, #40]	@ 0x28
 80046f4:	9a06      	ldr	r2, [sp, #24]
 80046f6:	9b07      	ldr	r3, [sp, #28]
 80046f8:	0030      	movs	r0, r6
 80046fa:	0039      	movs	r1, r7
 80046fc:	f7fc fa38 	bl	8000b70 <__aeabi_ddiv>
 8004700:	f7fd fd00 	bl	8002104 <__aeabi_d2iz>
 8004704:	9009      	str	r0, [sp, #36]	@ 0x24
 8004706:	f7fd fd39 	bl	800217c <__aeabi_i2d>
 800470a:	9a06      	ldr	r2, [sp, #24]
 800470c:	9b07      	ldr	r3, [sp, #28]
 800470e:	f7fc fe73 	bl	80013f8 <__aeabi_dmul>
 8004712:	0002      	movs	r2, r0
 8004714:	000b      	movs	r3, r1
 8004716:	0030      	movs	r0, r6
 8004718:	0039      	movs	r1, r7
 800471a:	f7fd f935 	bl	8001988 <__aeabi_dsub>
 800471e:	002b      	movs	r3, r5
 8004720:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004722:	3501      	adds	r5, #1
 8004724:	3230      	adds	r2, #48	@ 0x30
 8004726:	701a      	strb	r2, [r3, #0]
 8004728:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800472a:	002c      	movs	r4, r5
 800472c:	429a      	cmp	r2, r3
 800472e:	d000      	beq.n	8004732 <_dtoa_r+0x4f6>
 8004730:	e131      	b.n	8004996 <_dtoa_r+0x75a>
 8004732:	0002      	movs	r2, r0
 8004734:	000b      	movs	r3, r1
 8004736:	f7fb feb7 	bl	80004a8 <__aeabi_dadd>
 800473a:	9a06      	ldr	r2, [sp, #24]
 800473c:	9b07      	ldr	r3, [sp, #28]
 800473e:	0006      	movs	r6, r0
 8004740:	000f      	movs	r7, r1
 8004742:	f7fb fe9d 	bl	8000480 <__aeabi_dcmpgt>
 8004746:	2800      	cmp	r0, #0
 8004748:	d000      	beq.n	800474c <_dtoa_r+0x510>
 800474a:	e10f      	b.n	800496c <_dtoa_r+0x730>
 800474c:	9a06      	ldr	r2, [sp, #24]
 800474e:	9b07      	ldr	r3, [sp, #28]
 8004750:	0030      	movs	r0, r6
 8004752:	0039      	movs	r1, r7
 8004754:	f7fb fe7a 	bl	800044c <__aeabi_dcmpeq>
 8004758:	2800      	cmp	r0, #0
 800475a:	d003      	beq.n	8004764 <_dtoa_r+0x528>
 800475c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800475e:	07dd      	lsls	r5, r3, #31
 8004760:	d500      	bpl.n	8004764 <_dtoa_r+0x528>
 8004762:	e103      	b.n	800496c <_dtoa_r+0x730>
 8004764:	9905      	ldr	r1, [sp, #20]
 8004766:	9803      	ldr	r0, [sp, #12]
 8004768:	f000 fca6 	bl	80050b8 <_Bfree>
 800476c:	2300      	movs	r3, #0
 800476e:	7023      	strb	r3, [r4, #0]
 8004770:	9b04      	ldr	r3, [sp, #16]
 8004772:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8004774:	3301      	adds	r3, #1
 8004776:	6013      	str	r3, [r2, #0]
 8004778:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 800477a:	2b00      	cmp	r3, #0
 800477c:	d100      	bne.n	8004780 <_dtoa_r+0x544>
 800477e:	e5a7      	b.n	80042d0 <_dtoa_r+0x94>
 8004780:	601c      	str	r4, [r3, #0]
 8004782:	e5a5      	b.n	80042d0 <_dtoa_r+0x94>
 8004784:	423d      	tst	r5, r7
 8004786:	d005      	beq.n	8004794 <_dtoa_r+0x558>
 8004788:	6832      	ldr	r2, [r6, #0]
 800478a:	6873      	ldr	r3, [r6, #4]
 800478c:	f7fc fe34 	bl	80013f8 <__aeabi_dmul>
 8004790:	003b      	movs	r3, r7
 8004792:	3401      	adds	r4, #1
 8004794:	106d      	asrs	r5, r5, #1
 8004796:	3608      	adds	r6, #8
 8004798:	e736      	b.n	8004608 <_dtoa_r+0x3cc>
 800479a:	9b04      	ldr	r3, [sp, #16]
 800479c:	930c      	str	r3, [sp, #48]	@ 0x30
 800479e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80047a0:	e75a      	b.n	8004658 <_dtoa_r+0x41c>
 80047a2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80047a4:	4b69      	ldr	r3, [pc, #420]	@ (800494c <_dtoa_r+0x710>)
 80047a6:	3a01      	subs	r2, #1
 80047a8:	00d2      	lsls	r2, r2, #3
 80047aa:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80047ac:	189b      	adds	r3, r3, r2
 80047ae:	681a      	ldr	r2, [r3, #0]
 80047b0:	685b      	ldr	r3, [r3, #4]
 80047b2:	2900      	cmp	r1, #0
 80047b4:	d04c      	beq.n	8004850 <_dtoa_r+0x614>
 80047b6:	2000      	movs	r0, #0
 80047b8:	496b      	ldr	r1, [pc, #428]	@ (8004968 <_dtoa_r+0x72c>)
 80047ba:	f7fc f9d9 	bl	8000b70 <__aeabi_ddiv>
 80047be:	0032      	movs	r2, r6
 80047c0:	003b      	movs	r3, r7
 80047c2:	f7fd f8e1 	bl	8001988 <__aeabi_dsub>
 80047c6:	9a08      	ldr	r2, [sp, #32]
 80047c8:	0006      	movs	r6, r0
 80047ca:	4694      	mov	ip, r2
 80047cc:	000f      	movs	r7, r1
 80047ce:	9b08      	ldr	r3, [sp, #32]
 80047d0:	9316      	str	r3, [sp, #88]	@ 0x58
 80047d2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80047d4:	4463      	add	r3, ip
 80047d6:	9311      	str	r3, [sp, #68]	@ 0x44
 80047d8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80047da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80047dc:	f7fd fc92 	bl	8002104 <__aeabi_d2iz>
 80047e0:	0005      	movs	r5, r0
 80047e2:	f7fd fccb 	bl	800217c <__aeabi_i2d>
 80047e6:	0002      	movs	r2, r0
 80047e8:	000b      	movs	r3, r1
 80047ea:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80047ec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80047ee:	f7fd f8cb 	bl	8001988 <__aeabi_dsub>
 80047f2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80047f4:	3530      	adds	r5, #48	@ 0x30
 80047f6:	1c5c      	adds	r4, r3, #1
 80047f8:	701d      	strb	r5, [r3, #0]
 80047fa:	0032      	movs	r2, r6
 80047fc:	003b      	movs	r3, r7
 80047fe:	900a      	str	r0, [sp, #40]	@ 0x28
 8004800:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004802:	f7fb fe29 	bl	8000458 <__aeabi_dcmplt>
 8004806:	2800      	cmp	r0, #0
 8004808:	d16a      	bne.n	80048e0 <_dtoa_r+0x6a4>
 800480a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800480c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800480e:	2000      	movs	r0, #0
 8004810:	4950      	ldr	r1, [pc, #320]	@ (8004954 <_dtoa_r+0x718>)
 8004812:	f7fd f8b9 	bl	8001988 <__aeabi_dsub>
 8004816:	0032      	movs	r2, r6
 8004818:	003b      	movs	r3, r7
 800481a:	f7fb fe1d 	bl	8000458 <__aeabi_dcmplt>
 800481e:	2800      	cmp	r0, #0
 8004820:	d000      	beq.n	8004824 <_dtoa_r+0x5e8>
 8004822:	e0a5      	b.n	8004970 <_dtoa_r+0x734>
 8004824:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004826:	42a3      	cmp	r3, r4
 8004828:	d100      	bne.n	800482c <_dtoa_r+0x5f0>
 800482a:	e742      	b.n	80046b2 <_dtoa_r+0x476>
 800482c:	2200      	movs	r2, #0
 800482e:	0030      	movs	r0, r6
 8004830:	0039      	movs	r1, r7
 8004832:	4b49      	ldr	r3, [pc, #292]	@ (8004958 <_dtoa_r+0x71c>)
 8004834:	f7fc fde0 	bl	80013f8 <__aeabi_dmul>
 8004838:	2200      	movs	r2, #0
 800483a:	0006      	movs	r6, r0
 800483c:	000f      	movs	r7, r1
 800483e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004840:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004842:	4b45      	ldr	r3, [pc, #276]	@ (8004958 <_dtoa_r+0x71c>)
 8004844:	f7fc fdd8 	bl	80013f8 <__aeabi_dmul>
 8004848:	9416      	str	r4, [sp, #88]	@ 0x58
 800484a:	900a      	str	r0, [sp, #40]	@ 0x28
 800484c:	910b      	str	r1, [sp, #44]	@ 0x2c
 800484e:	e7c3      	b.n	80047d8 <_dtoa_r+0x59c>
 8004850:	0030      	movs	r0, r6
 8004852:	0039      	movs	r1, r7
 8004854:	f7fc fdd0 	bl	80013f8 <__aeabi_dmul>
 8004858:	9d08      	ldr	r5, [sp, #32]
 800485a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800485c:	002b      	movs	r3, r5
 800485e:	4694      	mov	ip, r2
 8004860:	9016      	str	r0, [sp, #88]	@ 0x58
 8004862:	9117      	str	r1, [sp, #92]	@ 0x5c
 8004864:	4463      	add	r3, ip
 8004866:	9319      	str	r3, [sp, #100]	@ 0x64
 8004868:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800486a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800486c:	f7fd fc4a 	bl	8002104 <__aeabi_d2iz>
 8004870:	0004      	movs	r4, r0
 8004872:	f7fd fc83 	bl	800217c <__aeabi_i2d>
 8004876:	000b      	movs	r3, r1
 8004878:	0002      	movs	r2, r0
 800487a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800487c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800487e:	f7fd f883 	bl	8001988 <__aeabi_dsub>
 8004882:	3430      	adds	r4, #48	@ 0x30
 8004884:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004886:	702c      	strb	r4, [r5, #0]
 8004888:	3501      	adds	r5, #1
 800488a:	0006      	movs	r6, r0
 800488c:	000f      	movs	r7, r1
 800488e:	42ab      	cmp	r3, r5
 8004890:	d129      	bne.n	80048e6 <_dtoa_r+0x6aa>
 8004892:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8004894:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8004896:	9b08      	ldr	r3, [sp, #32]
 8004898:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800489a:	469c      	mov	ip, r3
 800489c:	2200      	movs	r2, #0
 800489e:	4b32      	ldr	r3, [pc, #200]	@ (8004968 <_dtoa_r+0x72c>)
 80048a0:	4464      	add	r4, ip
 80048a2:	f7fb fe01 	bl	80004a8 <__aeabi_dadd>
 80048a6:	0002      	movs	r2, r0
 80048a8:	000b      	movs	r3, r1
 80048aa:	0030      	movs	r0, r6
 80048ac:	0039      	movs	r1, r7
 80048ae:	f7fb fde7 	bl	8000480 <__aeabi_dcmpgt>
 80048b2:	2800      	cmp	r0, #0
 80048b4:	d15c      	bne.n	8004970 <_dtoa_r+0x734>
 80048b6:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80048b8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80048ba:	2000      	movs	r0, #0
 80048bc:	492a      	ldr	r1, [pc, #168]	@ (8004968 <_dtoa_r+0x72c>)
 80048be:	f7fd f863 	bl	8001988 <__aeabi_dsub>
 80048c2:	0002      	movs	r2, r0
 80048c4:	000b      	movs	r3, r1
 80048c6:	0030      	movs	r0, r6
 80048c8:	0039      	movs	r1, r7
 80048ca:	f7fb fdc5 	bl	8000458 <__aeabi_dcmplt>
 80048ce:	2800      	cmp	r0, #0
 80048d0:	d100      	bne.n	80048d4 <_dtoa_r+0x698>
 80048d2:	e6ee      	b.n	80046b2 <_dtoa_r+0x476>
 80048d4:	0023      	movs	r3, r4
 80048d6:	3c01      	subs	r4, #1
 80048d8:	7822      	ldrb	r2, [r4, #0]
 80048da:	2a30      	cmp	r2, #48	@ 0x30
 80048dc:	d0fa      	beq.n	80048d4 <_dtoa_r+0x698>
 80048de:	001c      	movs	r4, r3
 80048e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80048e2:	9304      	str	r3, [sp, #16]
 80048e4:	e73e      	b.n	8004764 <_dtoa_r+0x528>
 80048e6:	2200      	movs	r2, #0
 80048e8:	4b1b      	ldr	r3, [pc, #108]	@ (8004958 <_dtoa_r+0x71c>)
 80048ea:	f7fc fd85 	bl	80013f8 <__aeabi_dmul>
 80048ee:	900a      	str	r0, [sp, #40]	@ 0x28
 80048f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80048f2:	e7b9      	b.n	8004868 <_dtoa_r+0x62c>
 80048f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d10c      	bne.n	8004914 <_dtoa_r+0x6d8>
 80048fa:	9806      	ldr	r0, [sp, #24]
 80048fc:	9907      	ldr	r1, [sp, #28]
 80048fe:	2200      	movs	r2, #0
 8004900:	4b18      	ldr	r3, [pc, #96]	@ (8004964 <_dtoa_r+0x728>)
 8004902:	f7fc fd79 	bl	80013f8 <__aeabi_dmul>
 8004906:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004908:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800490a:	f7fb fdc3 	bl	8000494 <__aeabi_dcmpge>
 800490e:	2800      	cmp	r0, #0
 8004910:	d100      	bne.n	8004914 <_dtoa_r+0x6d8>
 8004912:	e164      	b.n	8004bde <_dtoa_r+0x9a2>
 8004914:	2600      	movs	r6, #0
 8004916:	0037      	movs	r7, r6
 8004918:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800491a:	9c08      	ldr	r4, [sp, #32]
 800491c:	43db      	mvns	r3, r3
 800491e:	930c      	str	r3, [sp, #48]	@ 0x30
 8004920:	2300      	movs	r3, #0
 8004922:	9304      	str	r3, [sp, #16]
 8004924:	0031      	movs	r1, r6
 8004926:	9803      	ldr	r0, [sp, #12]
 8004928:	f000 fbc6 	bl	80050b8 <_Bfree>
 800492c:	2f00      	cmp	r7, #0
 800492e:	d0d7      	beq.n	80048e0 <_dtoa_r+0x6a4>
 8004930:	9b04      	ldr	r3, [sp, #16]
 8004932:	2b00      	cmp	r3, #0
 8004934:	d005      	beq.n	8004942 <_dtoa_r+0x706>
 8004936:	42bb      	cmp	r3, r7
 8004938:	d003      	beq.n	8004942 <_dtoa_r+0x706>
 800493a:	0019      	movs	r1, r3
 800493c:	9803      	ldr	r0, [sp, #12]
 800493e:	f000 fbbb 	bl	80050b8 <_Bfree>
 8004942:	0039      	movs	r1, r7
 8004944:	9803      	ldr	r0, [sp, #12]
 8004946:	f000 fbb7 	bl	80050b8 <_Bfree>
 800494a:	e7c9      	b.n	80048e0 <_dtoa_r+0x6a4>
 800494c:	080061a0 	.word	0x080061a0
 8004950:	08006178 	.word	0x08006178
 8004954:	3ff00000 	.word	0x3ff00000
 8004958:	40240000 	.word	0x40240000
 800495c:	401c0000 	.word	0x401c0000
 8004960:	fcc00000 	.word	0xfcc00000
 8004964:	40140000 	.word	0x40140000
 8004968:	3fe00000 	.word	0x3fe00000
 800496c:	9b04      	ldr	r3, [sp, #16]
 800496e:	930c      	str	r3, [sp, #48]	@ 0x30
 8004970:	0023      	movs	r3, r4
 8004972:	001c      	movs	r4, r3
 8004974:	3b01      	subs	r3, #1
 8004976:	781a      	ldrb	r2, [r3, #0]
 8004978:	2a39      	cmp	r2, #57	@ 0x39
 800497a:	d108      	bne.n	800498e <_dtoa_r+0x752>
 800497c:	9a08      	ldr	r2, [sp, #32]
 800497e:	429a      	cmp	r2, r3
 8004980:	d1f7      	bne.n	8004972 <_dtoa_r+0x736>
 8004982:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004984:	9908      	ldr	r1, [sp, #32]
 8004986:	3201      	adds	r2, #1
 8004988:	920c      	str	r2, [sp, #48]	@ 0x30
 800498a:	2230      	movs	r2, #48	@ 0x30
 800498c:	700a      	strb	r2, [r1, #0]
 800498e:	781a      	ldrb	r2, [r3, #0]
 8004990:	3201      	adds	r2, #1
 8004992:	701a      	strb	r2, [r3, #0]
 8004994:	e7a4      	b.n	80048e0 <_dtoa_r+0x6a4>
 8004996:	2200      	movs	r2, #0
 8004998:	4bc6      	ldr	r3, [pc, #792]	@ (8004cb4 <_dtoa_r+0xa78>)
 800499a:	f7fc fd2d 	bl	80013f8 <__aeabi_dmul>
 800499e:	2200      	movs	r2, #0
 80049a0:	2300      	movs	r3, #0
 80049a2:	0006      	movs	r6, r0
 80049a4:	000f      	movs	r7, r1
 80049a6:	f7fb fd51 	bl	800044c <__aeabi_dcmpeq>
 80049aa:	2800      	cmp	r0, #0
 80049ac:	d100      	bne.n	80049b0 <_dtoa_r+0x774>
 80049ae:	e6a1      	b.n	80046f4 <_dtoa_r+0x4b8>
 80049b0:	e6d8      	b.n	8004764 <_dtoa_r+0x528>
 80049b2:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80049b4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80049b6:	9c06      	ldr	r4, [sp, #24]
 80049b8:	2f00      	cmp	r7, #0
 80049ba:	d014      	beq.n	80049e6 <_dtoa_r+0x7aa>
 80049bc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80049be:	2a01      	cmp	r2, #1
 80049c0:	dd00      	ble.n	80049c4 <_dtoa_r+0x788>
 80049c2:	e0c8      	b.n	8004b56 <_dtoa_r+0x91a>
 80049c4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80049c6:	2a00      	cmp	r2, #0
 80049c8:	d100      	bne.n	80049cc <_dtoa_r+0x790>
 80049ca:	e0be      	b.n	8004b4a <_dtoa_r+0x90e>
 80049cc:	4aba      	ldr	r2, [pc, #744]	@ (8004cb8 <_dtoa_r+0xa7c>)
 80049ce:	189b      	adds	r3, r3, r2
 80049d0:	9a06      	ldr	r2, [sp, #24]
 80049d2:	2101      	movs	r1, #1
 80049d4:	18d2      	adds	r2, r2, r3
 80049d6:	9206      	str	r2, [sp, #24]
 80049d8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80049da:	9803      	ldr	r0, [sp, #12]
 80049dc:	18d3      	adds	r3, r2, r3
 80049de:	930d      	str	r3, [sp, #52]	@ 0x34
 80049e0:	f000 fc22 	bl	8005228 <__i2b>
 80049e4:	0007      	movs	r7, r0
 80049e6:	2c00      	cmp	r4, #0
 80049e8:	d00e      	beq.n	8004a08 <_dtoa_r+0x7cc>
 80049ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	dd0b      	ble.n	8004a08 <_dtoa_r+0x7cc>
 80049f0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80049f2:	0023      	movs	r3, r4
 80049f4:	4294      	cmp	r4, r2
 80049f6:	dd00      	ble.n	80049fa <_dtoa_r+0x7be>
 80049f8:	0013      	movs	r3, r2
 80049fa:	9a06      	ldr	r2, [sp, #24]
 80049fc:	1ae4      	subs	r4, r4, r3
 80049fe:	1ad2      	subs	r2, r2, r3
 8004a00:	9206      	str	r2, [sp, #24]
 8004a02:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004a04:	1ad3      	subs	r3, r2, r3
 8004a06:	930d      	str	r3, [sp, #52]	@ 0x34
 8004a08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	d01f      	beq.n	8004a4e <_dtoa_r+0x812>
 8004a0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d100      	bne.n	8004a16 <_dtoa_r+0x7da>
 8004a14:	e0b5      	b.n	8004b82 <_dtoa_r+0x946>
 8004a16:	2d00      	cmp	r5, #0
 8004a18:	d010      	beq.n	8004a3c <_dtoa_r+0x800>
 8004a1a:	0039      	movs	r1, r7
 8004a1c:	002a      	movs	r2, r5
 8004a1e:	9803      	ldr	r0, [sp, #12]
 8004a20:	f000 fccc 	bl	80053bc <__pow5mult>
 8004a24:	9a05      	ldr	r2, [sp, #20]
 8004a26:	0001      	movs	r1, r0
 8004a28:	0007      	movs	r7, r0
 8004a2a:	9803      	ldr	r0, [sp, #12]
 8004a2c:	f000 fc14 	bl	8005258 <__multiply>
 8004a30:	0006      	movs	r6, r0
 8004a32:	9905      	ldr	r1, [sp, #20]
 8004a34:	9803      	ldr	r0, [sp, #12]
 8004a36:	f000 fb3f 	bl	80050b8 <_Bfree>
 8004a3a:	9605      	str	r6, [sp, #20]
 8004a3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004a3e:	1b5a      	subs	r2, r3, r5
 8004a40:	42ab      	cmp	r3, r5
 8004a42:	d004      	beq.n	8004a4e <_dtoa_r+0x812>
 8004a44:	9905      	ldr	r1, [sp, #20]
 8004a46:	9803      	ldr	r0, [sp, #12]
 8004a48:	f000 fcb8 	bl	80053bc <__pow5mult>
 8004a4c:	9005      	str	r0, [sp, #20]
 8004a4e:	2101      	movs	r1, #1
 8004a50:	9803      	ldr	r0, [sp, #12]
 8004a52:	f000 fbe9 	bl	8005228 <__i2b>
 8004a56:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004a58:	0006      	movs	r6, r0
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	d100      	bne.n	8004a60 <_dtoa_r+0x824>
 8004a5e:	e1bc      	b.n	8004dda <_dtoa_r+0xb9e>
 8004a60:	001a      	movs	r2, r3
 8004a62:	0001      	movs	r1, r0
 8004a64:	9803      	ldr	r0, [sp, #12]
 8004a66:	f000 fca9 	bl	80053bc <__pow5mult>
 8004a6a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004a6c:	0006      	movs	r6, r0
 8004a6e:	2500      	movs	r5, #0
 8004a70:	2b01      	cmp	r3, #1
 8004a72:	dc16      	bgt.n	8004aa2 <_dtoa_r+0x866>
 8004a74:	2500      	movs	r5, #0
 8004a76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004a78:	42ab      	cmp	r3, r5
 8004a7a:	d10e      	bne.n	8004a9a <_dtoa_r+0x85e>
 8004a7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004a7e:	031b      	lsls	r3, r3, #12
 8004a80:	42ab      	cmp	r3, r5
 8004a82:	d10a      	bne.n	8004a9a <_dtoa_r+0x85e>
 8004a84:	4b8d      	ldr	r3, [pc, #564]	@ (8004cbc <_dtoa_r+0xa80>)
 8004a86:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8004a88:	4213      	tst	r3, r2
 8004a8a:	d006      	beq.n	8004a9a <_dtoa_r+0x85e>
 8004a8c:	9b06      	ldr	r3, [sp, #24]
 8004a8e:	3501      	adds	r5, #1
 8004a90:	3301      	adds	r3, #1
 8004a92:	9306      	str	r3, [sp, #24]
 8004a94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004a96:	3301      	adds	r3, #1
 8004a98:	930d      	str	r3, [sp, #52]	@ 0x34
 8004a9a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004a9c:	2001      	movs	r0, #1
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d008      	beq.n	8004ab4 <_dtoa_r+0x878>
 8004aa2:	6933      	ldr	r3, [r6, #16]
 8004aa4:	3303      	adds	r3, #3
 8004aa6:	009b      	lsls	r3, r3, #2
 8004aa8:	18f3      	adds	r3, r6, r3
 8004aaa:	6858      	ldr	r0, [r3, #4]
 8004aac:	f000 fb6c 	bl	8005188 <__hi0bits>
 8004ab0:	2320      	movs	r3, #32
 8004ab2:	1a18      	subs	r0, r3, r0
 8004ab4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004ab6:	1818      	adds	r0, r3, r0
 8004ab8:	0002      	movs	r2, r0
 8004aba:	231f      	movs	r3, #31
 8004abc:	401a      	ands	r2, r3
 8004abe:	4218      	tst	r0, r3
 8004ac0:	d065      	beq.n	8004b8e <_dtoa_r+0x952>
 8004ac2:	3301      	adds	r3, #1
 8004ac4:	1a9b      	subs	r3, r3, r2
 8004ac6:	2b04      	cmp	r3, #4
 8004ac8:	dd5d      	ble.n	8004b86 <_dtoa_r+0x94a>
 8004aca:	231c      	movs	r3, #28
 8004acc:	1a9b      	subs	r3, r3, r2
 8004ace:	9a06      	ldr	r2, [sp, #24]
 8004ad0:	18e4      	adds	r4, r4, r3
 8004ad2:	18d2      	adds	r2, r2, r3
 8004ad4:	9206      	str	r2, [sp, #24]
 8004ad6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004ad8:	18d3      	adds	r3, r2, r3
 8004ada:	930d      	str	r3, [sp, #52]	@ 0x34
 8004adc:	9b06      	ldr	r3, [sp, #24]
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	dd05      	ble.n	8004aee <_dtoa_r+0x8b2>
 8004ae2:	001a      	movs	r2, r3
 8004ae4:	9905      	ldr	r1, [sp, #20]
 8004ae6:	9803      	ldr	r0, [sp, #12]
 8004ae8:	f000 fcc4 	bl	8005474 <__lshift>
 8004aec:	9005      	str	r0, [sp, #20]
 8004aee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	dd05      	ble.n	8004b00 <_dtoa_r+0x8c4>
 8004af4:	0031      	movs	r1, r6
 8004af6:	001a      	movs	r2, r3
 8004af8:	9803      	ldr	r0, [sp, #12]
 8004afa:	f000 fcbb 	bl	8005474 <__lshift>
 8004afe:	0006      	movs	r6, r0
 8004b00:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d045      	beq.n	8004b92 <_dtoa_r+0x956>
 8004b06:	0031      	movs	r1, r6
 8004b08:	9805      	ldr	r0, [sp, #20]
 8004b0a:	f000 fd1f 	bl	800554c <__mcmp>
 8004b0e:	2800      	cmp	r0, #0
 8004b10:	da3f      	bge.n	8004b92 <_dtoa_r+0x956>
 8004b12:	9b04      	ldr	r3, [sp, #16]
 8004b14:	220a      	movs	r2, #10
 8004b16:	3b01      	subs	r3, #1
 8004b18:	930c      	str	r3, [sp, #48]	@ 0x30
 8004b1a:	9905      	ldr	r1, [sp, #20]
 8004b1c:	2300      	movs	r3, #0
 8004b1e:	9803      	ldr	r0, [sp, #12]
 8004b20:	f000 faee 	bl	8005100 <__multadd>
 8004b24:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004b26:	9005      	str	r0, [sp, #20]
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d100      	bne.n	8004b2e <_dtoa_r+0x8f2>
 8004b2c:	e15c      	b.n	8004de8 <_dtoa_r+0xbac>
 8004b2e:	2300      	movs	r3, #0
 8004b30:	0039      	movs	r1, r7
 8004b32:	220a      	movs	r2, #10
 8004b34:	9803      	ldr	r0, [sp, #12]
 8004b36:	f000 fae3 	bl	8005100 <__multadd>
 8004b3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004b3c:	0007      	movs	r7, r0
 8004b3e:	2b00      	cmp	r3, #0
 8004b40:	dc55      	bgt.n	8004bee <_dtoa_r+0x9b2>
 8004b42:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004b44:	2b02      	cmp	r3, #2
 8004b46:	dc2d      	bgt.n	8004ba4 <_dtoa_r+0x968>
 8004b48:	e051      	b.n	8004bee <_dtoa_r+0x9b2>
 8004b4a:	2336      	movs	r3, #54	@ 0x36
 8004b4c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004b4e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8004b50:	9c06      	ldr	r4, [sp, #24]
 8004b52:	1a9b      	subs	r3, r3, r2
 8004b54:	e73c      	b.n	80049d0 <_dtoa_r+0x794>
 8004b56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b58:	1e5d      	subs	r5, r3, #1
 8004b5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b5c:	42ab      	cmp	r3, r5
 8004b5e:	db08      	blt.n	8004b72 <_dtoa_r+0x936>
 8004b60:	1b5d      	subs	r5, r3, r5
 8004b62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b64:	9c06      	ldr	r4, [sp, #24]
 8004b66:	2b00      	cmp	r3, #0
 8004b68:	db00      	blt.n	8004b6c <_dtoa_r+0x930>
 8004b6a:	e731      	b.n	80049d0 <_dtoa_r+0x794>
 8004b6c:	1ae4      	subs	r4, r4, r3
 8004b6e:	2300      	movs	r3, #0
 8004b70:	e72e      	b.n	80049d0 <_dtoa_r+0x794>
 8004b72:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b74:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8004b76:	1aeb      	subs	r3, r5, r3
 8004b78:	18d3      	adds	r3, r2, r3
 8004b7a:	950f      	str	r5, [sp, #60]	@ 0x3c
 8004b7c:	9314      	str	r3, [sp, #80]	@ 0x50
 8004b7e:	2500      	movs	r5, #0
 8004b80:	e7ef      	b.n	8004b62 <_dtoa_r+0x926>
 8004b82:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8004b84:	e75e      	b.n	8004a44 <_dtoa_r+0x808>
 8004b86:	2b04      	cmp	r3, #4
 8004b88:	d0a8      	beq.n	8004adc <_dtoa_r+0x8a0>
 8004b8a:	331c      	adds	r3, #28
 8004b8c:	e79f      	b.n	8004ace <_dtoa_r+0x892>
 8004b8e:	0013      	movs	r3, r2
 8004b90:	e7fb      	b.n	8004b8a <_dtoa_r+0x94e>
 8004b92:	9b04      	ldr	r3, [sp, #16]
 8004b94:	930c      	str	r3, [sp, #48]	@ 0x30
 8004b96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b98:	930e      	str	r3, [sp, #56]	@ 0x38
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	dc23      	bgt.n	8004be6 <_dtoa_r+0x9aa>
 8004b9e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004ba0:	2b02      	cmp	r3, #2
 8004ba2:	dd20      	ble.n	8004be6 <_dtoa_r+0x9aa>
 8004ba4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004ba6:	2b00      	cmp	r3, #0
 8004ba8:	d000      	beq.n	8004bac <_dtoa_r+0x970>
 8004baa:	e6b5      	b.n	8004918 <_dtoa_r+0x6dc>
 8004bac:	0031      	movs	r1, r6
 8004bae:	2205      	movs	r2, #5
 8004bb0:	9803      	ldr	r0, [sp, #12]
 8004bb2:	f000 faa5 	bl	8005100 <__multadd>
 8004bb6:	0006      	movs	r6, r0
 8004bb8:	0001      	movs	r1, r0
 8004bba:	9805      	ldr	r0, [sp, #20]
 8004bbc:	f000 fcc6 	bl	800554c <__mcmp>
 8004bc0:	2800      	cmp	r0, #0
 8004bc2:	dc00      	bgt.n	8004bc6 <_dtoa_r+0x98a>
 8004bc4:	e6a8      	b.n	8004918 <_dtoa_r+0x6dc>
 8004bc6:	9b08      	ldr	r3, [sp, #32]
 8004bc8:	9a08      	ldr	r2, [sp, #32]
 8004bca:	1c5c      	adds	r4, r3, #1
 8004bcc:	2331      	movs	r3, #49	@ 0x31
 8004bce:	7013      	strb	r3, [r2, #0]
 8004bd0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004bd2:	3301      	adds	r3, #1
 8004bd4:	930c      	str	r3, [sp, #48]	@ 0x30
 8004bd6:	e6a3      	b.n	8004920 <_dtoa_r+0x6e4>
 8004bd8:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8004bda:	0037      	movs	r7, r6
 8004bdc:	e7f3      	b.n	8004bc6 <_dtoa_r+0x98a>
 8004bde:	9b04      	ldr	r3, [sp, #16]
 8004be0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8004be2:	930c      	str	r3, [sp, #48]	@ 0x30
 8004be4:	e7f9      	b.n	8004bda <_dtoa_r+0x99e>
 8004be6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004be8:	2b00      	cmp	r3, #0
 8004bea:	d100      	bne.n	8004bee <_dtoa_r+0x9b2>
 8004bec:	e100      	b.n	8004df0 <_dtoa_r+0xbb4>
 8004bee:	2c00      	cmp	r4, #0
 8004bf0:	dd05      	ble.n	8004bfe <_dtoa_r+0x9c2>
 8004bf2:	0039      	movs	r1, r7
 8004bf4:	0022      	movs	r2, r4
 8004bf6:	9803      	ldr	r0, [sp, #12]
 8004bf8:	f000 fc3c 	bl	8005474 <__lshift>
 8004bfc:	0007      	movs	r7, r0
 8004bfe:	0038      	movs	r0, r7
 8004c00:	2d00      	cmp	r5, #0
 8004c02:	d018      	beq.n	8004c36 <_dtoa_r+0x9fa>
 8004c04:	6879      	ldr	r1, [r7, #4]
 8004c06:	9803      	ldr	r0, [sp, #12]
 8004c08:	f000 fa12 	bl	8005030 <_Balloc>
 8004c0c:	1e04      	subs	r4, r0, #0
 8004c0e:	d105      	bne.n	8004c1c <_dtoa_r+0x9e0>
 8004c10:	0022      	movs	r2, r4
 8004c12:	4b2b      	ldr	r3, [pc, #172]	@ (8004cc0 <_dtoa_r+0xa84>)
 8004c14:	482b      	ldr	r0, [pc, #172]	@ (8004cc4 <_dtoa_r+0xa88>)
 8004c16:	492c      	ldr	r1, [pc, #176]	@ (8004cc8 <_dtoa_r+0xa8c>)
 8004c18:	f7ff fb25 	bl	8004266 <_dtoa_r+0x2a>
 8004c1c:	0039      	movs	r1, r7
 8004c1e:	693a      	ldr	r2, [r7, #16]
 8004c20:	310c      	adds	r1, #12
 8004c22:	3202      	adds	r2, #2
 8004c24:	0092      	lsls	r2, r2, #2
 8004c26:	300c      	adds	r0, #12
 8004c28:	f000 fe6a 	bl	8005900 <memcpy>
 8004c2c:	2201      	movs	r2, #1
 8004c2e:	0021      	movs	r1, r4
 8004c30:	9803      	ldr	r0, [sp, #12]
 8004c32:	f000 fc1f 	bl	8005474 <__lshift>
 8004c36:	9b08      	ldr	r3, [sp, #32]
 8004c38:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004c3a:	9306      	str	r3, [sp, #24]
 8004c3c:	3b01      	subs	r3, #1
 8004c3e:	189b      	adds	r3, r3, r2
 8004c40:	2201      	movs	r2, #1
 8004c42:	9704      	str	r7, [sp, #16]
 8004c44:	0007      	movs	r7, r0
 8004c46:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004c48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004c4a:	4013      	ands	r3, r2
 8004c4c:	930e      	str	r3, [sp, #56]	@ 0x38
 8004c4e:	0031      	movs	r1, r6
 8004c50:	9805      	ldr	r0, [sp, #20]
 8004c52:	f7ff fa65 	bl	8004120 <quorem>
 8004c56:	9904      	ldr	r1, [sp, #16]
 8004c58:	0005      	movs	r5, r0
 8004c5a:	900a      	str	r0, [sp, #40]	@ 0x28
 8004c5c:	9805      	ldr	r0, [sp, #20]
 8004c5e:	f000 fc75 	bl	800554c <__mcmp>
 8004c62:	003a      	movs	r2, r7
 8004c64:	900d      	str	r0, [sp, #52]	@ 0x34
 8004c66:	0031      	movs	r1, r6
 8004c68:	9803      	ldr	r0, [sp, #12]
 8004c6a:	f000 fc8b 	bl	8005584 <__mdiff>
 8004c6e:	2201      	movs	r2, #1
 8004c70:	68c3      	ldr	r3, [r0, #12]
 8004c72:	0004      	movs	r4, r0
 8004c74:	3530      	adds	r5, #48	@ 0x30
 8004c76:	9209      	str	r2, [sp, #36]	@ 0x24
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d104      	bne.n	8004c86 <_dtoa_r+0xa4a>
 8004c7c:	0001      	movs	r1, r0
 8004c7e:	9805      	ldr	r0, [sp, #20]
 8004c80:	f000 fc64 	bl	800554c <__mcmp>
 8004c84:	9009      	str	r0, [sp, #36]	@ 0x24
 8004c86:	0021      	movs	r1, r4
 8004c88:	9803      	ldr	r0, [sp, #12]
 8004c8a:	f000 fa15 	bl	80050b8 <_Bfree>
 8004c8e:	9b06      	ldr	r3, [sp, #24]
 8004c90:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004c92:	1c5c      	adds	r4, r3, #1
 8004c94:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004c96:	4313      	orrs	r3, r2
 8004c98:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004c9a:	4313      	orrs	r3, r2
 8004c9c:	d116      	bne.n	8004ccc <_dtoa_r+0xa90>
 8004c9e:	2d39      	cmp	r5, #57	@ 0x39
 8004ca0:	d02f      	beq.n	8004d02 <_dtoa_r+0xac6>
 8004ca2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004ca4:	2b00      	cmp	r3, #0
 8004ca6:	dd01      	ble.n	8004cac <_dtoa_r+0xa70>
 8004ca8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8004caa:	3531      	adds	r5, #49	@ 0x31
 8004cac:	9b06      	ldr	r3, [sp, #24]
 8004cae:	701d      	strb	r5, [r3, #0]
 8004cb0:	e638      	b.n	8004924 <_dtoa_r+0x6e8>
 8004cb2:	46c0      	nop			@ (mov r8, r8)
 8004cb4:	40240000 	.word	0x40240000
 8004cb8:	00000433 	.word	0x00000433
 8004cbc:	7ff00000 	.word	0x7ff00000
 8004cc0:	08006100 	.word	0x08006100
 8004cc4:	080060a8 	.word	0x080060a8
 8004cc8:	000002ef 	.word	0x000002ef
 8004ccc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	db04      	blt.n	8004cdc <_dtoa_r+0xaa0>
 8004cd2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8004cd4:	4313      	orrs	r3, r2
 8004cd6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004cd8:	4313      	orrs	r3, r2
 8004cda:	d11e      	bne.n	8004d1a <_dtoa_r+0xade>
 8004cdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	dde4      	ble.n	8004cac <_dtoa_r+0xa70>
 8004ce2:	9905      	ldr	r1, [sp, #20]
 8004ce4:	2201      	movs	r2, #1
 8004ce6:	9803      	ldr	r0, [sp, #12]
 8004ce8:	f000 fbc4 	bl	8005474 <__lshift>
 8004cec:	0031      	movs	r1, r6
 8004cee:	9005      	str	r0, [sp, #20]
 8004cf0:	f000 fc2c 	bl	800554c <__mcmp>
 8004cf4:	2800      	cmp	r0, #0
 8004cf6:	dc02      	bgt.n	8004cfe <_dtoa_r+0xac2>
 8004cf8:	d1d8      	bne.n	8004cac <_dtoa_r+0xa70>
 8004cfa:	07eb      	lsls	r3, r5, #31
 8004cfc:	d5d6      	bpl.n	8004cac <_dtoa_r+0xa70>
 8004cfe:	2d39      	cmp	r5, #57	@ 0x39
 8004d00:	d1d2      	bne.n	8004ca8 <_dtoa_r+0xa6c>
 8004d02:	2339      	movs	r3, #57	@ 0x39
 8004d04:	9a06      	ldr	r2, [sp, #24]
 8004d06:	7013      	strb	r3, [r2, #0]
 8004d08:	0023      	movs	r3, r4
 8004d0a:	001c      	movs	r4, r3
 8004d0c:	3b01      	subs	r3, #1
 8004d0e:	781a      	ldrb	r2, [r3, #0]
 8004d10:	2a39      	cmp	r2, #57	@ 0x39
 8004d12:	d04f      	beq.n	8004db4 <_dtoa_r+0xb78>
 8004d14:	3201      	adds	r2, #1
 8004d16:	701a      	strb	r2, [r3, #0]
 8004d18:	e604      	b.n	8004924 <_dtoa_r+0x6e8>
 8004d1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	dd03      	ble.n	8004d28 <_dtoa_r+0xaec>
 8004d20:	2d39      	cmp	r5, #57	@ 0x39
 8004d22:	d0ee      	beq.n	8004d02 <_dtoa_r+0xac6>
 8004d24:	3501      	adds	r5, #1
 8004d26:	e7c1      	b.n	8004cac <_dtoa_r+0xa70>
 8004d28:	9b06      	ldr	r3, [sp, #24]
 8004d2a:	9a06      	ldr	r2, [sp, #24]
 8004d2c:	701d      	strb	r5, [r3, #0]
 8004d2e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004d30:	4293      	cmp	r3, r2
 8004d32:	d02a      	beq.n	8004d8a <_dtoa_r+0xb4e>
 8004d34:	2300      	movs	r3, #0
 8004d36:	220a      	movs	r2, #10
 8004d38:	9905      	ldr	r1, [sp, #20]
 8004d3a:	9803      	ldr	r0, [sp, #12]
 8004d3c:	f000 f9e0 	bl	8005100 <__multadd>
 8004d40:	9b04      	ldr	r3, [sp, #16]
 8004d42:	9005      	str	r0, [sp, #20]
 8004d44:	42bb      	cmp	r3, r7
 8004d46:	d109      	bne.n	8004d5c <_dtoa_r+0xb20>
 8004d48:	2300      	movs	r3, #0
 8004d4a:	220a      	movs	r2, #10
 8004d4c:	9904      	ldr	r1, [sp, #16]
 8004d4e:	9803      	ldr	r0, [sp, #12]
 8004d50:	f000 f9d6 	bl	8005100 <__multadd>
 8004d54:	9004      	str	r0, [sp, #16]
 8004d56:	0007      	movs	r7, r0
 8004d58:	9406      	str	r4, [sp, #24]
 8004d5a:	e778      	b.n	8004c4e <_dtoa_r+0xa12>
 8004d5c:	9904      	ldr	r1, [sp, #16]
 8004d5e:	2300      	movs	r3, #0
 8004d60:	220a      	movs	r2, #10
 8004d62:	9803      	ldr	r0, [sp, #12]
 8004d64:	f000 f9cc 	bl	8005100 <__multadd>
 8004d68:	2300      	movs	r3, #0
 8004d6a:	9004      	str	r0, [sp, #16]
 8004d6c:	220a      	movs	r2, #10
 8004d6e:	0039      	movs	r1, r7
 8004d70:	9803      	ldr	r0, [sp, #12]
 8004d72:	f000 f9c5 	bl	8005100 <__multadd>
 8004d76:	e7ee      	b.n	8004d56 <_dtoa_r+0xb1a>
 8004d78:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004d7a:	2401      	movs	r4, #1
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	dd00      	ble.n	8004d82 <_dtoa_r+0xb46>
 8004d80:	001c      	movs	r4, r3
 8004d82:	9b08      	ldr	r3, [sp, #32]
 8004d84:	191c      	adds	r4, r3, r4
 8004d86:	2300      	movs	r3, #0
 8004d88:	9304      	str	r3, [sp, #16]
 8004d8a:	9905      	ldr	r1, [sp, #20]
 8004d8c:	2201      	movs	r2, #1
 8004d8e:	9803      	ldr	r0, [sp, #12]
 8004d90:	f000 fb70 	bl	8005474 <__lshift>
 8004d94:	0031      	movs	r1, r6
 8004d96:	9005      	str	r0, [sp, #20]
 8004d98:	f000 fbd8 	bl	800554c <__mcmp>
 8004d9c:	2800      	cmp	r0, #0
 8004d9e:	dcb3      	bgt.n	8004d08 <_dtoa_r+0xacc>
 8004da0:	d101      	bne.n	8004da6 <_dtoa_r+0xb6a>
 8004da2:	07ed      	lsls	r5, r5, #31
 8004da4:	d4b0      	bmi.n	8004d08 <_dtoa_r+0xacc>
 8004da6:	0023      	movs	r3, r4
 8004da8:	001c      	movs	r4, r3
 8004daa:	3b01      	subs	r3, #1
 8004dac:	781a      	ldrb	r2, [r3, #0]
 8004dae:	2a30      	cmp	r2, #48	@ 0x30
 8004db0:	d0fa      	beq.n	8004da8 <_dtoa_r+0xb6c>
 8004db2:	e5b7      	b.n	8004924 <_dtoa_r+0x6e8>
 8004db4:	9a08      	ldr	r2, [sp, #32]
 8004db6:	429a      	cmp	r2, r3
 8004db8:	d1a7      	bne.n	8004d0a <_dtoa_r+0xace>
 8004dba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004dbc:	3301      	adds	r3, #1
 8004dbe:	930c      	str	r3, [sp, #48]	@ 0x30
 8004dc0:	2331      	movs	r3, #49	@ 0x31
 8004dc2:	7013      	strb	r3, [r2, #0]
 8004dc4:	e5ae      	b.n	8004924 <_dtoa_r+0x6e8>
 8004dc6:	4b15      	ldr	r3, [pc, #84]	@ (8004e1c <_dtoa_r+0xbe0>)
 8004dc8:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8004dca:	9308      	str	r3, [sp, #32]
 8004dcc:	4b14      	ldr	r3, [pc, #80]	@ (8004e20 <_dtoa_r+0xbe4>)
 8004dce:	2a00      	cmp	r2, #0
 8004dd0:	d001      	beq.n	8004dd6 <_dtoa_r+0xb9a>
 8004dd2:	f7ff fa7b 	bl	80042cc <_dtoa_r+0x90>
 8004dd6:	f7ff fa7b 	bl	80042d0 <_dtoa_r+0x94>
 8004dda:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004ddc:	2b01      	cmp	r3, #1
 8004dde:	dc00      	bgt.n	8004de2 <_dtoa_r+0xba6>
 8004de0:	e648      	b.n	8004a74 <_dtoa_r+0x838>
 8004de2:	2001      	movs	r0, #1
 8004de4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8004de6:	e665      	b.n	8004ab4 <_dtoa_r+0x878>
 8004de8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	dc00      	bgt.n	8004df0 <_dtoa_r+0xbb4>
 8004dee:	e6d6      	b.n	8004b9e <_dtoa_r+0x962>
 8004df0:	2400      	movs	r4, #0
 8004df2:	0031      	movs	r1, r6
 8004df4:	9805      	ldr	r0, [sp, #20]
 8004df6:	f7ff f993 	bl	8004120 <quorem>
 8004dfa:	9b08      	ldr	r3, [sp, #32]
 8004dfc:	3030      	adds	r0, #48	@ 0x30
 8004dfe:	5518      	strb	r0, [r3, r4]
 8004e00:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004e02:	3401      	adds	r4, #1
 8004e04:	0005      	movs	r5, r0
 8004e06:	429c      	cmp	r4, r3
 8004e08:	dab6      	bge.n	8004d78 <_dtoa_r+0xb3c>
 8004e0a:	2300      	movs	r3, #0
 8004e0c:	220a      	movs	r2, #10
 8004e0e:	9905      	ldr	r1, [sp, #20]
 8004e10:	9803      	ldr	r0, [sp, #12]
 8004e12:	f000 f975 	bl	8005100 <__multadd>
 8004e16:	9005      	str	r0, [sp, #20]
 8004e18:	e7eb      	b.n	8004df2 <_dtoa_r+0xbb6>
 8004e1a:	46c0      	nop			@ (mov r8, r8)
 8004e1c:	08006084 	.word	0x08006084
 8004e20:	0800608c 	.word	0x0800608c

08004e24 <_free_r>:
 8004e24:	b570      	push	{r4, r5, r6, lr}
 8004e26:	0005      	movs	r5, r0
 8004e28:	1e0c      	subs	r4, r1, #0
 8004e2a:	d010      	beq.n	8004e4e <_free_r+0x2a>
 8004e2c:	3c04      	subs	r4, #4
 8004e2e:	6823      	ldr	r3, [r4, #0]
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	da00      	bge.n	8004e36 <_free_r+0x12>
 8004e34:	18e4      	adds	r4, r4, r3
 8004e36:	0028      	movs	r0, r5
 8004e38:	f000 f8ea 	bl	8005010 <__malloc_lock>
 8004e3c:	4a1d      	ldr	r2, [pc, #116]	@ (8004eb4 <_free_r+0x90>)
 8004e3e:	6813      	ldr	r3, [r2, #0]
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	d105      	bne.n	8004e50 <_free_r+0x2c>
 8004e44:	6063      	str	r3, [r4, #4]
 8004e46:	6014      	str	r4, [r2, #0]
 8004e48:	0028      	movs	r0, r5
 8004e4a:	f000 f8e9 	bl	8005020 <__malloc_unlock>
 8004e4e:	bd70      	pop	{r4, r5, r6, pc}
 8004e50:	42a3      	cmp	r3, r4
 8004e52:	d908      	bls.n	8004e66 <_free_r+0x42>
 8004e54:	6820      	ldr	r0, [r4, #0]
 8004e56:	1821      	adds	r1, r4, r0
 8004e58:	428b      	cmp	r3, r1
 8004e5a:	d1f3      	bne.n	8004e44 <_free_r+0x20>
 8004e5c:	6819      	ldr	r1, [r3, #0]
 8004e5e:	685b      	ldr	r3, [r3, #4]
 8004e60:	1809      	adds	r1, r1, r0
 8004e62:	6021      	str	r1, [r4, #0]
 8004e64:	e7ee      	b.n	8004e44 <_free_r+0x20>
 8004e66:	001a      	movs	r2, r3
 8004e68:	685b      	ldr	r3, [r3, #4]
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d001      	beq.n	8004e72 <_free_r+0x4e>
 8004e6e:	42a3      	cmp	r3, r4
 8004e70:	d9f9      	bls.n	8004e66 <_free_r+0x42>
 8004e72:	6811      	ldr	r1, [r2, #0]
 8004e74:	1850      	adds	r0, r2, r1
 8004e76:	42a0      	cmp	r0, r4
 8004e78:	d10b      	bne.n	8004e92 <_free_r+0x6e>
 8004e7a:	6820      	ldr	r0, [r4, #0]
 8004e7c:	1809      	adds	r1, r1, r0
 8004e7e:	1850      	adds	r0, r2, r1
 8004e80:	6011      	str	r1, [r2, #0]
 8004e82:	4283      	cmp	r3, r0
 8004e84:	d1e0      	bne.n	8004e48 <_free_r+0x24>
 8004e86:	6818      	ldr	r0, [r3, #0]
 8004e88:	685b      	ldr	r3, [r3, #4]
 8004e8a:	1841      	adds	r1, r0, r1
 8004e8c:	6011      	str	r1, [r2, #0]
 8004e8e:	6053      	str	r3, [r2, #4]
 8004e90:	e7da      	b.n	8004e48 <_free_r+0x24>
 8004e92:	42a0      	cmp	r0, r4
 8004e94:	d902      	bls.n	8004e9c <_free_r+0x78>
 8004e96:	230c      	movs	r3, #12
 8004e98:	602b      	str	r3, [r5, #0]
 8004e9a:	e7d5      	b.n	8004e48 <_free_r+0x24>
 8004e9c:	6820      	ldr	r0, [r4, #0]
 8004e9e:	1821      	adds	r1, r4, r0
 8004ea0:	428b      	cmp	r3, r1
 8004ea2:	d103      	bne.n	8004eac <_free_r+0x88>
 8004ea4:	6819      	ldr	r1, [r3, #0]
 8004ea6:	685b      	ldr	r3, [r3, #4]
 8004ea8:	1809      	adds	r1, r1, r0
 8004eaa:	6021      	str	r1, [r4, #0]
 8004eac:	6063      	str	r3, [r4, #4]
 8004eae:	6054      	str	r4, [r2, #4]
 8004eb0:	e7ca      	b.n	8004e48 <_free_r+0x24>
 8004eb2:	46c0      	nop			@ (mov r8, r8)
 8004eb4:	200003f0 	.word	0x200003f0

08004eb8 <malloc>:
 8004eb8:	b510      	push	{r4, lr}
 8004eba:	4b03      	ldr	r3, [pc, #12]	@ (8004ec8 <malloc+0x10>)
 8004ebc:	0001      	movs	r1, r0
 8004ebe:	6818      	ldr	r0, [r3, #0]
 8004ec0:	f000 f826 	bl	8004f10 <_malloc_r>
 8004ec4:	bd10      	pop	{r4, pc}
 8004ec6:	46c0      	nop			@ (mov r8, r8)
 8004ec8:	20000028 	.word	0x20000028

08004ecc <sbrk_aligned>:
 8004ecc:	b570      	push	{r4, r5, r6, lr}
 8004ece:	4e0f      	ldr	r6, [pc, #60]	@ (8004f0c <sbrk_aligned+0x40>)
 8004ed0:	000d      	movs	r5, r1
 8004ed2:	6831      	ldr	r1, [r6, #0]
 8004ed4:	0004      	movs	r4, r0
 8004ed6:	2900      	cmp	r1, #0
 8004ed8:	d102      	bne.n	8004ee0 <sbrk_aligned+0x14>
 8004eda:	f000 fcff 	bl	80058dc <_sbrk_r>
 8004ede:	6030      	str	r0, [r6, #0]
 8004ee0:	0029      	movs	r1, r5
 8004ee2:	0020      	movs	r0, r4
 8004ee4:	f000 fcfa 	bl	80058dc <_sbrk_r>
 8004ee8:	1c43      	adds	r3, r0, #1
 8004eea:	d103      	bne.n	8004ef4 <sbrk_aligned+0x28>
 8004eec:	2501      	movs	r5, #1
 8004eee:	426d      	negs	r5, r5
 8004ef0:	0028      	movs	r0, r5
 8004ef2:	bd70      	pop	{r4, r5, r6, pc}
 8004ef4:	2303      	movs	r3, #3
 8004ef6:	1cc5      	adds	r5, r0, #3
 8004ef8:	439d      	bics	r5, r3
 8004efa:	42a8      	cmp	r0, r5
 8004efc:	d0f8      	beq.n	8004ef0 <sbrk_aligned+0x24>
 8004efe:	1a29      	subs	r1, r5, r0
 8004f00:	0020      	movs	r0, r4
 8004f02:	f000 fceb 	bl	80058dc <_sbrk_r>
 8004f06:	3001      	adds	r0, #1
 8004f08:	d1f2      	bne.n	8004ef0 <sbrk_aligned+0x24>
 8004f0a:	e7ef      	b.n	8004eec <sbrk_aligned+0x20>
 8004f0c:	200003ec 	.word	0x200003ec

08004f10 <_malloc_r>:
 8004f10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004f12:	2203      	movs	r2, #3
 8004f14:	1ccb      	adds	r3, r1, #3
 8004f16:	4393      	bics	r3, r2
 8004f18:	3308      	adds	r3, #8
 8004f1a:	0005      	movs	r5, r0
 8004f1c:	001f      	movs	r7, r3
 8004f1e:	2b0c      	cmp	r3, #12
 8004f20:	d234      	bcs.n	8004f8c <_malloc_r+0x7c>
 8004f22:	270c      	movs	r7, #12
 8004f24:	42b9      	cmp	r1, r7
 8004f26:	d833      	bhi.n	8004f90 <_malloc_r+0x80>
 8004f28:	0028      	movs	r0, r5
 8004f2a:	f000 f871 	bl	8005010 <__malloc_lock>
 8004f2e:	4e37      	ldr	r6, [pc, #220]	@ (800500c <_malloc_r+0xfc>)
 8004f30:	6833      	ldr	r3, [r6, #0]
 8004f32:	001c      	movs	r4, r3
 8004f34:	2c00      	cmp	r4, #0
 8004f36:	d12f      	bne.n	8004f98 <_malloc_r+0x88>
 8004f38:	0039      	movs	r1, r7
 8004f3a:	0028      	movs	r0, r5
 8004f3c:	f7ff ffc6 	bl	8004ecc <sbrk_aligned>
 8004f40:	0004      	movs	r4, r0
 8004f42:	1c43      	adds	r3, r0, #1
 8004f44:	d15f      	bne.n	8005006 <_malloc_r+0xf6>
 8004f46:	6834      	ldr	r4, [r6, #0]
 8004f48:	9400      	str	r4, [sp, #0]
 8004f4a:	9b00      	ldr	r3, [sp, #0]
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d14a      	bne.n	8004fe6 <_malloc_r+0xd6>
 8004f50:	2c00      	cmp	r4, #0
 8004f52:	d052      	beq.n	8004ffa <_malloc_r+0xea>
 8004f54:	6823      	ldr	r3, [r4, #0]
 8004f56:	0028      	movs	r0, r5
 8004f58:	18e3      	adds	r3, r4, r3
 8004f5a:	9900      	ldr	r1, [sp, #0]
 8004f5c:	9301      	str	r3, [sp, #4]
 8004f5e:	f000 fcbd 	bl	80058dc <_sbrk_r>
 8004f62:	9b01      	ldr	r3, [sp, #4]
 8004f64:	4283      	cmp	r3, r0
 8004f66:	d148      	bne.n	8004ffa <_malloc_r+0xea>
 8004f68:	6823      	ldr	r3, [r4, #0]
 8004f6a:	0028      	movs	r0, r5
 8004f6c:	1aff      	subs	r7, r7, r3
 8004f6e:	0039      	movs	r1, r7
 8004f70:	f7ff ffac 	bl	8004ecc <sbrk_aligned>
 8004f74:	3001      	adds	r0, #1
 8004f76:	d040      	beq.n	8004ffa <_malloc_r+0xea>
 8004f78:	6823      	ldr	r3, [r4, #0]
 8004f7a:	19db      	adds	r3, r3, r7
 8004f7c:	6023      	str	r3, [r4, #0]
 8004f7e:	6833      	ldr	r3, [r6, #0]
 8004f80:	685a      	ldr	r2, [r3, #4]
 8004f82:	2a00      	cmp	r2, #0
 8004f84:	d133      	bne.n	8004fee <_malloc_r+0xde>
 8004f86:	9b00      	ldr	r3, [sp, #0]
 8004f88:	6033      	str	r3, [r6, #0]
 8004f8a:	e019      	b.n	8004fc0 <_malloc_r+0xb0>
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	dac9      	bge.n	8004f24 <_malloc_r+0x14>
 8004f90:	230c      	movs	r3, #12
 8004f92:	602b      	str	r3, [r5, #0]
 8004f94:	2000      	movs	r0, #0
 8004f96:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004f98:	6821      	ldr	r1, [r4, #0]
 8004f9a:	1bc9      	subs	r1, r1, r7
 8004f9c:	d420      	bmi.n	8004fe0 <_malloc_r+0xd0>
 8004f9e:	290b      	cmp	r1, #11
 8004fa0:	d90a      	bls.n	8004fb8 <_malloc_r+0xa8>
 8004fa2:	19e2      	adds	r2, r4, r7
 8004fa4:	6027      	str	r7, [r4, #0]
 8004fa6:	42a3      	cmp	r3, r4
 8004fa8:	d104      	bne.n	8004fb4 <_malloc_r+0xa4>
 8004faa:	6032      	str	r2, [r6, #0]
 8004fac:	6863      	ldr	r3, [r4, #4]
 8004fae:	6011      	str	r1, [r2, #0]
 8004fb0:	6053      	str	r3, [r2, #4]
 8004fb2:	e005      	b.n	8004fc0 <_malloc_r+0xb0>
 8004fb4:	605a      	str	r2, [r3, #4]
 8004fb6:	e7f9      	b.n	8004fac <_malloc_r+0x9c>
 8004fb8:	6862      	ldr	r2, [r4, #4]
 8004fba:	42a3      	cmp	r3, r4
 8004fbc:	d10e      	bne.n	8004fdc <_malloc_r+0xcc>
 8004fbe:	6032      	str	r2, [r6, #0]
 8004fc0:	0028      	movs	r0, r5
 8004fc2:	f000 f82d 	bl	8005020 <__malloc_unlock>
 8004fc6:	0020      	movs	r0, r4
 8004fc8:	2207      	movs	r2, #7
 8004fca:	300b      	adds	r0, #11
 8004fcc:	1d23      	adds	r3, r4, #4
 8004fce:	4390      	bics	r0, r2
 8004fd0:	1ac2      	subs	r2, r0, r3
 8004fd2:	4298      	cmp	r0, r3
 8004fd4:	d0df      	beq.n	8004f96 <_malloc_r+0x86>
 8004fd6:	1a1b      	subs	r3, r3, r0
 8004fd8:	50a3      	str	r3, [r4, r2]
 8004fda:	e7dc      	b.n	8004f96 <_malloc_r+0x86>
 8004fdc:	605a      	str	r2, [r3, #4]
 8004fde:	e7ef      	b.n	8004fc0 <_malloc_r+0xb0>
 8004fe0:	0023      	movs	r3, r4
 8004fe2:	6864      	ldr	r4, [r4, #4]
 8004fe4:	e7a6      	b.n	8004f34 <_malloc_r+0x24>
 8004fe6:	9c00      	ldr	r4, [sp, #0]
 8004fe8:	6863      	ldr	r3, [r4, #4]
 8004fea:	9300      	str	r3, [sp, #0]
 8004fec:	e7ad      	b.n	8004f4a <_malloc_r+0x3a>
 8004fee:	001a      	movs	r2, r3
 8004ff0:	685b      	ldr	r3, [r3, #4]
 8004ff2:	42a3      	cmp	r3, r4
 8004ff4:	d1fb      	bne.n	8004fee <_malloc_r+0xde>
 8004ff6:	2300      	movs	r3, #0
 8004ff8:	e7da      	b.n	8004fb0 <_malloc_r+0xa0>
 8004ffa:	230c      	movs	r3, #12
 8004ffc:	0028      	movs	r0, r5
 8004ffe:	602b      	str	r3, [r5, #0]
 8005000:	f000 f80e 	bl	8005020 <__malloc_unlock>
 8005004:	e7c6      	b.n	8004f94 <_malloc_r+0x84>
 8005006:	6007      	str	r7, [r0, #0]
 8005008:	e7da      	b.n	8004fc0 <_malloc_r+0xb0>
 800500a:	46c0      	nop			@ (mov r8, r8)
 800500c:	200003f0 	.word	0x200003f0

08005010 <__malloc_lock>:
 8005010:	b510      	push	{r4, lr}
 8005012:	4802      	ldr	r0, [pc, #8]	@ (800501c <__malloc_lock+0xc>)
 8005014:	f7ff f877 	bl	8004106 <__retarget_lock_acquire_recursive>
 8005018:	bd10      	pop	{r4, pc}
 800501a:	46c0      	nop			@ (mov r8, r8)
 800501c:	200003e8 	.word	0x200003e8

08005020 <__malloc_unlock>:
 8005020:	b510      	push	{r4, lr}
 8005022:	4802      	ldr	r0, [pc, #8]	@ (800502c <__malloc_unlock+0xc>)
 8005024:	f7ff f870 	bl	8004108 <__retarget_lock_release_recursive>
 8005028:	bd10      	pop	{r4, pc}
 800502a:	46c0      	nop			@ (mov r8, r8)
 800502c:	200003e8 	.word	0x200003e8

08005030 <_Balloc>:
 8005030:	b570      	push	{r4, r5, r6, lr}
 8005032:	69c5      	ldr	r5, [r0, #28]
 8005034:	0006      	movs	r6, r0
 8005036:	000c      	movs	r4, r1
 8005038:	2d00      	cmp	r5, #0
 800503a:	d10e      	bne.n	800505a <_Balloc+0x2a>
 800503c:	2010      	movs	r0, #16
 800503e:	f7ff ff3b 	bl	8004eb8 <malloc>
 8005042:	1e02      	subs	r2, r0, #0
 8005044:	61f0      	str	r0, [r6, #28]
 8005046:	d104      	bne.n	8005052 <_Balloc+0x22>
 8005048:	216b      	movs	r1, #107	@ 0x6b
 800504a:	4b19      	ldr	r3, [pc, #100]	@ (80050b0 <_Balloc+0x80>)
 800504c:	4819      	ldr	r0, [pc, #100]	@ (80050b4 <_Balloc+0x84>)
 800504e:	f000 fc61 	bl	8005914 <__assert_func>
 8005052:	6045      	str	r5, [r0, #4]
 8005054:	6085      	str	r5, [r0, #8]
 8005056:	6005      	str	r5, [r0, #0]
 8005058:	60c5      	str	r5, [r0, #12]
 800505a:	69f5      	ldr	r5, [r6, #28]
 800505c:	68eb      	ldr	r3, [r5, #12]
 800505e:	2b00      	cmp	r3, #0
 8005060:	d013      	beq.n	800508a <_Balloc+0x5a>
 8005062:	69f3      	ldr	r3, [r6, #28]
 8005064:	00a2      	lsls	r2, r4, #2
 8005066:	68db      	ldr	r3, [r3, #12]
 8005068:	189b      	adds	r3, r3, r2
 800506a:	6818      	ldr	r0, [r3, #0]
 800506c:	2800      	cmp	r0, #0
 800506e:	d118      	bne.n	80050a2 <_Balloc+0x72>
 8005070:	2101      	movs	r1, #1
 8005072:	000d      	movs	r5, r1
 8005074:	40a5      	lsls	r5, r4
 8005076:	1d6a      	adds	r2, r5, #5
 8005078:	0030      	movs	r0, r6
 800507a:	0092      	lsls	r2, r2, #2
 800507c:	f000 fc68 	bl	8005950 <_calloc_r>
 8005080:	2800      	cmp	r0, #0
 8005082:	d00c      	beq.n	800509e <_Balloc+0x6e>
 8005084:	6044      	str	r4, [r0, #4]
 8005086:	6085      	str	r5, [r0, #8]
 8005088:	e00d      	b.n	80050a6 <_Balloc+0x76>
 800508a:	2221      	movs	r2, #33	@ 0x21
 800508c:	2104      	movs	r1, #4
 800508e:	0030      	movs	r0, r6
 8005090:	f000 fc5e 	bl	8005950 <_calloc_r>
 8005094:	69f3      	ldr	r3, [r6, #28]
 8005096:	60e8      	str	r0, [r5, #12]
 8005098:	68db      	ldr	r3, [r3, #12]
 800509a:	2b00      	cmp	r3, #0
 800509c:	d1e1      	bne.n	8005062 <_Balloc+0x32>
 800509e:	2000      	movs	r0, #0
 80050a0:	bd70      	pop	{r4, r5, r6, pc}
 80050a2:	6802      	ldr	r2, [r0, #0]
 80050a4:	601a      	str	r2, [r3, #0]
 80050a6:	2300      	movs	r3, #0
 80050a8:	6103      	str	r3, [r0, #16]
 80050aa:	60c3      	str	r3, [r0, #12]
 80050ac:	e7f8      	b.n	80050a0 <_Balloc+0x70>
 80050ae:	46c0      	nop			@ (mov r8, r8)
 80050b0:	08006091 	.word	0x08006091
 80050b4:	08006111 	.word	0x08006111

080050b8 <_Bfree>:
 80050b8:	b570      	push	{r4, r5, r6, lr}
 80050ba:	69c6      	ldr	r6, [r0, #28]
 80050bc:	0005      	movs	r5, r0
 80050be:	000c      	movs	r4, r1
 80050c0:	2e00      	cmp	r6, #0
 80050c2:	d10e      	bne.n	80050e2 <_Bfree+0x2a>
 80050c4:	2010      	movs	r0, #16
 80050c6:	f7ff fef7 	bl	8004eb8 <malloc>
 80050ca:	1e02      	subs	r2, r0, #0
 80050cc:	61e8      	str	r0, [r5, #28]
 80050ce:	d104      	bne.n	80050da <_Bfree+0x22>
 80050d0:	218f      	movs	r1, #143	@ 0x8f
 80050d2:	4b09      	ldr	r3, [pc, #36]	@ (80050f8 <_Bfree+0x40>)
 80050d4:	4809      	ldr	r0, [pc, #36]	@ (80050fc <_Bfree+0x44>)
 80050d6:	f000 fc1d 	bl	8005914 <__assert_func>
 80050da:	6046      	str	r6, [r0, #4]
 80050dc:	6086      	str	r6, [r0, #8]
 80050de:	6006      	str	r6, [r0, #0]
 80050e0:	60c6      	str	r6, [r0, #12]
 80050e2:	2c00      	cmp	r4, #0
 80050e4:	d007      	beq.n	80050f6 <_Bfree+0x3e>
 80050e6:	69eb      	ldr	r3, [r5, #28]
 80050e8:	6862      	ldr	r2, [r4, #4]
 80050ea:	68db      	ldr	r3, [r3, #12]
 80050ec:	0092      	lsls	r2, r2, #2
 80050ee:	189b      	adds	r3, r3, r2
 80050f0:	681a      	ldr	r2, [r3, #0]
 80050f2:	6022      	str	r2, [r4, #0]
 80050f4:	601c      	str	r4, [r3, #0]
 80050f6:	bd70      	pop	{r4, r5, r6, pc}
 80050f8:	08006091 	.word	0x08006091
 80050fc:	08006111 	.word	0x08006111

08005100 <__multadd>:
 8005100:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005102:	000f      	movs	r7, r1
 8005104:	9001      	str	r0, [sp, #4]
 8005106:	000c      	movs	r4, r1
 8005108:	001e      	movs	r6, r3
 800510a:	2000      	movs	r0, #0
 800510c:	690d      	ldr	r5, [r1, #16]
 800510e:	3714      	adds	r7, #20
 8005110:	683b      	ldr	r3, [r7, #0]
 8005112:	3001      	adds	r0, #1
 8005114:	b299      	uxth	r1, r3
 8005116:	4351      	muls	r1, r2
 8005118:	0c1b      	lsrs	r3, r3, #16
 800511a:	4353      	muls	r3, r2
 800511c:	1989      	adds	r1, r1, r6
 800511e:	0c0e      	lsrs	r6, r1, #16
 8005120:	199b      	adds	r3, r3, r6
 8005122:	0c1e      	lsrs	r6, r3, #16
 8005124:	b289      	uxth	r1, r1
 8005126:	041b      	lsls	r3, r3, #16
 8005128:	185b      	adds	r3, r3, r1
 800512a:	c708      	stmia	r7!, {r3}
 800512c:	4285      	cmp	r5, r0
 800512e:	dcef      	bgt.n	8005110 <__multadd+0x10>
 8005130:	2e00      	cmp	r6, #0
 8005132:	d022      	beq.n	800517a <__multadd+0x7a>
 8005134:	68a3      	ldr	r3, [r4, #8]
 8005136:	42ab      	cmp	r3, r5
 8005138:	dc19      	bgt.n	800516e <__multadd+0x6e>
 800513a:	6861      	ldr	r1, [r4, #4]
 800513c:	9801      	ldr	r0, [sp, #4]
 800513e:	3101      	adds	r1, #1
 8005140:	f7ff ff76 	bl	8005030 <_Balloc>
 8005144:	1e07      	subs	r7, r0, #0
 8005146:	d105      	bne.n	8005154 <__multadd+0x54>
 8005148:	003a      	movs	r2, r7
 800514a:	21ba      	movs	r1, #186	@ 0xba
 800514c:	4b0c      	ldr	r3, [pc, #48]	@ (8005180 <__multadd+0x80>)
 800514e:	480d      	ldr	r0, [pc, #52]	@ (8005184 <__multadd+0x84>)
 8005150:	f000 fbe0 	bl	8005914 <__assert_func>
 8005154:	0021      	movs	r1, r4
 8005156:	6922      	ldr	r2, [r4, #16]
 8005158:	310c      	adds	r1, #12
 800515a:	3202      	adds	r2, #2
 800515c:	0092      	lsls	r2, r2, #2
 800515e:	300c      	adds	r0, #12
 8005160:	f000 fbce 	bl	8005900 <memcpy>
 8005164:	0021      	movs	r1, r4
 8005166:	9801      	ldr	r0, [sp, #4]
 8005168:	f7ff ffa6 	bl	80050b8 <_Bfree>
 800516c:	003c      	movs	r4, r7
 800516e:	1d2b      	adds	r3, r5, #4
 8005170:	009b      	lsls	r3, r3, #2
 8005172:	18e3      	adds	r3, r4, r3
 8005174:	3501      	adds	r5, #1
 8005176:	605e      	str	r6, [r3, #4]
 8005178:	6125      	str	r5, [r4, #16]
 800517a:	0020      	movs	r0, r4
 800517c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800517e:	46c0      	nop			@ (mov r8, r8)
 8005180:	08006100 	.word	0x08006100
 8005184:	08006111 	.word	0x08006111

08005188 <__hi0bits>:
 8005188:	2280      	movs	r2, #128	@ 0x80
 800518a:	0003      	movs	r3, r0
 800518c:	0252      	lsls	r2, r2, #9
 800518e:	2000      	movs	r0, #0
 8005190:	4293      	cmp	r3, r2
 8005192:	d201      	bcs.n	8005198 <__hi0bits+0x10>
 8005194:	041b      	lsls	r3, r3, #16
 8005196:	3010      	adds	r0, #16
 8005198:	2280      	movs	r2, #128	@ 0x80
 800519a:	0452      	lsls	r2, r2, #17
 800519c:	4293      	cmp	r3, r2
 800519e:	d201      	bcs.n	80051a4 <__hi0bits+0x1c>
 80051a0:	3008      	adds	r0, #8
 80051a2:	021b      	lsls	r3, r3, #8
 80051a4:	2280      	movs	r2, #128	@ 0x80
 80051a6:	0552      	lsls	r2, r2, #21
 80051a8:	4293      	cmp	r3, r2
 80051aa:	d201      	bcs.n	80051b0 <__hi0bits+0x28>
 80051ac:	3004      	adds	r0, #4
 80051ae:	011b      	lsls	r3, r3, #4
 80051b0:	2280      	movs	r2, #128	@ 0x80
 80051b2:	05d2      	lsls	r2, r2, #23
 80051b4:	4293      	cmp	r3, r2
 80051b6:	d201      	bcs.n	80051bc <__hi0bits+0x34>
 80051b8:	3002      	adds	r0, #2
 80051ba:	009b      	lsls	r3, r3, #2
 80051bc:	2b00      	cmp	r3, #0
 80051be:	db03      	blt.n	80051c8 <__hi0bits+0x40>
 80051c0:	3001      	adds	r0, #1
 80051c2:	4213      	tst	r3, r2
 80051c4:	d100      	bne.n	80051c8 <__hi0bits+0x40>
 80051c6:	2020      	movs	r0, #32
 80051c8:	4770      	bx	lr

080051ca <__lo0bits>:
 80051ca:	6803      	ldr	r3, [r0, #0]
 80051cc:	0001      	movs	r1, r0
 80051ce:	2207      	movs	r2, #7
 80051d0:	0018      	movs	r0, r3
 80051d2:	4010      	ands	r0, r2
 80051d4:	4213      	tst	r3, r2
 80051d6:	d00d      	beq.n	80051f4 <__lo0bits+0x2a>
 80051d8:	3a06      	subs	r2, #6
 80051da:	2000      	movs	r0, #0
 80051dc:	4213      	tst	r3, r2
 80051de:	d105      	bne.n	80051ec <__lo0bits+0x22>
 80051e0:	3002      	adds	r0, #2
 80051e2:	4203      	tst	r3, r0
 80051e4:	d003      	beq.n	80051ee <__lo0bits+0x24>
 80051e6:	40d3      	lsrs	r3, r2
 80051e8:	0010      	movs	r0, r2
 80051ea:	600b      	str	r3, [r1, #0]
 80051ec:	4770      	bx	lr
 80051ee:	089b      	lsrs	r3, r3, #2
 80051f0:	600b      	str	r3, [r1, #0]
 80051f2:	e7fb      	b.n	80051ec <__lo0bits+0x22>
 80051f4:	b29a      	uxth	r2, r3
 80051f6:	2a00      	cmp	r2, #0
 80051f8:	d101      	bne.n	80051fe <__lo0bits+0x34>
 80051fa:	2010      	movs	r0, #16
 80051fc:	0c1b      	lsrs	r3, r3, #16
 80051fe:	b2da      	uxtb	r2, r3
 8005200:	2a00      	cmp	r2, #0
 8005202:	d101      	bne.n	8005208 <__lo0bits+0x3e>
 8005204:	3008      	adds	r0, #8
 8005206:	0a1b      	lsrs	r3, r3, #8
 8005208:	071a      	lsls	r2, r3, #28
 800520a:	d101      	bne.n	8005210 <__lo0bits+0x46>
 800520c:	3004      	adds	r0, #4
 800520e:	091b      	lsrs	r3, r3, #4
 8005210:	079a      	lsls	r2, r3, #30
 8005212:	d101      	bne.n	8005218 <__lo0bits+0x4e>
 8005214:	3002      	adds	r0, #2
 8005216:	089b      	lsrs	r3, r3, #2
 8005218:	07da      	lsls	r2, r3, #31
 800521a:	d4e9      	bmi.n	80051f0 <__lo0bits+0x26>
 800521c:	3001      	adds	r0, #1
 800521e:	085b      	lsrs	r3, r3, #1
 8005220:	d1e6      	bne.n	80051f0 <__lo0bits+0x26>
 8005222:	2020      	movs	r0, #32
 8005224:	e7e2      	b.n	80051ec <__lo0bits+0x22>
	...

08005228 <__i2b>:
 8005228:	b510      	push	{r4, lr}
 800522a:	000c      	movs	r4, r1
 800522c:	2101      	movs	r1, #1
 800522e:	f7ff feff 	bl	8005030 <_Balloc>
 8005232:	2800      	cmp	r0, #0
 8005234:	d107      	bne.n	8005246 <__i2b+0x1e>
 8005236:	2146      	movs	r1, #70	@ 0x46
 8005238:	4c05      	ldr	r4, [pc, #20]	@ (8005250 <__i2b+0x28>)
 800523a:	0002      	movs	r2, r0
 800523c:	4b05      	ldr	r3, [pc, #20]	@ (8005254 <__i2b+0x2c>)
 800523e:	0020      	movs	r0, r4
 8005240:	31ff      	adds	r1, #255	@ 0xff
 8005242:	f000 fb67 	bl	8005914 <__assert_func>
 8005246:	2301      	movs	r3, #1
 8005248:	6144      	str	r4, [r0, #20]
 800524a:	6103      	str	r3, [r0, #16]
 800524c:	bd10      	pop	{r4, pc}
 800524e:	46c0      	nop			@ (mov r8, r8)
 8005250:	08006111 	.word	0x08006111
 8005254:	08006100 	.word	0x08006100

08005258 <__multiply>:
 8005258:	b5f0      	push	{r4, r5, r6, r7, lr}
 800525a:	0014      	movs	r4, r2
 800525c:	690a      	ldr	r2, [r1, #16]
 800525e:	6923      	ldr	r3, [r4, #16]
 8005260:	000d      	movs	r5, r1
 8005262:	b08b      	sub	sp, #44	@ 0x2c
 8005264:	429a      	cmp	r2, r3
 8005266:	db02      	blt.n	800526e <__multiply+0x16>
 8005268:	0023      	movs	r3, r4
 800526a:	000c      	movs	r4, r1
 800526c:	001d      	movs	r5, r3
 800526e:	6927      	ldr	r7, [r4, #16]
 8005270:	692e      	ldr	r6, [r5, #16]
 8005272:	6861      	ldr	r1, [r4, #4]
 8005274:	19bb      	adds	r3, r7, r6
 8005276:	9303      	str	r3, [sp, #12]
 8005278:	68a3      	ldr	r3, [r4, #8]
 800527a:	19ba      	adds	r2, r7, r6
 800527c:	4293      	cmp	r3, r2
 800527e:	da00      	bge.n	8005282 <__multiply+0x2a>
 8005280:	3101      	adds	r1, #1
 8005282:	f7ff fed5 	bl	8005030 <_Balloc>
 8005286:	9002      	str	r0, [sp, #8]
 8005288:	2800      	cmp	r0, #0
 800528a:	d106      	bne.n	800529a <__multiply+0x42>
 800528c:	21b1      	movs	r1, #177	@ 0xb1
 800528e:	4b49      	ldr	r3, [pc, #292]	@ (80053b4 <__multiply+0x15c>)
 8005290:	4849      	ldr	r0, [pc, #292]	@ (80053b8 <__multiply+0x160>)
 8005292:	9a02      	ldr	r2, [sp, #8]
 8005294:	0049      	lsls	r1, r1, #1
 8005296:	f000 fb3d 	bl	8005914 <__assert_func>
 800529a:	9b02      	ldr	r3, [sp, #8]
 800529c:	2200      	movs	r2, #0
 800529e:	3314      	adds	r3, #20
 80052a0:	469c      	mov	ip, r3
 80052a2:	19bb      	adds	r3, r7, r6
 80052a4:	009b      	lsls	r3, r3, #2
 80052a6:	4463      	add	r3, ip
 80052a8:	9304      	str	r3, [sp, #16]
 80052aa:	4663      	mov	r3, ip
 80052ac:	9904      	ldr	r1, [sp, #16]
 80052ae:	428b      	cmp	r3, r1
 80052b0:	d32a      	bcc.n	8005308 <__multiply+0xb0>
 80052b2:	0023      	movs	r3, r4
 80052b4:	00bf      	lsls	r7, r7, #2
 80052b6:	3314      	adds	r3, #20
 80052b8:	3514      	adds	r5, #20
 80052ba:	9308      	str	r3, [sp, #32]
 80052bc:	00b6      	lsls	r6, r6, #2
 80052be:	19db      	adds	r3, r3, r7
 80052c0:	9305      	str	r3, [sp, #20]
 80052c2:	19ab      	adds	r3, r5, r6
 80052c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80052c6:	2304      	movs	r3, #4
 80052c8:	9306      	str	r3, [sp, #24]
 80052ca:	0023      	movs	r3, r4
 80052cc:	9a05      	ldr	r2, [sp, #20]
 80052ce:	3315      	adds	r3, #21
 80052d0:	9501      	str	r5, [sp, #4]
 80052d2:	429a      	cmp	r2, r3
 80052d4:	d305      	bcc.n	80052e2 <__multiply+0x8a>
 80052d6:	1b13      	subs	r3, r2, r4
 80052d8:	3b15      	subs	r3, #21
 80052da:	089b      	lsrs	r3, r3, #2
 80052dc:	3301      	adds	r3, #1
 80052de:	009b      	lsls	r3, r3, #2
 80052e0:	9306      	str	r3, [sp, #24]
 80052e2:	9b01      	ldr	r3, [sp, #4]
 80052e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80052e6:	4293      	cmp	r3, r2
 80052e8:	d310      	bcc.n	800530c <__multiply+0xb4>
 80052ea:	9b03      	ldr	r3, [sp, #12]
 80052ec:	2b00      	cmp	r3, #0
 80052ee:	dd05      	ble.n	80052fc <__multiply+0xa4>
 80052f0:	9b04      	ldr	r3, [sp, #16]
 80052f2:	3b04      	subs	r3, #4
 80052f4:	9304      	str	r3, [sp, #16]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d056      	beq.n	80053aa <__multiply+0x152>
 80052fc:	9b02      	ldr	r3, [sp, #8]
 80052fe:	9a03      	ldr	r2, [sp, #12]
 8005300:	0018      	movs	r0, r3
 8005302:	611a      	str	r2, [r3, #16]
 8005304:	b00b      	add	sp, #44	@ 0x2c
 8005306:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005308:	c304      	stmia	r3!, {r2}
 800530a:	e7cf      	b.n	80052ac <__multiply+0x54>
 800530c:	9b01      	ldr	r3, [sp, #4]
 800530e:	6818      	ldr	r0, [r3, #0]
 8005310:	b280      	uxth	r0, r0
 8005312:	2800      	cmp	r0, #0
 8005314:	d01e      	beq.n	8005354 <__multiply+0xfc>
 8005316:	4667      	mov	r7, ip
 8005318:	2500      	movs	r5, #0
 800531a:	9e08      	ldr	r6, [sp, #32]
 800531c:	ce02      	ldmia	r6!, {r1}
 800531e:	683b      	ldr	r3, [r7, #0]
 8005320:	9307      	str	r3, [sp, #28]
 8005322:	b28b      	uxth	r3, r1
 8005324:	4343      	muls	r3, r0
 8005326:	001a      	movs	r2, r3
 8005328:	466b      	mov	r3, sp
 800532a:	0c09      	lsrs	r1, r1, #16
 800532c:	8b9b      	ldrh	r3, [r3, #28]
 800532e:	4341      	muls	r1, r0
 8005330:	18d3      	adds	r3, r2, r3
 8005332:	9a07      	ldr	r2, [sp, #28]
 8005334:	195b      	adds	r3, r3, r5
 8005336:	0c12      	lsrs	r2, r2, #16
 8005338:	1889      	adds	r1, r1, r2
 800533a:	0c1a      	lsrs	r2, r3, #16
 800533c:	188a      	adds	r2, r1, r2
 800533e:	b29b      	uxth	r3, r3
 8005340:	0c15      	lsrs	r5, r2, #16
 8005342:	0412      	lsls	r2, r2, #16
 8005344:	431a      	orrs	r2, r3
 8005346:	9b05      	ldr	r3, [sp, #20]
 8005348:	c704      	stmia	r7!, {r2}
 800534a:	42b3      	cmp	r3, r6
 800534c:	d8e6      	bhi.n	800531c <__multiply+0xc4>
 800534e:	4663      	mov	r3, ip
 8005350:	9a06      	ldr	r2, [sp, #24]
 8005352:	509d      	str	r5, [r3, r2]
 8005354:	9b01      	ldr	r3, [sp, #4]
 8005356:	6818      	ldr	r0, [r3, #0]
 8005358:	0c00      	lsrs	r0, r0, #16
 800535a:	d020      	beq.n	800539e <__multiply+0x146>
 800535c:	4663      	mov	r3, ip
 800535e:	0025      	movs	r5, r4
 8005360:	4661      	mov	r1, ip
 8005362:	2700      	movs	r7, #0
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	3514      	adds	r5, #20
 8005368:	682a      	ldr	r2, [r5, #0]
 800536a:	680e      	ldr	r6, [r1, #0]
 800536c:	b292      	uxth	r2, r2
 800536e:	4342      	muls	r2, r0
 8005370:	0c36      	lsrs	r6, r6, #16
 8005372:	1992      	adds	r2, r2, r6
 8005374:	19d2      	adds	r2, r2, r7
 8005376:	0416      	lsls	r6, r2, #16
 8005378:	b29b      	uxth	r3, r3
 800537a:	431e      	orrs	r6, r3
 800537c:	600e      	str	r6, [r1, #0]
 800537e:	cd40      	ldmia	r5!, {r6}
 8005380:	684b      	ldr	r3, [r1, #4]
 8005382:	0c36      	lsrs	r6, r6, #16
 8005384:	4346      	muls	r6, r0
 8005386:	b29b      	uxth	r3, r3
 8005388:	0c12      	lsrs	r2, r2, #16
 800538a:	18f3      	adds	r3, r6, r3
 800538c:	189b      	adds	r3, r3, r2
 800538e:	9a05      	ldr	r2, [sp, #20]
 8005390:	0c1f      	lsrs	r7, r3, #16
 8005392:	3104      	adds	r1, #4
 8005394:	42aa      	cmp	r2, r5
 8005396:	d8e7      	bhi.n	8005368 <__multiply+0x110>
 8005398:	4662      	mov	r2, ip
 800539a:	9906      	ldr	r1, [sp, #24]
 800539c:	5053      	str	r3, [r2, r1]
 800539e:	9b01      	ldr	r3, [sp, #4]
 80053a0:	3304      	adds	r3, #4
 80053a2:	9301      	str	r3, [sp, #4]
 80053a4:	2304      	movs	r3, #4
 80053a6:	449c      	add	ip, r3
 80053a8:	e79b      	b.n	80052e2 <__multiply+0x8a>
 80053aa:	9b03      	ldr	r3, [sp, #12]
 80053ac:	3b01      	subs	r3, #1
 80053ae:	9303      	str	r3, [sp, #12]
 80053b0:	e79b      	b.n	80052ea <__multiply+0x92>
 80053b2:	46c0      	nop			@ (mov r8, r8)
 80053b4:	08006100 	.word	0x08006100
 80053b8:	08006111 	.word	0x08006111

080053bc <__pow5mult>:
 80053bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80053be:	2303      	movs	r3, #3
 80053c0:	0015      	movs	r5, r2
 80053c2:	0007      	movs	r7, r0
 80053c4:	000e      	movs	r6, r1
 80053c6:	401a      	ands	r2, r3
 80053c8:	421d      	tst	r5, r3
 80053ca:	d008      	beq.n	80053de <__pow5mult+0x22>
 80053cc:	4925      	ldr	r1, [pc, #148]	@ (8005464 <__pow5mult+0xa8>)
 80053ce:	3a01      	subs	r2, #1
 80053d0:	0092      	lsls	r2, r2, #2
 80053d2:	5852      	ldr	r2, [r2, r1]
 80053d4:	2300      	movs	r3, #0
 80053d6:	0031      	movs	r1, r6
 80053d8:	f7ff fe92 	bl	8005100 <__multadd>
 80053dc:	0006      	movs	r6, r0
 80053de:	10ad      	asrs	r5, r5, #2
 80053e0:	d03d      	beq.n	800545e <__pow5mult+0xa2>
 80053e2:	69fc      	ldr	r4, [r7, #28]
 80053e4:	2c00      	cmp	r4, #0
 80053e6:	d10f      	bne.n	8005408 <__pow5mult+0x4c>
 80053e8:	2010      	movs	r0, #16
 80053ea:	f7ff fd65 	bl	8004eb8 <malloc>
 80053ee:	1e02      	subs	r2, r0, #0
 80053f0:	61f8      	str	r0, [r7, #28]
 80053f2:	d105      	bne.n	8005400 <__pow5mult+0x44>
 80053f4:	21b4      	movs	r1, #180	@ 0xb4
 80053f6:	4b1c      	ldr	r3, [pc, #112]	@ (8005468 <__pow5mult+0xac>)
 80053f8:	481c      	ldr	r0, [pc, #112]	@ (800546c <__pow5mult+0xb0>)
 80053fa:	31ff      	adds	r1, #255	@ 0xff
 80053fc:	f000 fa8a 	bl	8005914 <__assert_func>
 8005400:	6044      	str	r4, [r0, #4]
 8005402:	6084      	str	r4, [r0, #8]
 8005404:	6004      	str	r4, [r0, #0]
 8005406:	60c4      	str	r4, [r0, #12]
 8005408:	69fb      	ldr	r3, [r7, #28]
 800540a:	689c      	ldr	r4, [r3, #8]
 800540c:	9301      	str	r3, [sp, #4]
 800540e:	2c00      	cmp	r4, #0
 8005410:	d108      	bne.n	8005424 <__pow5mult+0x68>
 8005412:	0038      	movs	r0, r7
 8005414:	4916      	ldr	r1, [pc, #88]	@ (8005470 <__pow5mult+0xb4>)
 8005416:	f7ff ff07 	bl	8005228 <__i2b>
 800541a:	9b01      	ldr	r3, [sp, #4]
 800541c:	0004      	movs	r4, r0
 800541e:	6098      	str	r0, [r3, #8]
 8005420:	2300      	movs	r3, #0
 8005422:	6003      	str	r3, [r0, #0]
 8005424:	2301      	movs	r3, #1
 8005426:	421d      	tst	r5, r3
 8005428:	d00a      	beq.n	8005440 <__pow5mult+0x84>
 800542a:	0031      	movs	r1, r6
 800542c:	0022      	movs	r2, r4
 800542e:	0038      	movs	r0, r7
 8005430:	f7ff ff12 	bl	8005258 <__multiply>
 8005434:	0031      	movs	r1, r6
 8005436:	9001      	str	r0, [sp, #4]
 8005438:	0038      	movs	r0, r7
 800543a:	f7ff fe3d 	bl	80050b8 <_Bfree>
 800543e:	9e01      	ldr	r6, [sp, #4]
 8005440:	106d      	asrs	r5, r5, #1
 8005442:	d00c      	beq.n	800545e <__pow5mult+0xa2>
 8005444:	6820      	ldr	r0, [r4, #0]
 8005446:	2800      	cmp	r0, #0
 8005448:	d107      	bne.n	800545a <__pow5mult+0x9e>
 800544a:	0022      	movs	r2, r4
 800544c:	0021      	movs	r1, r4
 800544e:	0038      	movs	r0, r7
 8005450:	f7ff ff02 	bl	8005258 <__multiply>
 8005454:	2300      	movs	r3, #0
 8005456:	6020      	str	r0, [r4, #0]
 8005458:	6003      	str	r3, [r0, #0]
 800545a:	0004      	movs	r4, r0
 800545c:	e7e2      	b.n	8005424 <__pow5mult+0x68>
 800545e:	0030      	movs	r0, r6
 8005460:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005462:	46c0      	nop			@ (mov r8, r8)
 8005464:	0800616c 	.word	0x0800616c
 8005468:	08006091 	.word	0x08006091
 800546c:	08006111 	.word	0x08006111
 8005470:	00000271 	.word	0x00000271

08005474 <__lshift>:
 8005474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005476:	000c      	movs	r4, r1
 8005478:	0016      	movs	r6, r2
 800547a:	6923      	ldr	r3, [r4, #16]
 800547c:	1157      	asrs	r7, r2, #5
 800547e:	b085      	sub	sp, #20
 8005480:	18fb      	adds	r3, r7, r3
 8005482:	9301      	str	r3, [sp, #4]
 8005484:	3301      	adds	r3, #1
 8005486:	9300      	str	r3, [sp, #0]
 8005488:	6849      	ldr	r1, [r1, #4]
 800548a:	68a3      	ldr	r3, [r4, #8]
 800548c:	9002      	str	r0, [sp, #8]
 800548e:	9a00      	ldr	r2, [sp, #0]
 8005490:	4293      	cmp	r3, r2
 8005492:	db10      	blt.n	80054b6 <__lshift+0x42>
 8005494:	9802      	ldr	r0, [sp, #8]
 8005496:	f7ff fdcb 	bl	8005030 <_Balloc>
 800549a:	2300      	movs	r3, #0
 800549c:	0001      	movs	r1, r0
 800549e:	0005      	movs	r5, r0
 80054a0:	001a      	movs	r2, r3
 80054a2:	3114      	adds	r1, #20
 80054a4:	4298      	cmp	r0, r3
 80054a6:	d10c      	bne.n	80054c2 <__lshift+0x4e>
 80054a8:	21ef      	movs	r1, #239	@ 0xef
 80054aa:	002a      	movs	r2, r5
 80054ac:	4b25      	ldr	r3, [pc, #148]	@ (8005544 <__lshift+0xd0>)
 80054ae:	4826      	ldr	r0, [pc, #152]	@ (8005548 <__lshift+0xd4>)
 80054b0:	0049      	lsls	r1, r1, #1
 80054b2:	f000 fa2f 	bl	8005914 <__assert_func>
 80054b6:	3101      	adds	r1, #1
 80054b8:	005b      	lsls	r3, r3, #1
 80054ba:	e7e8      	b.n	800548e <__lshift+0x1a>
 80054bc:	0098      	lsls	r0, r3, #2
 80054be:	500a      	str	r2, [r1, r0]
 80054c0:	3301      	adds	r3, #1
 80054c2:	42bb      	cmp	r3, r7
 80054c4:	dbfa      	blt.n	80054bc <__lshift+0x48>
 80054c6:	43fb      	mvns	r3, r7
 80054c8:	17db      	asrs	r3, r3, #31
 80054ca:	401f      	ands	r7, r3
 80054cc:	00bf      	lsls	r7, r7, #2
 80054ce:	0023      	movs	r3, r4
 80054d0:	201f      	movs	r0, #31
 80054d2:	19c9      	adds	r1, r1, r7
 80054d4:	0037      	movs	r7, r6
 80054d6:	6922      	ldr	r2, [r4, #16]
 80054d8:	3314      	adds	r3, #20
 80054da:	0092      	lsls	r2, r2, #2
 80054dc:	189a      	adds	r2, r3, r2
 80054de:	4007      	ands	r7, r0
 80054e0:	4206      	tst	r6, r0
 80054e2:	d029      	beq.n	8005538 <__lshift+0xc4>
 80054e4:	3001      	adds	r0, #1
 80054e6:	1bc0      	subs	r0, r0, r7
 80054e8:	9003      	str	r0, [sp, #12]
 80054ea:	468c      	mov	ip, r1
 80054ec:	2000      	movs	r0, #0
 80054ee:	681e      	ldr	r6, [r3, #0]
 80054f0:	40be      	lsls	r6, r7
 80054f2:	4306      	orrs	r6, r0
 80054f4:	4660      	mov	r0, ip
 80054f6:	c040      	stmia	r0!, {r6}
 80054f8:	4684      	mov	ip, r0
 80054fa:	9e03      	ldr	r6, [sp, #12]
 80054fc:	cb01      	ldmia	r3!, {r0}
 80054fe:	40f0      	lsrs	r0, r6
 8005500:	429a      	cmp	r2, r3
 8005502:	d8f4      	bhi.n	80054ee <__lshift+0x7a>
 8005504:	0026      	movs	r6, r4
 8005506:	3615      	adds	r6, #21
 8005508:	2304      	movs	r3, #4
 800550a:	42b2      	cmp	r2, r6
 800550c:	d304      	bcc.n	8005518 <__lshift+0xa4>
 800550e:	1b13      	subs	r3, r2, r4
 8005510:	3b15      	subs	r3, #21
 8005512:	089b      	lsrs	r3, r3, #2
 8005514:	3301      	adds	r3, #1
 8005516:	009b      	lsls	r3, r3, #2
 8005518:	50c8      	str	r0, [r1, r3]
 800551a:	2800      	cmp	r0, #0
 800551c:	d002      	beq.n	8005524 <__lshift+0xb0>
 800551e:	9b01      	ldr	r3, [sp, #4]
 8005520:	3302      	adds	r3, #2
 8005522:	9300      	str	r3, [sp, #0]
 8005524:	9b00      	ldr	r3, [sp, #0]
 8005526:	9802      	ldr	r0, [sp, #8]
 8005528:	3b01      	subs	r3, #1
 800552a:	0021      	movs	r1, r4
 800552c:	612b      	str	r3, [r5, #16]
 800552e:	f7ff fdc3 	bl	80050b8 <_Bfree>
 8005532:	0028      	movs	r0, r5
 8005534:	b005      	add	sp, #20
 8005536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005538:	cb01      	ldmia	r3!, {r0}
 800553a:	c101      	stmia	r1!, {r0}
 800553c:	429a      	cmp	r2, r3
 800553e:	d8fb      	bhi.n	8005538 <__lshift+0xc4>
 8005540:	e7f0      	b.n	8005524 <__lshift+0xb0>
 8005542:	46c0      	nop			@ (mov r8, r8)
 8005544:	08006100 	.word	0x08006100
 8005548:	08006111 	.word	0x08006111

0800554c <__mcmp>:
 800554c:	b530      	push	{r4, r5, lr}
 800554e:	690b      	ldr	r3, [r1, #16]
 8005550:	6904      	ldr	r4, [r0, #16]
 8005552:	0002      	movs	r2, r0
 8005554:	1ae0      	subs	r0, r4, r3
 8005556:	429c      	cmp	r4, r3
 8005558:	d10f      	bne.n	800557a <__mcmp+0x2e>
 800555a:	3214      	adds	r2, #20
 800555c:	009b      	lsls	r3, r3, #2
 800555e:	3114      	adds	r1, #20
 8005560:	0014      	movs	r4, r2
 8005562:	18c9      	adds	r1, r1, r3
 8005564:	18d2      	adds	r2, r2, r3
 8005566:	3a04      	subs	r2, #4
 8005568:	3904      	subs	r1, #4
 800556a:	6815      	ldr	r5, [r2, #0]
 800556c:	680b      	ldr	r3, [r1, #0]
 800556e:	429d      	cmp	r5, r3
 8005570:	d004      	beq.n	800557c <__mcmp+0x30>
 8005572:	2001      	movs	r0, #1
 8005574:	429d      	cmp	r5, r3
 8005576:	d200      	bcs.n	800557a <__mcmp+0x2e>
 8005578:	3802      	subs	r0, #2
 800557a:	bd30      	pop	{r4, r5, pc}
 800557c:	4294      	cmp	r4, r2
 800557e:	d3f2      	bcc.n	8005566 <__mcmp+0x1a>
 8005580:	e7fb      	b.n	800557a <__mcmp+0x2e>
	...

08005584 <__mdiff>:
 8005584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005586:	000c      	movs	r4, r1
 8005588:	b087      	sub	sp, #28
 800558a:	9000      	str	r0, [sp, #0]
 800558c:	0011      	movs	r1, r2
 800558e:	0020      	movs	r0, r4
 8005590:	0017      	movs	r7, r2
 8005592:	f7ff ffdb 	bl	800554c <__mcmp>
 8005596:	1e05      	subs	r5, r0, #0
 8005598:	d110      	bne.n	80055bc <__mdiff+0x38>
 800559a:	0001      	movs	r1, r0
 800559c:	9800      	ldr	r0, [sp, #0]
 800559e:	f7ff fd47 	bl	8005030 <_Balloc>
 80055a2:	1e02      	subs	r2, r0, #0
 80055a4:	d104      	bne.n	80055b0 <__mdiff+0x2c>
 80055a6:	4b40      	ldr	r3, [pc, #256]	@ (80056a8 <__mdiff+0x124>)
 80055a8:	4840      	ldr	r0, [pc, #256]	@ (80056ac <__mdiff+0x128>)
 80055aa:	4941      	ldr	r1, [pc, #260]	@ (80056b0 <__mdiff+0x12c>)
 80055ac:	f000 f9b2 	bl	8005914 <__assert_func>
 80055b0:	2301      	movs	r3, #1
 80055b2:	6145      	str	r5, [r0, #20]
 80055b4:	6103      	str	r3, [r0, #16]
 80055b6:	0010      	movs	r0, r2
 80055b8:	b007      	add	sp, #28
 80055ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80055bc:	2600      	movs	r6, #0
 80055be:	42b0      	cmp	r0, r6
 80055c0:	da03      	bge.n	80055ca <__mdiff+0x46>
 80055c2:	0023      	movs	r3, r4
 80055c4:	003c      	movs	r4, r7
 80055c6:	001f      	movs	r7, r3
 80055c8:	3601      	adds	r6, #1
 80055ca:	6861      	ldr	r1, [r4, #4]
 80055cc:	9800      	ldr	r0, [sp, #0]
 80055ce:	f7ff fd2f 	bl	8005030 <_Balloc>
 80055d2:	1e02      	subs	r2, r0, #0
 80055d4:	d103      	bne.n	80055de <__mdiff+0x5a>
 80055d6:	4b34      	ldr	r3, [pc, #208]	@ (80056a8 <__mdiff+0x124>)
 80055d8:	4834      	ldr	r0, [pc, #208]	@ (80056ac <__mdiff+0x128>)
 80055da:	4936      	ldr	r1, [pc, #216]	@ (80056b4 <__mdiff+0x130>)
 80055dc:	e7e6      	b.n	80055ac <__mdiff+0x28>
 80055de:	6923      	ldr	r3, [r4, #16]
 80055e0:	3414      	adds	r4, #20
 80055e2:	9300      	str	r3, [sp, #0]
 80055e4:	009b      	lsls	r3, r3, #2
 80055e6:	18e3      	adds	r3, r4, r3
 80055e8:	0021      	movs	r1, r4
 80055ea:	9401      	str	r4, [sp, #4]
 80055ec:	003c      	movs	r4, r7
 80055ee:	9302      	str	r3, [sp, #8]
 80055f0:	693b      	ldr	r3, [r7, #16]
 80055f2:	3414      	adds	r4, #20
 80055f4:	009b      	lsls	r3, r3, #2
 80055f6:	18e3      	adds	r3, r4, r3
 80055f8:	9303      	str	r3, [sp, #12]
 80055fa:	0003      	movs	r3, r0
 80055fc:	60c6      	str	r6, [r0, #12]
 80055fe:	468c      	mov	ip, r1
 8005600:	2000      	movs	r0, #0
 8005602:	3314      	adds	r3, #20
 8005604:	9304      	str	r3, [sp, #16]
 8005606:	9305      	str	r3, [sp, #20]
 8005608:	4663      	mov	r3, ip
 800560a:	cb20      	ldmia	r3!, {r5}
 800560c:	b2a9      	uxth	r1, r5
 800560e:	000e      	movs	r6, r1
 8005610:	469c      	mov	ip, r3
 8005612:	cc08      	ldmia	r4!, {r3}
 8005614:	0c2d      	lsrs	r5, r5, #16
 8005616:	b299      	uxth	r1, r3
 8005618:	1a71      	subs	r1, r6, r1
 800561a:	1809      	adds	r1, r1, r0
 800561c:	0c1b      	lsrs	r3, r3, #16
 800561e:	1408      	asrs	r0, r1, #16
 8005620:	1aeb      	subs	r3, r5, r3
 8005622:	181b      	adds	r3, r3, r0
 8005624:	1418      	asrs	r0, r3, #16
 8005626:	b289      	uxth	r1, r1
 8005628:	041b      	lsls	r3, r3, #16
 800562a:	4319      	orrs	r1, r3
 800562c:	9b05      	ldr	r3, [sp, #20]
 800562e:	c302      	stmia	r3!, {r1}
 8005630:	9305      	str	r3, [sp, #20]
 8005632:	9b03      	ldr	r3, [sp, #12]
 8005634:	42a3      	cmp	r3, r4
 8005636:	d8e7      	bhi.n	8005608 <__mdiff+0x84>
 8005638:	0039      	movs	r1, r7
 800563a:	9c03      	ldr	r4, [sp, #12]
 800563c:	3115      	adds	r1, #21
 800563e:	2304      	movs	r3, #4
 8005640:	428c      	cmp	r4, r1
 8005642:	d304      	bcc.n	800564e <__mdiff+0xca>
 8005644:	1be3      	subs	r3, r4, r7
 8005646:	3b15      	subs	r3, #21
 8005648:	089b      	lsrs	r3, r3, #2
 800564a:	3301      	adds	r3, #1
 800564c:	009b      	lsls	r3, r3, #2
 800564e:	9901      	ldr	r1, [sp, #4]
 8005650:	18cd      	adds	r5, r1, r3
 8005652:	9904      	ldr	r1, [sp, #16]
 8005654:	002e      	movs	r6, r5
 8005656:	18cb      	adds	r3, r1, r3
 8005658:	001f      	movs	r7, r3
 800565a:	9902      	ldr	r1, [sp, #8]
 800565c:	428e      	cmp	r6, r1
 800565e:	d311      	bcc.n	8005684 <__mdiff+0x100>
 8005660:	9c02      	ldr	r4, [sp, #8]
 8005662:	1ee9      	subs	r1, r5, #3
 8005664:	2000      	movs	r0, #0
 8005666:	428c      	cmp	r4, r1
 8005668:	d304      	bcc.n	8005674 <__mdiff+0xf0>
 800566a:	0021      	movs	r1, r4
 800566c:	3103      	adds	r1, #3
 800566e:	1b49      	subs	r1, r1, r5
 8005670:	0889      	lsrs	r1, r1, #2
 8005672:	0088      	lsls	r0, r1, #2
 8005674:	181b      	adds	r3, r3, r0
 8005676:	3b04      	subs	r3, #4
 8005678:	6819      	ldr	r1, [r3, #0]
 800567a:	2900      	cmp	r1, #0
 800567c:	d010      	beq.n	80056a0 <__mdiff+0x11c>
 800567e:	9b00      	ldr	r3, [sp, #0]
 8005680:	6113      	str	r3, [r2, #16]
 8005682:	e798      	b.n	80055b6 <__mdiff+0x32>
 8005684:	4684      	mov	ip, r0
 8005686:	ce02      	ldmia	r6!, {r1}
 8005688:	b288      	uxth	r0, r1
 800568a:	4460      	add	r0, ip
 800568c:	1400      	asrs	r0, r0, #16
 800568e:	0c0c      	lsrs	r4, r1, #16
 8005690:	1904      	adds	r4, r0, r4
 8005692:	4461      	add	r1, ip
 8005694:	1420      	asrs	r0, r4, #16
 8005696:	b289      	uxth	r1, r1
 8005698:	0424      	lsls	r4, r4, #16
 800569a:	4321      	orrs	r1, r4
 800569c:	c702      	stmia	r7!, {r1}
 800569e:	e7dc      	b.n	800565a <__mdiff+0xd6>
 80056a0:	9900      	ldr	r1, [sp, #0]
 80056a2:	3901      	subs	r1, #1
 80056a4:	9100      	str	r1, [sp, #0]
 80056a6:	e7e6      	b.n	8005676 <__mdiff+0xf2>
 80056a8:	08006100 	.word	0x08006100
 80056ac:	08006111 	.word	0x08006111
 80056b0:	00000237 	.word	0x00000237
 80056b4:	00000245 	.word	0x00000245

080056b8 <__d2b>:
 80056b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80056ba:	2101      	movs	r1, #1
 80056bc:	0016      	movs	r6, r2
 80056be:	001f      	movs	r7, r3
 80056c0:	f7ff fcb6 	bl	8005030 <_Balloc>
 80056c4:	1e04      	subs	r4, r0, #0
 80056c6:	d105      	bne.n	80056d4 <__d2b+0x1c>
 80056c8:	0022      	movs	r2, r4
 80056ca:	4b25      	ldr	r3, [pc, #148]	@ (8005760 <__d2b+0xa8>)
 80056cc:	4825      	ldr	r0, [pc, #148]	@ (8005764 <__d2b+0xac>)
 80056ce:	4926      	ldr	r1, [pc, #152]	@ (8005768 <__d2b+0xb0>)
 80056d0:	f000 f920 	bl	8005914 <__assert_func>
 80056d4:	033b      	lsls	r3, r7, #12
 80056d6:	007d      	lsls	r5, r7, #1
 80056d8:	0b1b      	lsrs	r3, r3, #12
 80056da:	0d6d      	lsrs	r5, r5, #21
 80056dc:	d002      	beq.n	80056e4 <__d2b+0x2c>
 80056de:	2280      	movs	r2, #128	@ 0x80
 80056e0:	0352      	lsls	r2, r2, #13
 80056e2:	4313      	orrs	r3, r2
 80056e4:	9301      	str	r3, [sp, #4]
 80056e6:	2e00      	cmp	r6, #0
 80056e8:	d025      	beq.n	8005736 <__d2b+0x7e>
 80056ea:	4668      	mov	r0, sp
 80056ec:	9600      	str	r6, [sp, #0]
 80056ee:	f7ff fd6c 	bl	80051ca <__lo0bits>
 80056f2:	9b01      	ldr	r3, [sp, #4]
 80056f4:	9900      	ldr	r1, [sp, #0]
 80056f6:	2800      	cmp	r0, #0
 80056f8:	d01b      	beq.n	8005732 <__d2b+0x7a>
 80056fa:	2220      	movs	r2, #32
 80056fc:	001e      	movs	r6, r3
 80056fe:	1a12      	subs	r2, r2, r0
 8005700:	4096      	lsls	r6, r2
 8005702:	0032      	movs	r2, r6
 8005704:	40c3      	lsrs	r3, r0
 8005706:	430a      	orrs	r2, r1
 8005708:	6162      	str	r2, [r4, #20]
 800570a:	9301      	str	r3, [sp, #4]
 800570c:	9e01      	ldr	r6, [sp, #4]
 800570e:	61a6      	str	r6, [r4, #24]
 8005710:	1e73      	subs	r3, r6, #1
 8005712:	419e      	sbcs	r6, r3
 8005714:	3601      	adds	r6, #1
 8005716:	6126      	str	r6, [r4, #16]
 8005718:	2d00      	cmp	r5, #0
 800571a:	d014      	beq.n	8005746 <__d2b+0x8e>
 800571c:	2635      	movs	r6, #53	@ 0x35
 800571e:	4b13      	ldr	r3, [pc, #76]	@ (800576c <__d2b+0xb4>)
 8005720:	18ed      	adds	r5, r5, r3
 8005722:	9b08      	ldr	r3, [sp, #32]
 8005724:	182d      	adds	r5, r5, r0
 8005726:	601d      	str	r5, [r3, #0]
 8005728:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800572a:	1a36      	subs	r6, r6, r0
 800572c:	601e      	str	r6, [r3, #0]
 800572e:	0020      	movs	r0, r4
 8005730:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005732:	6161      	str	r1, [r4, #20]
 8005734:	e7ea      	b.n	800570c <__d2b+0x54>
 8005736:	a801      	add	r0, sp, #4
 8005738:	f7ff fd47 	bl	80051ca <__lo0bits>
 800573c:	9b01      	ldr	r3, [sp, #4]
 800573e:	2601      	movs	r6, #1
 8005740:	6163      	str	r3, [r4, #20]
 8005742:	3020      	adds	r0, #32
 8005744:	e7e7      	b.n	8005716 <__d2b+0x5e>
 8005746:	4b0a      	ldr	r3, [pc, #40]	@ (8005770 <__d2b+0xb8>)
 8005748:	18c0      	adds	r0, r0, r3
 800574a:	9b08      	ldr	r3, [sp, #32]
 800574c:	6018      	str	r0, [r3, #0]
 800574e:	4b09      	ldr	r3, [pc, #36]	@ (8005774 <__d2b+0xbc>)
 8005750:	18f3      	adds	r3, r6, r3
 8005752:	009b      	lsls	r3, r3, #2
 8005754:	18e3      	adds	r3, r4, r3
 8005756:	6958      	ldr	r0, [r3, #20]
 8005758:	f7ff fd16 	bl	8005188 <__hi0bits>
 800575c:	0176      	lsls	r6, r6, #5
 800575e:	e7e3      	b.n	8005728 <__d2b+0x70>
 8005760:	08006100 	.word	0x08006100
 8005764:	08006111 	.word	0x08006111
 8005768:	0000030f 	.word	0x0000030f
 800576c:	fffffbcd 	.word	0xfffffbcd
 8005770:	fffffbce 	.word	0xfffffbce
 8005774:	3fffffff 	.word	0x3fffffff

08005778 <__sflush_r>:
 8005778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800577a:	220c      	movs	r2, #12
 800577c:	5e8b      	ldrsh	r3, [r1, r2]
 800577e:	0005      	movs	r5, r0
 8005780:	000c      	movs	r4, r1
 8005782:	071a      	lsls	r2, r3, #28
 8005784:	d456      	bmi.n	8005834 <__sflush_r+0xbc>
 8005786:	684a      	ldr	r2, [r1, #4]
 8005788:	2a00      	cmp	r2, #0
 800578a:	dc02      	bgt.n	8005792 <__sflush_r+0x1a>
 800578c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800578e:	2a00      	cmp	r2, #0
 8005790:	dd4e      	ble.n	8005830 <__sflush_r+0xb8>
 8005792:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005794:	2f00      	cmp	r7, #0
 8005796:	d04b      	beq.n	8005830 <__sflush_r+0xb8>
 8005798:	2200      	movs	r2, #0
 800579a:	2080      	movs	r0, #128	@ 0x80
 800579c:	682e      	ldr	r6, [r5, #0]
 800579e:	602a      	str	r2, [r5, #0]
 80057a0:	001a      	movs	r2, r3
 80057a2:	0140      	lsls	r0, r0, #5
 80057a4:	6a21      	ldr	r1, [r4, #32]
 80057a6:	4002      	ands	r2, r0
 80057a8:	4203      	tst	r3, r0
 80057aa:	d033      	beq.n	8005814 <__sflush_r+0x9c>
 80057ac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80057ae:	89a3      	ldrh	r3, [r4, #12]
 80057b0:	075b      	lsls	r3, r3, #29
 80057b2:	d506      	bpl.n	80057c2 <__sflush_r+0x4a>
 80057b4:	6863      	ldr	r3, [r4, #4]
 80057b6:	1ad2      	subs	r2, r2, r3
 80057b8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d001      	beq.n	80057c2 <__sflush_r+0x4a>
 80057be:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80057c0:	1ad2      	subs	r2, r2, r3
 80057c2:	2300      	movs	r3, #0
 80057c4:	0028      	movs	r0, r5
 80057c6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80057c8:	6a21      	ldr	r1, [r4, #32]
 80057ca:	47b8      	blx	r7
 80057cc:	89a2      	ldrh	r2, [r4, #12]
 80057ce:	1c43      	adds	r3, r0, #1
 80057d0:	d106      	bne.n	80057e0 <__sflush_r+0x68>
 80057d2:	6829      	ldr	r1, [r5, #0]
 80057d4:	291d      	cmp	r1, #29
 80057d6:	d846      	bhi.n	8005866 <__sflush_r+0xee>
 80057d8:	4b29      	ldr	r3, [pc, #164]	@ (8005880 <__sflush_r+0x108>)
 80057da:	410b      	asrs	r3, r1
 80057dc:	07db      	lsls	r3, r3, #31
 80057de:	d442      	bmi.n	8005866 <__sflush_r+0xee>
 80057e0:	2300      	movs	r3, #0
 80057e2:	6063      	str	r3, [r4, #4]
 80057e4:	6923      	ldr	r3, [r4, #16]
 80057e6:	6023      	str	r3, [r4, #0]
 80057e8:	04d2      	lsls	r2, r2, #19
 80057ea:	d505      	bpl.n	80057f8 <__sflush_r+0x80>
 80057ec:	1c43      	adds	r3, r0, #1
 80057ee:	d102      	bne.n	80057f6 <__sflush_r+0x7e>
 80057f0:	682b      	ldr	r3, [r5, #0]
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d100      	bne.n	80057f8 <__sflush_r+0x80>
 80057f6:	6560      	str	r0, [r4, #84]	@ 0x54
 80057f8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80057fa:	602e      	str	r6, [r5, #0]
 80057fc:	2900      	cmp	r1, #0
 80057fe:	d017      	beq.n	8005830 <__sflush_r+0xb8>
 8005800:	0023      	movs	r3, r4
 8005802:	3344      	adds	r3, #68	@ 0x44
 8005804:	4299      	cmp	r1, r3
 8005806:	d002      	beq.n	800580e <__sflush_r+0x96>
 8005808:	0028      	movs	r0, r5
 800580a:	f7ff fb0b 	bl	8004e24 <_free_r>
 800580e:	2300      	movs	r3, #0
 8005810:	6363      	str	r3, [r4, #52]	@ 0x34
 8005812:	e00d      	b.n	8005830 <__sflush_r+0xb8>
 8005814:	2301      	movs	r3, #1
 8005816:	0028      	movs	r0, r5
 8005818:	47b8      	blx	r7
 800581a:	0002      	movs	r2, r0
 800581c:	1c43      	adds	r3, r0, #1
 800581e:	d1c6      	bne.n	80057ae <__sflush_r+0x36>
 8005820:	682b      	ldr	r3, [r5, #0]
 8005822:	2b00      	cmp	r3, #0
 8005824:	d0c3      	beq.n	80057ae <__sflush_r+0x36>
 8005826:	2b1d      	cmp	r3, #29
 8005828:	d001      	beq.n	800582e <__sflush_r+0xb6>
 800582a:	2b16      	cmp	r3, #22
 800582c:	d11a      	bne.n	8005864 <__sflush_r+0xec>
 800582e:	602e      	str	r6, [r5, #0]
 8005830:	2000      	movs	r0, #0
 8005832:	e01e      	b.n	8005872 <__sflush_r+0xfa>
 8005834:	690e      	ldr	r6, [r1, #16]
 8005836:	2e00      	cmp	r6, #0
 8005838:	d0fa      	beq.n	8005830 <__sflush_r+0xb8>
 800583a:	680f      	ldr	r7, [r1, #0]
 800583c:	600e      	str	r6, [r1, #0]
 800583e:	1bba      	subs	r2, r7, r6
 8005840:	9201      	str	r2, [sp, #4]
 8005842:	2200      	movs	r2, #0
 8005844:	079b      	lsls	r3, r3, #30
 8005846:	d100      	bne.n	800584a <__sflush_r+0xd2>
 8005848:	694a      	ldr	r2, [r1, #20]
 800584a:	60a2      	str	r2, [r4, #8]
 800584c:	9b01      	ldr	r3, [sp, #4]
 800584e:	2b00      	cmp	r3, #0
 8005850:	ddee      	ble.n	8005830 <__sflush_r+0xb8>
 8005852:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005854:	0032      	movs	r2, r6
 8005856:	001f      	movs	r7, r3
 8005858:	0028      	movs	r0, r5
 800585a:	9b01      	ldr	r3, [sp, #4]
 800585c:	6a21      	ldr	r1, [r4, #32]
 800585e:	47b8      	blx	r7
 8005860:	2800      	cmp	r0, #0
 8005862:	dc07      	bgt.n	8005874 <__sflush_r+0xfc>
 8005864:	89a2      	ldrh	r2, [r4, #12]
 8005866:	2340      	movs	r3, #64	@ 0x40
 8005868:	2001      	movs	r0, #1
 800586a:	4313      	orrs	r3, r2
 800586c:	b21b      	sxth	r3, r3
 800586e:	81a3      	strh	r3, [r4, #12]
 8005870:	4240      	negs	r0, r0
 8005872:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005874:	9b01      	ldr	r3, [sp, #4]
 8005876:	1836      	adds	r6, r6, r0
 8005878:	1a1b      	subs	r3, r3, r0
 800587a:	9301      	str	r3, [sp, #4]
 800587c:	e7e6      	b.n	800584c <__sflush_r+0xd4>
 800587e:	46c0      	nop			@ (mov r8, r8)
 8005880:	dfbffffe 	.word	0xdfbffffe

08005884 <_fflush_r>:
 8005884:	690b      	ldr	r3, [r1, #16]
 8005886:	b570      	push	{r4, r5, r6, lr}
 8005888:	0005      	movs	r5, r0
 800588a:	000c      	movs	r4, r1
 800588c:	2b00      	cmp	r3, #0
 800588e:	d102      	bne.n	8005896 <_fflush_r+0x12>
 8005890:	2500      	movs	r5, #0
 8005892:	0028      	movs	r0, r5
 8005894:	bd70      	pop	{r4, r5, r6, pc}
 8005896:	2800      	cmp	r0, #0
 8005898:	d004      	beq.n	80058a4 <_fflush_r+0x20>
 800589a:	6a03      	ldr	r3, [r0, #32]
 800589c:	2b00      	cmp	r3, #0
 800589e:	d101      	bne.n	80058a4 <_fflush_r+0x20>
 80058a0:	f7fe fb2c 	bl	8003efc <__sinit>
 80058a4:	220c      	movs	r2, #12
 80058a6:	5ea3      	ldrsh	r3, [r4, r2]
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d0f1      	beq.n	8005890 <_fflush_r+0xc>
 80058ac:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80058ae:	07d2      	lsls	r2, r2, #31
 80058b0:	d404      	bmi.n	80058bc <_fflush_r+0x38>
 80058b2:	059b      	lsls	r3, r3, #22
 80058b4:	d402      	bmi.n	80058bc <_fflush_r+0x38>
 80058b6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80058b8:	f7fe fc25 	bl	8004106 <__retarget_lock_acquire_recursive>
 80058bc:	0028      	movs	r0, r5
 80058be:	0021      	movs	r1, r4
 80058c0:	f7ff ff5a 	bl	8005778 <__sflush_r>
 80058c4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80058c6:	0005      	movs	r5, r0
 80058c8:	07db      	lsls	r3, r3, #31
 80058ca:	d4e2      	bmi.n	8005892 <_fflush_r+0xe>
 80058cc:	89a3      	ldrh	r3, [r4, #12]
 80058ce:	059b      	lsls	r3, r3, #22
 80058d0:	d4df      	bmi.n	8005892 <_fflush_r+0xe>
 80058d2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80058d4:	f7fe fc18 	bl	8004108 <__retarget_lock_release_recursive>
 80058d8:	e7db      	b.n	8005892 <_fflush_r+0xe>
	...

080058dc <_sbrk_r>:
 80058dc:	2300      	movs	r3, #0
 80058de:	b570      	push	{r4, r5, r6, lr}
 80058e0:	4d06      	ldr	r5, [pc, #24]	@ (80058fc <_sbrk_r+0x20>)
 80058e2:	0004      	movs	r4, r0
 80058e4:	0008      	movs	r0, r1
 80058e6:	602b      	str	r3, [r5, #0]
 80058e8:	f7fc feac 	bl	8002644 <_sbrk>
 80058ec:	1c43      	adds	r3, r0, #1
 80058ee:	d103      	bne.n	80058f8 <_sbrk_r+0x1c>
 80058f0:	682b      	ldr	r3, [r5, #0]
 80058f2:	2b00      	cmp	r3, #0
 80058f4:	d000      	beq.n	80058f8 <_sbrk_r+0x1c>
 80058f6:	6023      	str	r3, [r4, #0]
 80058f8:	bd70      	pop	{r4, r5, r6, pc}
 80058fa:	46c0      	nop			@ (mov r8, r8)
 80058fc:	200003e4 	.word	0x200003e4

08005900 <memcpy>:
 8005900:	2300      	movs	r3, #0
 8005902:	b510      	push	{r4, lr}
 8005904:	429a      	cmp	r2, r3
 8005906:	d100      	bne.n	800590a <memcpy+0xa>
 8005908:	bd10      	pop	{r4, pc}
 800590a:	5ccc      	ldrb	r4, [r1, r3]
 800590c:	54c4      	strb	r4, [r0, r3]
 800590e:	3301      	adds	r3, #1
 8005910:	e7f8      	b.n	8005904 <memcpy+0x4>
	...

08005914 <__assert_func>:
 8005914:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005916:	0014      	movs	r4, r2
 8005918:	001a      	movs	r2, r3
 800591a:	4b09      	ldr	r3, [pc, #36]	@ (8005940 <__assert_func+0x2c>)
 800591c:	0005      	movs	r5, r0
 800591e:	681b      	ldr	r3, [r3, #0]
 8005920:	000e      	movs	r6, r1
 8005922:	68d8      	ldr	r0, [r3, #12]
 8005924:	4b07      	ldr	r3, [pc, #28]	@ (8005944 <__assert_func+0x30>)
 8005926:	2c00      	cmp	r4, #0
 8005928:	d101      	bne.n	800592e <__assert_func+0x1a>
 800592a:	4b07      	ldr	r3, [pc, #28]	@ (8005948 <__assert_func+0x34>)
 800592c:	001c      	movs	r4, r3
 800592e:	4907      	ldr	r1, [pc, #28]	@ (800594c <__assert_func+0x38>)
 8005930:	9301      	str	r3, [sp, #4]
 8005932:	9402      	str	r4, [sp, #8]
 8005934:	002b      	movs	r3, r5
 8005936:	9600      	str	r6, [sp, #0]
 8005938:	f000 f856 	bl	80059e8 <fiprintf>
 800593c:	f000 f864 	bl	8005a08 <abort>
 8005940:	20000028 	.word	0x20000028
 8005944:	08006272 	.word	0x08006272
 8005948:	080062ad 	.word	0x080062ad
 800594c:	0800627f 	.word	0x0800627f

08005950 <_calloc_r>:
 8005950:	b570      	push	{r4, r5, r6, lr}
 8005952:	0c0b      	lsrs	r3, r1, #16
 8005954:	0c15      	lsrs	r5, r2, #16
 8005956:	2b00      	cmp	r3, #0
 8005958:	d11e      	bne.n	8005998 <_calloc_r+0x48>
 800595a:	2d00      	cmp	r5, #0
 800595c:	d10c      	bne.n	8005978 <_calloc_r+0x28>
 800595e:	b289      	uxth	r1, r1
 8005960:	b294      	uxth	r4, r2
 8005962:	434c      	muls	r4, r1
 8005964:	0021      	movs	r1, r4
 8005966:	f7ff fad3 	bl	8004f10 <_malloc_r>
 800596a:	1e05      	subs	r5, r0, #0
 800596c:	d01a      	beq.n	80059a4 <_calloc_r+0x54>
 800596e:	0022      	movs	r2, r4
 8005970:	2100      	movs	r1, #0
 8005972:	f7fe fb43 	bl	8003ffc <memset>
 8005976:	e016      	b.n	80059a6 <_calloc_r+0x56>
 8005978:	1c2b      	adds	r3, r5, #0
 800597a:	1c0c      	adds	r4, r1, #0
 800597c:	b289      	uxth	r1, r1
 800597e:	b292      	uxth	r2, r2
 8005980:	434a      	muls	r2, r1
 8005982:	b29b      	uxth	r3, r3
 8005984:	b2a1      	uxth	r1, r4
 8005986:	4359      	muls	r1, r3
 8005988:	0c14      	lsrs	r4, r2, #16
 800598a:	190c      	adds	r4, r1, r4
 800598c:	0c23      	lsrs	r3, r4, #16
 800598e:	d107      	bne.n	80059a0 <_calloc_r+0x50>
 8005990:	0424      	lsls	r4, r4, #16
 8005992:	b292      	uxth	r2, r2
 8005994:	4314      	orrs	r4, r2
 8005996:	e7e5      	b.n	8005964 <_calloc_r+0x14>
 8005998:	2d00      	cmp	r5, #0
 800599a:	d101      	bne.n	80059a0 <_calloc_r+0x50>
 800599c:	1c14      	adds	r4, r2, #0
 800599e:	e7ed      	b.n	800597c <_calloc_r+0x2c>
 80059a0:	230c      	movs	r3, #12
 80059a2:	6003      	str	r3, [r0, #0]
 80059a4:	2500      	movs	r5, #0
 80059a6:	0028      	movs	r0, r5
 80059a8:	bd70      	pop	{r4, r5, r6, pc}

080059aa <__ascii_mbtowc>:
 80059aa:	b082      	sub	sp, #8
 80059ac:	2900      	cmp	r1, #0
 80059ae:	d100      	bne.n	80059b2 <__ascii_mbtowc+0x8>
 80059b0:	a901      	add	r1, sp, #4
 80059b2:	1e10      	subs	r0, r2, #0
 80059b4:	d006      	beq.n	80059c4 <__ascii_mbtowc+0x1a>
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	d006      	beq.n	80059c8 <__ascii_mbtowc+0x1e>
 80059ba:	7813      	ldrb	r3, [r2, #0]
 80059bc:	600b      	str	r3, [r1, #0]
 80059be:	7810      	ldrb	r0, [r2, #0]
 80059c0:	1e43      	subs	r3, r0, #1
 80059c2:	4198      	sbcs	r0, r3
 80059c4:	b002      	add	sp, #8
 80059c6:	4770      	bx	lr
 80059c8:	2002      	movs	r0, #2
 80059ca:	4240      	negs	r0, r0
 80059cc:	e7fa      	b.n	80059c4 <__ascii_mbtowc+0x1a>

080059ce <__ascii_wctomb>:
 80059ce:	0003      	movs	r3, r0
 80059d0:	1e08      	subs	r0, r1, #0
 80059d2:	d005      	beq.n	80059e0 <__ascii_wctomb+0x12>
 80059d4:	2aff      	cmp	r2, #255	@ 0xff
 80059d6:	d904      	bls.n	80059e2 <__ascii_wctomb+0x14>
 80059d8:	228a      	movs	r2, #138	@ 0x8a
 80059da:	2001      	movs	r0, #1
 80059dc:	601a      	str	r2, [r3, #0]
 80059de:	4240      	negs	r0, r0
 80059e0:	4770      	bx	lr
 80059e2:	2001      	movs	r0, #1
 80059e4:	700a      	strb	r2, [r1, #0]
 80059e6:	e7fb      	b.n	80059e0 <__ascii_wctomb+0x12>

080059e8 <fiprintf>:
 80059e8:	b40e      	push	{r1, r2, r3}
 80059ea:	b517      	push	{r0, r1, r2, r4, lr}
 80059ec:	4c05      	ldr	r4, [pc, #20]	@ (8005a04 <fiprintf+0x1c>)
 80059ee:	ab05      	add	r3, sp, #20
 80059f0:	cb04      	ldmia	r3!, {r2}
 80059f2:	0001      	movs	r1, r0
 80059f4:	6820      	ldr	r0, [r4, #0]
 80059f6:	9301      	str	r3, [sp, #4]
 80059f8:	f000 f834 	bl	8005a64 <_vfiprintf_r>
 80059fc:	bc1e      	pop	{r1, r2, r3, r4}
 80059fe:	bc08      	pop	{r3}
 8005a00:	b003      	add	sp, #12
 8005a02:	4718      	bx	r3
 8005a04:	20000028 	.word	0x20000028

08005a08 <abort>:
 8005a08:	2006      	movs	r0, #6
 8005a0a:	b510      	push	{r4, lr}
 8005a0c:	f000 fa10 	bl	8005e30 <raise>
 8005a10:	2001      	movs	r0, #1
 8005a12:	f7fc fda4 	bl	800255e <_exit>

08005a16 <__sfputc_r>:
 8005a16:	6893      	ldr	r3, [r2, #8]
 8005a18:	b510      	push	{r4, lr}
 8005a1a:	3b01      	subs	r3, #1
 8005a1c:	6093      	str	r3, [r2, #8]
 8005a1e:	2b00      	cmp	r3, #0
 8005a20:	da04      	bge.n	8005a2c <__sfputc_r+0x16>
 8005a22:	6994      	ldr	r4, [r2, #24]
 8005a24:	42a3      	cmp	r3, r4
 8005a26:	db07      	blt.n	8005a38 <__sfputc_r+0x22>
 8005a28:	290a      	cmp	r1, #10
 8005a2a:	d005      	beq.n	8005a38 <__sfputc_r+0x22>
 8005a2c:	6813      	ldr	r3, [r2, #0]
 8005a2e:	1c58      	adds	r0, r3, #1
 8005a30:	6010      	str	r0, [r2, #0]
 8005a32:	7019      	strb	r1, [r3, #0]
 8005a34:	0008      	movs	r0, r1
 8005a36:	bd10      	pop	{r4, pc}
 8005a38:	f000 f930 	bl	8005c9c <__swbuf_r>
 8005a3c:	0001      	movs	r1, r0
 8005a3e:	e7f9      	b.n	8005a34 <__sfputc_r+0x1e>

08005a40 <__sfputs_r>:
 8005a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a42:	0006      	movs	r6, r0
 8005a44:	000f      	movs	r7, r1
 8005a46:	0014      	movs	r4, r2
 8005a48:	18d5      	adds	r5, r2, r3
 8005a4a:	42ac      	cmp	r4, r5
 8005a4c:	d101      	bne.n	8005a52 <__sfputs_r+0x12>
 8005a4e:	2000      	movs	r0, #0
 8005a50:	e007      	b.n	8005a62 <__sfputs_r+0x22>
 8005a52:	7821      	ldrb	r1, [r4, #0]
 8005a54:	003a      	movs	r2, r7
 8005a56:	0030      	movs	r0, r6
 8005a58:	f7ff ffdd 	bl	8005a16 <__sfputc_r>
 8005a5c:	3401      	adds	r4, #1
 8005a5e:	1c43      	adds	r3, r0, #1
 8005a60:	d1f3      	bne.n	8005a4a <__sfputs_r+0xa>
 8005a62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005a64 <_vfiprintf_r>:
 8005a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a66:	b0a1      	sub	sp, #132	@ 0x84
 8005a68:	000f      	movs	r7, r1
 8005a6a:	0015      	movs	r5, r2
 8005a6c:	001e      	movs	r6, r3
 8005a6e:	9003      	str	r0, [sp, #12]
 8005a70:	2800      	cmp	r0, #0
 8005a72:	d004      	beq.n	8005a7e <_vfiprintf_r+0x1a>
 8005a74:	6a03      	ldr	r3, [r0, #32]
 8005a76:	2b00      	cmp	r3, #0
 8005a78:	d101      	bne.n	8005a7e <_vfiprintf_r+0x1a>
 8005a7a:	f7fe fa3f 	bl	8003efc <__sinit>
 8005a7e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005a80:	07db      	lsls	r3, r3, #31
 8005a82:	d405      	bmi.n	8005a90 <_vfiprintf_r+0x2c>
 8005a84:	89bb      	ldrh	r3, [r7, #12]
 8005a86:	059b      	lsls	r3, r3, #22
 8005a88:	d402      	bmi.n	8005a90 <_vfiprintf_r+0x2c>
 8005a8a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8005a8c:	f7fe fb3b 	bl	8004106 <__retarget_lock_acquire_recursive>
 8005a90:	89bb      	ldrh	r3, [r7, #12]
 8005a92:	071b      	lsls	r3, r3, #28
 8005a94:	d502      	bpl.n	8005a9c <_vfiprintf_r+0x38>
 8005a96:	693b      	ldr	r3, [r7, #16]
 8005a98:	2b00      	cmp	r3, #0
 8005a9a:	d113      	bne.n	8005ac4 <_vfiprintf_r+0x60>
 8005a9c:	0039      	movs	r1, r7
 8005a9e:	9803      	ldr	r0, [sp, #12]
 8005aa0:	f000 f93e 	bl	8005d20 <__swsetup_r>
 8005aa4:	2800      	cmp	r0, #0
 8005aa6:	d00d      	beq.n	8005ac4 <_vfiprintf_r+0x60>
 8005aa8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005aaa:	07db      	lsls	r3, r3, #31
 8005aac:	d503      	bpl.n	8005ab6 <_vfiprintf_r+0x52>
 8005aae:	2001      	movs	r0, #1
 8005ab0:	4240      	negs	r0, r0
 8005ab2:	b021      	add	sp, #132	@ 0x84
 8005ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ab6:	89bb      	ldrh	r3, [r7, #12]
 8005ab8:	059b      	lsls	r3, r3, #22
 8005aba:	d4f8      	bmi.n	8005aae <_vfiprintf_r+0x4a>
 8005abc:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8005abe:	f7fe fb23 	bl	8004108 <__retarget_lock_release_recursive>
 8005ac2:	e7f4      	b.n	8005aae <_vfiprintf_r+0x4a>
 8005ac4:	2300      	movs	r3, #0
 8005ac6:	ac08      	add	r4, sp, #32
 8005ac8:	6163      	str	r3, [r4, #20]
 8005aca:	3320      	adds	r3, #32
 8005acc:	7663      	strb	r3, [r4, #25]
 8005ace:	3310      	adds	r3, #16
 8005ad0:	76a3      	strb	r3, [r4, #26]
 8005ad2:	9607      	str	r6, [sp, #28]
 8005ad4:	002e      	movs	r6, r5
 8005ad6:	7833      	ldrb	r3, [r6, #0]
 8005ad8:	2b00      	cmp	r3, #0
 8005ada:	d001      	beq.n	8005ae0 <_vfiprintf_r+0x7c>
 8005adc:	2b25      	cmp	r3, #37	@ 0x25
 8005ade:	d148      	bne.n	8005b72 <_vfiprintf_r+0x10e>
 8005ae0:	1b73      	subs	r3, r6, r5
 8005ae2:	9305      	str	r3, [sp, #20]
 8005ae4:	42ae      	cmp	r6, r5
 8005ae6:	d00b      	beq.n	8005b00 <_vfiprintf_r+0x9c>
 8005ae8:	002a      	movs	r2, r5
 8005aea:	0039      	movs	r1, r7
 8005aec:	9803      	ldr	r0, [sp, #12]
 8005aee:	f7ff ffa7 	bl	8005a40 <__sfputs_r>
 8005af2:	3001      	adds	r0, #1
 8005af4:	d100      	bne.n	8005af8 <_vfiprintf_r+0x94>
 8005af6:	e0ae      	b.n	8005c56 <_vfiprintf_r+0x1f2>
 8005af8:	6963      	ldr	r3, [r4, #20]
 8005afa:	9a05      	ldr	r2, [sp, #20]
 8005afc:	189b      	adds	r3, r3, r2
 8005afe:	6163      	str	r3, [r4, #20]
 8005b00:	7833      	ldrb	r3, [r6, #0]
 8005b02:	2b00      	cmp	r3, #0
 8005b04:	d100      	bne.n	8005b08 <_vfiprintf_r+0xa4>
 8005b06:	e0a6      	b.n	8005c56 <_vfiprintf_r+0x1f2>
 8005b08:	2201      	movs	r2, #1
 8005b0a:	2300      	movs	r3, #0
 8005b0c:	4252      	negs	r2, r2
 8005b0e:	6062      	str	r2, [r4, #4]
 8005b10:	a904      	add	r1, sp, #16
 8005b12:	3254      	adds	r2, #84	@ 0x54
 8005b14:	1852      	adds	r2, r2, r1
 8005b16:	1c75      	adds	r5, r6, #1
 8005b18:	6023      	str	r3, [r4, #0]
 8005b1a:	60e3      	str	r3, [r4, #12]
 8005b1c:	60a3      	str	r3, [r4, #8]
 8005b1e:	7013      	strb	r3, [r2, #0]
 8005b20:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005b22:	4b59      	ldr	r3, [pc, #356]	@ (8005c88 <_vfiprintf_r+0x224>)
 8005b24:	2205      	movs	r2, #5
 8005b26:	0018      	movs	r0, r3
 8005b28:	7829      	ldrb	r1, [r5, #0]
 8005b2a:	9305      	str	r3, [sp, #20]
 8005b2c:	f7fe faed 	bl	800410a <memchr>
 8005b30:	1c6e      	adds	r6, r5, #1
 8005b32:	2800      	cmp	r0, #0
 8005b34:	d11f      	bne.n	8005b76 <_vfiprintf_r+0x112>
 8005b36:	6822      	ldr	r2, [r4, #0]
 8005b38:	06d3      	lsls	r3, r2, #27
 8005b3a:	d504      	bpl.n	8005b46 <_vfiprintf_r+0xe2>
 8005b3c:	2353      	movs	r3, #83	@ 0x53
 8005b3e:	a904      	add	r1, sp, #16
 8005b40:	185b      	adds	r3, r3, r1
 8005b42:	2120      	movs	r1, #32
 8005b44:	7019      	strb	r1, [r3, #0]
 8005b46:	0713      	lsls	r3, r2, #28
 8005b48:	d504      	bpl.n	8005b54 <_vfiprintf_r+0xf0>
 8005b4a:	2353      	movs	r3, #83	@ 0x53
 8005b4c:	a904      	add	r1, sp, #16
 8005b4e:	185b      	adds	r3, r3, r1
 8005b50:	212b      	movs	r1, #43	@ 0x2b
 8005b52:	7019      	strb	r1, [r3, #0]
 8005b54:	782b      	ldrb	r3, [r5, #0]
 8005b56:	2b2a      	cmp	r3, #42	@ 0x2a
 8005b58:	d016      	beq.n	8005b88 <_vfiprintf_r+0x124>
 8005b5a:	002e      	movs	r6, r5
 8005b5c:	2100      	movs	r1, #0
 8005b5e:	200a      	movs	r0, #10
 8005b60:	68e3      	ldr	r3, [r4, #12]
 8005b62:	7832      	ldrb	r2, [r6, #0]
 8005b64:	1c75      	adds	r5, r6, #1
 8005b66:	3a30      	subs	r2, #48	@ 0x30
 8005b68:	2a09      	cmp	r2, #9
 8005b6a:	d950      	bls.n	8005c0e <_vfiprintf_r+0x1aa>
 8005b6c:	2900      	cmp	r1, #0
 8005b6e:	d111      	bne.n	8005b94 <_vfiprintf_r+0x130>
 8005b70:	e017      	b.n	8005ba2 <_vfiprintf_r+0x13e>
 8005b72:	3601      	adds	r6, #1
 8005b74:	e7af      	b.n	8005ad6 <_vfiprintf_r+0x72>
 8005b76:	9b05      	ldr	r3, [sp, #20]
 8005b78:	6822      	ldr	r2, [r4, #0]
 8005b7a:	1ac0      	subs	r0, r0, r3
 8005b7c:	2301      	movs	r3, #1
 8005b7e:	4083      	lsls	r3, r0
 8005b80:	4313      	orrs	r3, r2
 8005b82:	0035      	movs	r5, r6
 8005b84:	6023      	str	r3, [r4, #0]
 8005b86:	e7cc      	b.n	8005b22 <_vfiprintf_r+0xbe>
 8005b88:	9b07      	ldr	r3, [sp, #28]
 8005b8a:	1d19      	adds	r1, r3, #4
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	9107      	str	r1, [sp, #28]
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	db01      	blt.n	8005b98 <_vfiprintf_r+0x134>
 8005b94:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005b96:	e004      	b.n	8005ba2 <_vfiprintf_r+0x13e>
 8005b98:	425b      	negs	r3, r3
 8005b9a:	60e3      	str	r3, [r4, #12]
 8005b9c:	2302      	movs	r3, #2
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	6023      	str	r3, [r4, #0]
 8005ba2:	7833      	ldrb	r3, [r6, #0]
 8005ba4:	2b2e      	cmp	r3, #46	@ 0x2e
 8005ba6:	d10c      	bne.n	8005bc2 <_vfiprintf_r+0x15e>
 8005ba8:	7873      	ldrb	r3, [r6, #1]
 8005baa:	2b2a      	cmp	r3, #42	@ 0x2a
 8005bac:	d134      	bne.n	8005c18 <_vfiprintf_r+0x1b4>
 8005bae:	9b07      	ldr	r3, [sp, #28]
 8005bb0:	3602      	adds	r6, #2
 8005bb2:	1d1a      	adds	r2, r3, #4
 8005bb4:	681b      	ldr	r3, [r3, #0]
 8005bb6:	9207      	str	r2, [sp, #28]
 8005bb8:	2b00      	cmp	r3, #0
 8005bba:	da01      	bge.n	8005bc0 <_vfiprintf_r+0x15c>
 8005bbc:	2301      	movs	r3, #1
 8005bbe:	425b      	negs	r3, r3
 8005bc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8005bc2:	4d32      	ldr	r5, [pc, #200]	@ (8005c8c <_vfiprintf_r+0x228>)
 8005bc4:	2203      	movs	r2, #3
 8005bc6:	0028      	movs	r0, r5
 8005bc8:	7831      	ldrb	r1, [r6, #0]
 8005bca:	f7fe fa9e 	bl	800410a <memchr>
 8005bce:	2800      	cmp	r0, #0
 8005bd0:	d006      	beq.n	8005be0 <_vfiprintf_r+0x17c>
 8005bd2:	2340      	movs	r3, #64	@ 0x40
 8005bd4:	1b40      	subs	r0, r0, r5
 8005bd6:	4083      	lsls	r3, r0
 8005bd8:	6822      	ldr	r2, [r4, #0]
 8005bda:	3601      	adds	r6, #1
 8005bdc:	4313      	orrs	r3, r2
 8005bde:	6023      	str	r3, [r4, #0]
 8005be0:	7831      	ldrb	r1, [r6, #0]
 8005be2:	2206      	movs	r2, #6
 8005be4:	482a      	ldr	r0, [pc, #168]	@ (8005c90 <_vfiprintf_r+0x22c>)
 8005be6:	1c75      	adds	r5, r6, #1
 8005be8:	7621      	strb	r1, [r4, #24]
 8005bea:	f7fe fa8e 	bl	800410a <memchr>
 8005bee:	2800      	cmp	r0, #0
 8005bf0:	d040      	beq.n	8005c74 <_vfiprintf_r+0x210>
 8005bf2:	4b28      	ldr	r3, [pc, #160]	@ (8005c94 <_vfiprintf_r+0x230>)
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	d122      	bne.n	8005c3e <_vfiprintf_r+0x1da>
 8005bf8:	2207      	movs	r2, #7
 8005bfa:	9b07      	ldr	r3, [sp, #28]
 8005bfc:	3307      	adds	r3, #7
 8005bfe:	4393      	bics	r3, r2
 8005c00:	3308      	adds	r3, #8
 8005c02:	9307      	str	r3, [sp, #28]
 8005c04:	6963      	ldr	r3, [r4, #20]
 8005c06:	9a04      	ldr	r2, [sp, #16]
 8005c08:	189b      	adds	r3, r3, r2
 8005c0a:	6163      	str	r3, [r4, #20]
 8005c0c:	e762      	b.n	8005ad4 <_vfiprintf_r+0x70>
 8005c0e:	4343      	muls	r3, r0
 8005c10:	002e      	movs	r6, r5
 8005c12:	2101      	movs	r1, #1
 8005c14:	189b      	adds	r3, r3, r2
 8005c16:	e7a4      	b.n	8005b62 <_vfiprintf_r+0xfe>
 8005c18:	2300      	movs	r3, #0
 8005c1a:	200a      	movs	r0, #10
 8005c1c:	0019      	movs	r1, r3
 8005c1e:	3601      	adds	r6, #1
 8005c20:	6063      	str	r3, [r4, #4]
 8005c22:	7832      	ldrb	r2, [r6, #0]
 8005c24:	1c75      	adds	r5, r6, #1
 8005c26:	3a30      	subs	r2, #48	@ 0x30
 8005c28:	2a09      	cmp	r2, #9
 8005c2a:	d903      	bls.n	8005c34 <_vfiprintf_r+0x1d0>
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d0c8      	beq.n	8005bc2 <_vfiprintf_r+0x15e>
 8005c30:	9109      	str	r1, [sp, #36]	@ 0x24
 8005c32:	e7c6      	b.n	8005bc2 <_vfiprintf_r+0x15e>
 8005c34:	4341      	muls	r1, r0
 8005c36:	002e      	movs	r6, r5
 8005c38:	2301      	movs	r3, #1
 8005c3a:	1889      	adds	r1, r1, r2
 8005c3c:	e7f1      	b.n	8005c22 <_vfiprintf_r+0x1be>
 8005c3e:	aa07      	add	r2, sp, #28
 8005c40:	9200      	str	r2, [sp, #0]
 8005c42:	0021      	movs	r1, r4
 8005c44:	003a      	movs	r2, r7
 8005c46:	4b14      	ldr	r3, [pc, #80]	@ (8005c98 <_vfiprintf_r+0x234>)
 8005c48:	9803      	ldr	r0, [sp, #12]
 8005c4a:	f7fd fd0b 	bl	8003664 <_printf_float>
 8005c4e:	9004      	str	r0, [sp, #16]
 8005c50:	9b04      	ldr	r3, [sp, #16]
 8005c52:	3301      	adds	r3, #1
 8005c54:	d1d6      	bne.n	8005c04 <_vfiprintf_r+0x1a0>
 8005c56:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005c58:	07db      	lsls	r3, r3, #31
 8005c5a:	d405      	bmi.n	8005c68 <_vfiprintf_r+0x204>
 8005c5c:	89bb      	ldrh	r3, [r7, #12]
 8005c5e:	059b      	lsls	r3, r3, #22
 8005c60:	d402      	bmi.n	8005c68 <_vfiprintf_r+0x204>
 8005c62:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8005c64:	f7fe fa50 	bl	8004108 <__retarget_lock_release_recursive>
 8005c68:	89bb      	ldrh	r3, [r7, #12]
 8005c6a:	065b      	lsls	r3, r3, #25
 8005c6c:	d500      	bpl.n	8005c70 <_vfiprintf_r+0x20c>
 8005c6e:	e71e      	b.n	8005aae <_vfiprintf_r+0x4a>
 8005c70:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005c72:	e71e      	b.n	8005ab2 <_vfiprintf_r+0x4e>
 8005c74:	aa07      	add	r2, sp, #28
 8005c76:	9200      	str	r2, [sp, #0]
 8005c78:	0021      	movs	r1, r4
 8005c7a:	003a      	movs	r2, r7
 8005c7c:	4b06      	ldr	r3, [pc, #24]	@ (8005c98 <_vfiprintf_r+0x234>)
 8005c7e:	9803      	ldr	r0, [sp, #12]
 8005c80:	f7fd ff9e 	bl	8003bc0 <_printf_i>
 8005c84:	e7e3      	b.n	8005c4e <_vfiprintf_r+0x1ea>
 8005c86:	46c0      	nop			@ (mov r8, r8)
 8005c88:	080063af 	.word	0x080063af
 8005c8c:	080063b5 	.word	0x080063b5
 8005c90:	080063b9 	.word	0x080063b9
 8005c94:	08003665 	.word	0x08003665
 8005c98:	08005a41 	.word	0x08005a41

08005c9c <__swbuf_r>:
 8005c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c9e:	0006      	movs	r6, r0
 8005ca0:	000d      	movs	r5, r1
 8005ca2:	0014      	movs	r4, r2
 8005ca4:	2800      	cmp	r0, #0
 8005ca6:	d004      	beq.n	8005cb2 <__swbuf_r+0x16>
 8005ca8:	6a03      	ldr	r3, [r0, #32]
 8005caa:	2b00      	cmp	r3, #0
 8005cac:	d101      	bne.n	8005cb2 <__swbuf_r+0x16>
 8005cae:	f7fe f925 	bl	8003efc <__sinit>
 8005cb2:	69a3      	ldr	r3, [r4, #24]
 8005cb4:	60a3      	str	r3, [r4, #8]
 8005cb6:	89a3      	ldrh	r3, [r4, #12]
 8005cb8:	071b      	lsls	r3, r3, #28
 8005cba:	d502      	bpl.n	8005cc2 <__swbuf_r+0x26>
 8005cbc:	6923      	ldr	r3, [r4, #16]
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d109      	bne.n	8005cd6 <__swbuf_r+0x3a>
 8005cc2:	0021      	movs	r1, r4
 8005cc4:	0030      	movs	r0, r6
 8005cc6:	f000 f82b 	bl	8005d20 <__swsetup_r>
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d003      	beq.n	8005cd6 <__swbuf_r+0x3a>
 8005cce:	2501      	movs	r5, #1
 8005cd0:	426d      	negs	r5, r5
 8005cd2:	0028      	movs	r0, r5
 8005cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005cd6:	6923      	ldr	r3, [r4, #16]
 8005cd8:	6820      	ldr	r0, [r4, #0]
 8005cda:	b2ef      	uxtb	r7, r5
 8005cdc:	1ac0      	subs	r0, r0, r3
 8005cde:	6963      	ldr	r3, [r4, #20]
 8005ce0:	b2ed      	uxtb	r5, r5
 8005ce2:	4283      	cmp	r3, r0
 8005ce4:	dc05      	bgt.n	8005cf2 <__swbuf_r+0x56>
 8005ce6:	0021      	movs	r1, r4
 8005ce8:	0030      	movs	r0, r6
 8005cea:	f7ff fdcb 	bl	8005884 <_fflush_r>
 8005cee:	2800      	cmp	r0, #0
 8005cf0:	d1ed      	bne.n	8005cce <__swbuf_r+0x32>
 8005cf2:	68a3      	ldr	r3, [r4, #8]
 8005cf4:	3001      	adds	r0, #1
 8005cf6:	3b01      	subs	r3, #1
 8005cf8:	60a3      	str	r3, [r4, #8]
 8005cfa:	6823      	ldr	r3, [r4, #0]
 8005cfc:	1c5a      	adds	r2, r3, #1
 8005cfe:	6022      	str	r2, [r4, #0]
 8005d00:	701f      	strb	r7, [r3, #0]
 8005d02:	6963      	ldr	r3, [r4, #20]
 8005d04:	4283      	cmp	r3, r0
 8005d06:	d004      	beq.n	8005d12 <__swbuf_r+0x76>
 8005d08:	89a3      	ldrh	r3, [r4, #12]
 8005d0a:	07db      	lsls	r3, r3, #31
 8005d0c:	d5e1      	bpl.n	8005cd2 <__swbuf_r+0x36>
 8005d0e:	2d0a      	cmp	r5, #10
 8005d10:	d1df      	bne.n	8005cd2 <__swbuf_r+0x36>
 8005d12:	0021      	movs	r1, r4
 8005d14:	0030      	movs	r0, r6
 8005d16:	f7ff fdb5 	bl	8005884 <_fflush_r>
 8005d1a:	2800      	cmp	r0, #0
 8005d1c:	d0d9      	beq.n	8005cd2 <__swbuf_r+0x36>
 8005d1e:	e7d6      	b.n	8005cce <__swbuf_r+0x32>

08005d20 <__swsetup_r>:
 8005d20:	4b2d      	ldr	r3, [pc, #180]	@ (8005dd8 <__swsetup_r+0xb8>)
 8005d22:	b570      	push	{r4, r5, r6, lr}
 8005d24:	0005      	movs	r5, r0
 8005d26:	6818      	ldr	r0, [r3, #0]
 8005d28:	000c      	movs	r4, r1
 8005d2a:	2800      	cmp	r0, #0
 8005d2c:	d004      	beq.n	8005d38 <__swsetup_r+0x18>
 8005d2e:	6a03      	ldr	r3, [r0, #32]
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	d101      	bne.n	8005d38 <__swsetup_r+0x18>
 8005d34:	f7fe f8e2 	bl	8003efc <__sinit>
 8005d38:	230c      	movs	r3, #12
 8005d3a:	5ee2      	ldrsh	r2, [r4, r3]
 8005d3c:	0713      	lsls	r3, r2, #28
 8005d3e:	d423      	bmi.n	8005d88 <__swsetup_r+0x68>
 8005d40:	06d3      	lsls	r3, r2, #27
 8005d42:	d407      	bmi.n	8005d54 <__swsetup_r+0x34>
 8005d44:	2309      	movs	r3, #9
 8005d46:	602b      	str	r3, [r5, #0]
 8005d48:	2340      	movs	r3, #64	@ 0x40
 8005d4a:	2001      	movs	r0, #1
 8005d4c:	4313      	orrs	r3, r2
 8005d4e:	81a3      	strh	r3, [r4, #12]
 8005d50:	4240      	negs	r0, r0
 8005d52:	e03a      	b.n	8005dca <__swsetup_r+0xaa>
 8005d54:	0752      	lsls	r2, r2, #29
 8005d56:	d513      	bpl.n	8005d80 <__swsetup_r+0x60>
 8005d58:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005d5a:	2900      	cmp	r1, #0
 8005d5c:	d008      	beq.n	8005d70 <__swsetup_r+0x50>
 8005d5e:	0023      	movs	r3, r4
 8005d60:	3344      	adds	r3, #68	@ 0x44
 8005d62:	4299      	cmp	r1, r3
 8005d64:	d002      	beq.n	8005d6c <__swsetup_r+0x4c>
 8005d66:	0028      	movs	r0, r5
 8005d68:	f7ff f85c 	bl	8004e24 <_free_r>
 8005d6c:	2300      	movs	r3, #0
 8005d6e:	6363      	str	r3, [r4, #52]	@ 0x34
 8005d70:	2224      	movs	r2, #36	@ 0x24
 8005d72:	89a3      	ldrh	r3, [r4, #12]
 8005d74:	4393      	bics	r3, r2
 8005d76:	81a3      	strh	r3, [r4, #12]
 8005d78:	2300      	movs	r3, #0
 8005d7a:	6063      	str	r3, [r4, #4]
 8005d7c:	6923      	ldr	r3, [r4, #16]
 8005d7e:	6023      	str	r3, [r4, #0]
 8005d80:	2308      	movs	r3, #8
 8005d82:	89a2      	ldrh	r2, [r4, #12]
 8005d84:	4313      	orrs	r3, r2
 8005d86:	81a3      	strh	r3, [r4, #12]
 8005d88:	6923      	ldr	r3, [r4, #16]
 8005d8a:	2b00      	cmp	r3, #0
 8005d8c:	d10b      	bne.n	8005da6 <__swsetup_r+0x86>
 8005d8e:	21a0      	movs	r1, #160	@ 0xa0
 8005d90:	2280      	movs	r2, #128	@ 0x80
 8005d92:	89a3      	ldrh	r3, [r4, #12]
 8005d94:	0089      	lsls	r1, r1, #2
 8005d96:	0092      	lsls	r2, r2, #2
 8005d98:	400b      	ands	r3, r1
 8005d9a:	4293      	cmp	r3, r2
 8005d9c:	d003      	beq.n	8005da6 <__swsetup_r+0x86>
 8005d9e:	0021      	movs	r1, r4
 8005da0:	0028      	movs	r0, r5
 8005da2:	f000 f88f 	bl	8005ec4 <__smakebuf_r>
 8005da6:	230c      	movs	r3, #12
 8005da8:	5ee2      	ldrsh	r2, [r4, r3]
 8005daa:	2101      	movs	r1, #1
 8005dac:	0013      	movs	r3, r2
 8005dae:	400b      	ands	r3, r1
 8005db0:	420a      	tst	r2, r1
 8005db2:	d00b      	beq.n	8005dcc <__swsetup_r+0xac>
 8005db4:	2300      	movs	r3, #0
 8005db6:	60a3      	str	r3, [r4, #8]
 8005db8:	6963      	ldr	r3, [r4, #20]
 8005dba:	425b      	negs	r3, r3
 8005dbc:	61a3      	str	r3, [r4, #24]
 8005dbe:	2000      	movs	r0, #0
 8005dc0:	6923      	ldr	r3, [r4, #16]
 8005dc2:	4283      	cmp	r3, r0
 8005dc4:	d101      	bne.n	8005dca <__swsetup_r+0xaa>
 8005dc6:	0613      	lsls	r3, r2, #24
 8005dc8:	d4be      	bmi.n	8005d48 <__swsetup_r+0x28>
 8005dca:	bd70      	pop	{r4, r5, r6, pc}
 8005dcc:	0791      	lsls	r1, r2, #30
 8005dce:	d400      	bmi.n	8005dd2 <__swsetup_r+0xb2>
 8005dd0:	6963      	ldr	r3, [r4, #20]
 8005dd2:	60a3      	str	r3, [r4, #8]
 8005dd4:	e7f3      	b.n	8005dbe <__swsetup_r+0x9e>
 8005dd6:	46c0      	nop			@ (mov r8, r8)
 8005dd8:	20000028 	.word	0x20000028

08005ddc <_raise_r>:
 8005ddc:	b570      	push	{r4, r5, r6, lr}
 8005dde:	0004      	movs	r4, r0
 8005de0:	000d      	movs	r5, r1
 8005de2:	291f      	cmp	r1, #31
 8005de4:	d904      	bls.n	8005df0 <_raise_r+0x14>
 8005de6:	2316      	movs	r3, #22
 8005de8:	6003      	str	r3, [r0, #0]
 8005dea:	2001      	movs	r0, #1
 8005dec:	4240      	negs	r0, r0
 8005dee:	bd70      	pop	{r4, r5, r6, pc}
 8005df0:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	d004      	beq.n	8005e00 <_raise_r+0x24>
 8005df6:	008a      	lsls	r2, r1, #2
 8005df8:	189b      	adds	r3, r3, r2
 8005dfa:	681a      	ldr	r2, [r3, #0]
 8005dfc:	2a00      	cmp	r2, #0
 8005dfe:	d108      	bne.n	8005e12 <_raise_r+0x36>
 8005e00:	0020      	movs	r0, r4
 8005e02:	f000 f831 	bl	8005e68 <_getpid_r>
 8005e06:	002a      	movs	r2, r5
 8005e08:	0001      	movs	r1, r0
 8005e0a:	0020      	movs	r0, r4
 8005e0c:	f000 f81a 	bl	8005e44 <_kill_r>
 8005e10:	e7ed      	b.n	8005dee <_raise_r+0x12>
 8005e12:	2a01      	cmp	r2, #1
 8005e14:	d009      	beq.n	8005e2a <_raise_r+0x4e>
 8005e16:	1c51      	adds	r1, r2, #1
 8005e18:	d103      	bne.n	8005e22 <_raise_r+0x46>
 8005e1a:	2316      	movs	r3, #22
 8005e1c:	6003      	str	r3, [r0, #0]
 8005e1e:	2001      	movs	r0, #1
 8005e20:	e7e5      	b.n	8005dee <_raise_r+0x12>
 8005e22:	2100      	movs	r1, #0
 8005e24:	0028      	movs	r0, r5
 8005e26:	6019      	str	r1, [r3, #0]
 8005e28:	4790      	blx	r2
 8005e2a:	2000      	movs	r0, #0
 8005e2c:	e7df      	b.n	8005dee <_raise_r+0x12>
	...

08005e30 <raise>:
 8005e30:	b510      	push	{r4, lr}
 8005e32:	4b03      	ldr	r3, [pc, #12]	@ (8005e40 <raise+0x10>)
 8005e34:	0001      	movs	r1, r0
 8005e36:	6818      	ldr	r0, [r3, #0]
 8005e38:	f7ff ffd0 	bl	8005ddc <_raise_r>
 8005e3c:	bd10      	pop	{r4, pc}
 8005e3e:	46c0      	nop			@ (mov r8, r8)
 8005e40:	20000028 	.word	0x20000028

08005e44 <_kill_r>:
 8005e44:	2300      	movs	r3, #0
 8005e46:	b570      	push	{r4, r5, r6, lr}
 8005e48:	4d06      	ldr	r5, [pc, #24]	@ (8005e64 <_kill_r+0x20>)
 8005e4a:	0004      	movs	r4, r0
 8005e4c:	0008      	movs	r0, r1
 8005e4e:	0011      	movs	r1, r2
 8005e50:	602b      	str	r3, [r5, #0]
 8005e52:	f7fc fb74 	bl	800253e <_kill>
 8005e56:	1c43      	adds	r3, r0, #1
 8005e58:	d103      	bne.n	8005e62 <_kill_r+0x1e>
 8005e5a:	682b      	ldr	r3, [r5, #0]
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	d000      	beq.n	8005e62 <_kill_r+0x1e>
 8005e60:	6023      	str	r3, [r4, #0]
 8005e62:	bd70      	pop	{r4, r5, r6, pc}
 8005e64:	200003e4 	.word	0x200003e4

08005e68 <_getpid_r>:
 8005e68:	b510      	push	{r4, lr}
 8005e6a:	f7fc fb62 	bl	8002532 <_getpid>
 8005e6e:	bd10      	pop	{r4, pc}

08005e70 <__swhatbuf_r>:
 8005e70:	b570      	push	{r4, r5, r6, lr}
 8005e72:	000e      	movs	r6, r1
 8005e74:	001d      	movs	r5, r3
 8005e76:	230e      	movs	r3, #14
 8005e78:	5ec9      	ldrsh	r1, [r1, r3]
 8005e7a:	0014      	movs	r4, r2
 8005e7c:	b096      	sub	sp, #88	@ 0x58
 8005e7e:	2900      	cmp	r1, #0
 8005e80:	da0c      	bge.n	8005e9c <__swhatbuf_r+0x2c>
 8005e82:	89b2      	ldrh	r2, [r6, #12]
 8005e84:	2380      	movs	r3, #128	@ 0x80
 8005e86:	0011      	movs	r1, r2
 8005e88:	4019      	ands	r1, r3
 8005e8a:	421a      	tst	r2, r3
 8005e8c:	d114      	bne.n	8005eb8 <__swhatbuf_r+0x48>
 8005e8e:	2380      	movs	r3, #128	@ 0x80
 8005e90:	00db      	lsls	r3, r3, #3
 8005e92:	2000      	movs	r0, #0
 8005e94:	6029      	str	r1, [r5, #0]
 8005e96:	6023      	str	r3, [r4, #0]
 8005e98:	b016      	add	sp, #88	@ 0x58
 8005e9a:	bd70      	pop	{r4, r5, r6, pc}
 8005e9c:	466a      	mov	r2, sp
 8005e9e:	f000 f853 	bl	8005f48 <_fstat_r>
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	dbed      	blt.n	8005e82 <__swhatbuf_r+0x12>
 8005ea6:	23f0      	movs	r3, #240	@ 0xf0
 8005ea8:	9901      	ldr	r1, [sp, #4]
 8005eaa:	021b      	lsls	r3, r3, #8
 8005eac:	4019      	ands	r1, r3
 8005eae:	4b04      	ldr	r3, [pc, #16]	@ (8005ec0 <__swhatbuf_r+0x50>)
 8005eb0:	18c9      	adds	r1, r1, r3
 8005eb2:	424b      	negs	r3, r1
 8005eb4:	4159      	adcs	r1, r3
 8005eb6:	e7ea      	b.n	8005e8e <__swhatbuf_r+0x1e>
 8005eb8:	2100      	movs	r1, #0
 8005eba:	2340      	movs	r3, #64	@ 0x40
 8005ebc:	e7e9      	b.n	8005e92 <__swhatbuf_r+0x22>
 8005ebe:	46c0      	nop			@ (mov r8, r8)
 8005ec0:	ffffe000 	.word	0xffffe000

08005ec4 <__smakebuf_r>:
 8005ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ec6:	2602      	movs	r6, #2
 8005ec8:	898b      	ldrh	r3, [r1, #12]
 8005eca:	0005      	movs	r5, r0
 8005ecc:	000c      	movs	r4, r1
 8005ece:	b085      	sub	sp, #20
 8005ed0:	4233      	tst	r3, r6
 8005ed2:	d007      	beq.n	8005ee4 <__smakebuf_r+0x20>
 8005ed4:	0023      	movs	r3, r4
 8005ed6:	3347      	adds	r3, #71	@ 0x47
 8005ed8:	6023      	str	r3, [r4, #0]
 8005eda:	6123      	str	r3, [r4, #16]
 8005edc:	2301      	movs	r3, #1
 8005ede:	6163      	str	r3, [r4, #20]
 8005ee0:	b005      	add	sp, #20
 8005ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ee4:	ab03      	add	r3, sp, #12
 8005ee6:	aa02      	add	r2, sp, #8
 8005ee8:	f7ff ffc2 	bl	8005e70 <__swhatbuf_r>
 8005eec:	9f02      	ldr	r7, [sp, #8]
 8005eee:	9001      	str	r0, [sp, #4]
 8005ef0:	0039      	movs	r1, r7
 8005ef2:	0028      	movs	r0, r5
 8005ef4:	f7ff f80c 	bl	8004f10 <_malloc_r>
 8005ef8:	2800      	cmp	r0, #0
 8005efa:	d108      	bne.n	8005f0e <__smakebuf_r+0x4a>
 8005efc:	220c      	movs	r2, #12
 8005efe:	5ea3      	ldrsh	r3, [r4, r2]
 8005f00:	059a      	lsls	r2, r3, #22
 8005f02:	d4ed      	bmi.n	8005ee0 <__smakebuf_r+0x1c>
 8005f04:	2203      	movs	r2, #3
 8005f06:	4393      	bics	r3, r2
 8005f08:	431e      	orrs	r6, r3
 8005f0a:	81a6      	strh	r6, [r4, #12]
 8005f0c:	e7e2      	b.n	8005ed4 <__smakebuf_r+0x10>
 8005f0e:	2380      	movs	r3, #128	@ 0x80
 8005f10:	89a2      	ldrh	r2, [r4, #12]
 8005f12:	6020      	str	r0, [r4, #0]
 8005f14:	4313      	orrs	r3, r2
 8005f16:	81a3      	strh	r3, [r4, #12]
 8005f18:	9b03      	ldr	r3, [sp, #12]
 8005f1a:	6120      	str	r0, [r4, #16]
 8005f1c:	6167      	str	r7, [r4, #20]
 8005f1e:	2b00      	cmp	r3, #0
 8005f20:	d00c      	beq.n	8005f3c <__smakebuf_r+0x78>
 8005f22:	0028      	movs	r0, r5
 8005f24:	230e      	movs	r3, #14
 8005f26:	5ee1      	ldrsh	r1, [r4, r3]
 8005f28:	f000 f820 	bl	8005f6c <_isatty_r>
 8005f2c:	2800      	cmp	r0, #0
 8005f2e:	d005      	beq.n	8005f3c <__smakebuf_r+0x78>
 8005f30:	2303      	movs	r3, #3
 8005f32:	89a2      	ldrh	r2, [r4, #12]
 8005f34:	439a      	bics	r2, r3
 8005f36:	3b02      	subs	r3, #2
 8005f38:	4313      	orrs	r3, r2
 8005f3a:	81a3      	strh	r3, [r4, #12]
 8005f3c:	89a3      	ldrh	r3, [r4, #12]
 8005f3e:	9a01      	ldr	r2, [sp, #4]
 8005f40:	4313      	orrs	r3, r2
 8005f42:	81a3      	strh	r3, [r4, #12]
 8005f44:	e7cc      	b.n	8005ee0 <__smakebuf_r+0x1c>
	...

08005f48 <_fstat_r>:
 8005f48:	2300      	movs	r3, #0
 8005f4a:	b570      	push	{r4, r5, r6, lr}
 8005f4c:	4d06      	ldr	r5, [pc, #24]	@ (8005f68 <_fstat_r+0x20>)
 8005f4e:	0004      	movs	r4, r0
 8005f50:	0008      	movs	r0, r1
 8005f52:	0011      	movs	r1, r2
 8005f54:	602b      	str	r3, [r5, #0]
 8005f56:	f7fc fb52 	bl	80025fe <_fstat>
 8005f5a:	1c43      	adds	r3, r0, #1
 8005f5c:	d103      	bne.n	8005f66 <_fstat_r+0x1e>
 8005f5e:	682b      	ldr	r3, [r5, #0]
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d000      	beq.n	8005f66 <_fstat_r+0x1e>
 8005f64:	6023      	str	r3, [r4, #0]
 8005f66:	bd70      	pop	{r4, r5, r6, pc}
 8005f68:	200003e4 	.word	0x200003e4

08005f6c <_isatty_r>:
 8005f6c:	2300      	movs	r3, #0
 8005f6e:	b570      	push	{r4, r5, r6, lr}
 8005f70:	4d06      	ldr	r5, [pc, #24]	@ (8005f8c <_isatty_r+0x20>)
 8005f72:	0004      	movs	r4, r0
 8005f74:	0008      	movs	r0, r1
 8005f76:	602b      	str	r3, [r5, #0]
 8005f78:	f7fc fb4f 	bl	800261a <_isatty>
 8005f7c:	1c43      	adds	r3, r0, #1
 8005f7e:	d103      	bne.n	8005f88 <_isatty_r+0x1c>
 8005f80:	682b      	ldr	r3, [r5, #0]
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d000      	beq.n	8005f88 <_isatty_r+0x1c>
 8005f86:	6023      	str	r3, [r4, #0]
 8005f88:	bd70      	pop	{r4, r5, r6, pc}
 8005f8a:	46c0      	nop			@ (mov r8, r8)
 8005f8c:	200003e4 	.word	0x200003e4

08005f90 <_init>:
 8005f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f92:	46c0      	nop			@ (mov r8, r8)
 8005f94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f96:	bc08      	pop	{r3}
 8005f98:	469e      	mov	lr, r3
 8005f9a:	4770      	bx	lr

08005f9c <_fini>:
 8005f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f9e:	46c0      	nop			@ (mov r8, r8)
 8005fa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005fa2:	bc08      	pop	{r3}
 8005fa4:	469e      	mov	lr, r3
 8005fa6:	4770      	bx	lr

08005fa8 <__FLASH_Program_Fast_veneer>:
 8005fa8:	b401      	push	{r0}
 8005faa:	4802      	ldr	r0, [pc, #8]	@ (8005fb4 <__FLASH_Program_Fast_veneer+0xc>)
 8005fac:	4684      	mov	ip, r0
 8005fae:	bc01      	pop	{r0}
 8005fb0:	4760      	bx	ip
 8005fb2:	bf00      	nop
 8005fb4:	200001e5 	.word	0x200001e5

Disassembly of section .data:

20000000 <data>:
20000000:	08005fb8                                ._..

20000004 <int_data>:
20000004:	0000007b                                {...

20000008 <float_data>:
20000008:	42f6e979                                y..B

2000000c <char_data>:
2000000c:	00000041                                A...

20000010 <SystemCoreClock>:
20000010:	00b71b00                                ....

20000014 <uwTickPrio>:
20000014:	00000004                                ....

20000018 <uwTickFreq>:
20000018:	00000001                                ....

2000001c <__sglue>:
2000001c:	00000000 00000003 200002a8              ........... 

20000028 <_impure_ptr>:
20000028:	2000002c                                ,.. 

2000002c <_impure_data>:
2000002c:	00000000 200002a8 20000310 20000378     ....... ... x.. 
	...

20000078 <__global_locale>:
20000078:	00000043 00000000 00000000 00000000     C...............
	...
20000098:	00000043 00000000 00000000 00000000     C...............
	...
200000b8:	00000043 00000000 00000000 00000000     C...............
	...
200000d8:	00000043 00000000 00000000 00000000     C...............
	...
200000f8:	00000043 00000000 00000000 00000000     C...............
	...
20000118:	00000043 00000000 00000000 00000000     C...............
	...
20000138:	00000043 00000000 00000000 00000000     C...............
	...
20000158:	080059cf 080059ab 00000000 080062ae     .Y...Y.......b..
20000168:	08006270 080062ad 080062ad 080062ad     pb...b...b...b..
20000178:	080062ad 080062ad 080062ad 080062ad     .b...b...b...b..
20000188:	080062ad 080062ad ffffffff ffffffff     .b...b..........
20000198:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200001c0:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200001e4 <FLASH_Program_Fast>:
  * @param  Address Specifies the address to be programmed.
  * @param  DataAddress Specifies the address where the data are stored.
  * @retval None
  */
static __RAM_FUNC void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
{
200001e4:	b580      	push	{r7, lr}
200001e6:	b088      	sub	sp, #32
200001e8:	af00      	add	r7, sp, #0
200001ea:	6078      	str	r0, [r7, #4]
200001ec:	6039      	str	r1, [r7, #0]
  uint8_t index = 0;
200001ee:	231f      	movs	r3, #31
200001f0:	18fb      	adds	r3, r7, r3
200001f2:	2200      	movs	r2, #0
200001f4:	701a      	strb	r2, [r3, #0]
  uint32_t dest = Address;
200001f6:	687b      	ldr	r3, [r7, #4]
200001f8:	61bb      	str	r3, [r7, #24]
  uint32_t src = DataAddress;
200001fa:	683b      	ldr	r3, [r7, #0]
200001fc:	617b      	str	r3, [r7, #20]
  uint32_t primask_bit;

  /* Set FSTPG bit */
  SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
200001fe:	4b1a      	ldr	r3, [pc, #104]	@ (20000268 <FLASH_Program_Fast+0x84>)
20000200:	695a      	ldr	r2, [r3, #20]
20000202:	4b19      	ldr	r3, [pc, #100]	@ (20000268 <FLASH_Program_Fast+0x84>)
20000204:	2180      	movs	r1, #128	@ 0x80
20000206:	02c9      	lsls	r1, r1, #11
20000208:	430a      	orrs	r2, r1
2000020a:	615a      	str	r2, [r3, #20]
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
2000020c:	f3ef 8310 	mrs	r3, PRIMASK
20000210:	60fb      	str	r3, [r7, #12]
  return(result);
20000212:	68fb      	ldr	r3, [r7, #12]

  /* Enter critical section: row programming should not be longer than 7 ms */
  primask_bit = __get_PRIMASK();
20000214:	613b      	str	r3, [r7, #16]
  __ASM volatile ("cpsid i" : : : "memory");
20000216:	b672      	cpsid	i
}
20000218:	46c0      	nop			@ (mov r8, r8)
  __disable_irq();

  /* Fast Program : 64 words */
  while (index < 64U)
2000021a:	e00f      	b.n	2000023c <FLASH_Program_Fast+0x58>
  {
    *(uint32_t *)dest = *(uint32_t *)src;
2000021c:	697a      	ldr	r2, [r7, #20]
2000021e:	69bb      	ldr	r3, [r7, #24]
20000220:	6812      	ldr	r2, [r2, #0]
20000222:	601a      	str	r2, [r3, #0]
    src += 4U;
20000224:	697b      	ldr	r3, [r7, #20]
20000226:	3304      	adds	r3, #4
20000228:	617b      	str	r3, [r7, #20]
    dest += 4U;
2000022a:	69bb      	ldr	r3, [r7, #24]
2000022c:	3304      	adds	r3, #4
2000022e:	61bb      	str	r3, [r7, #24]
    index++;
20000230:	211f      	movs	r1, #31
20000232:	187b      	adds	r3, r7, r1
20000234:	781a      	ldrb	r2, [r3, #0]
20000236:	187b      	adds	r3, r7, r1
20000238:	3201      	adds	r2, #1
2000023a:	701a      	strb	r2, [r3, #0]
  while (index < 64U)
2000023c:	231f      	movs	r3, #31
2000023e:	18fb      	adds	r3, r7, r3
20000240:	781b      	ldrb	r3, [r3, #0]
20000242:	2b3f      	cmp	r3, #63	@ 0x3f
20000244:	d9ea      	bls.n	2000021c <FLASH_Program_Fast+0x38>
  }

  /* wait for BSY1 in order to be sure that flash operation is ended befoire
     allowing prefetch in flash. Timeout does not return status, as it will
     be anyway done later */
  while ((FLASH->SR & FLASH_SR_BSY1) != 0x00U)
20000246:	46c0      	nop			@ (mov r8, r8)
20000248:	4b07      	ldr	r3, [pc, #28]	@ (20000268 <FLASH_Program_Fast+0x84>)
2000024a:	691a      	ldr	r2, [r3, #16]
2000024c:	2380      	movs	r3, #128	@ 0x80
2000024e:	025b      	lsls	r3, r3, #9
20000250:	4013      	ands	r3, r2
20000252:	d1f9      	bne.n	20000248 <FLASH_Program_Fast+0x64>
20000254:	693b      	ldr	r3, [r7, #16]
20000256:	60bb      	str	r3, [r7, #8]
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
20000258:	68bb      	ldr	r3, [r7, #8]
2000025a:	f383 8810 	msr	PRIMASK, r3
}
2000025e:	46c0      	nop			@ (mov r8, r8)
  {
  }

  /* Exit critical section: restore previous priority mask */
  __set_PRIMASK(primask_bit);
}
20000260:	46c0      	nop			@ (mov r8, r8)
20000262:	46bd      	mov	sp, r7
20000264:	b008      	add	sp, #32
20000266:	bd80      	pop	{r7, pc}
20000268:	40022000 	.word	0x40022000
