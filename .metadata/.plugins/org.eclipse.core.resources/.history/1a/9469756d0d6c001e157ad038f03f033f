/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/WasherContainerBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

WasherContainerBase::WasherContainerBase() :
    updateItemCallback(this, &WasherContainerBase::updateItemCallbackHandler),
    buttonCallback(this, &WasherContainerBase::buttonCallbackHandler)
{
    setWidth(480);
    setHeight(272);
    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    imageGreyCenter.setXY(120, 16);
    imageGreyCenter.setBitmap(touchgfx::Bitmap(BITMAP_BACK_CENTER_GRAY_ID));
    add(imageGreyCenter);

    bottombar.setXY(5, 196);
    bottombar.setBitmap(touchgfx::Bitmap(BITMAP_BOTTOM_BAR_ID));
    add(bottombar);

    topbar.setXY(0, 0);
    topbar.setBitmap(touchgfx::Bitmap(BITMAP_TOP_BAR_ID));
    add(topbar);

    washerWheel.setPosition(50, 85, 382, 100);
    washerWheel.setHorizontal(true);
    washerWheel.setCircular(true);
    washerWheel.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    washerWheel.setSwipeAcceleration(10);
    washerWheel.setDragAcceleration(10);
    washerWheel.setNumberOfItems(7);
    washerWheel.setSelectedItemOffset(117);
    washerWheel.setSelectedItemExtraSize(1, 0);
    washerWheel.setSelectedItemMargin(5, 0);
    washerWheel.setDrawableSize(100, 23);
    washerWheel.setDrawables(washerWheelListItems, updateItemCallback,
    
                          washerWheelSelectedListItems, updateItemCallback);
    washerWheel.animateToItem(0, 0);
    add(washerWheel);

    imageWhiteCenter.setXY(150, 45);
    imageWhiteCenter.setBitmap(touchgfx::Bitmap(BITMAP_BACK_CENTER_WHITE_ID));
    add(imageWhiteCenter);

    leftShade.setXY(0, 61);
    leftShade.setBitmap(touchgfx::Bitmap(BITMAP_SIDE_GRADIENT_LEFT_ID));
    add(leftShade);

    rightShade.setXY(432, 61);
    rightShade.setBitmap(touchgfx::Bitmap(BITMAP_SIDE_GRADIENT_RIGHT_ID));
    add(rightShade);

    leftButton.setXY(0, 112);
    leftButton.setBitmaps(touchgfx::Bitmap(BITMAP_LEFT_ARROW_ID), touchgfx::Bitmap(BITMAP_LEFT_ARROW_ID));
    leftButton.setAction(buttonCallback);
    add(leftButton);

    rightButton.setXY(440, 112);
    rightButton.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHT_ARROW_ID), touchgfx::Bitmap(BITMAP_RIGHT_ARROW_ID));
    rightButton.setAction(buttonCallback);
    add(rightButton);

    buttonStart.setXY(190, 86);
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_START_ID), touchgfx::Bitmap(BITMAP_BLUE_START_ID));
    buttonStart.setAlpha(0);
    add(buttonStart);

    centerAnimation.setXY(104, 28);
    centerAnimation.setBitmaps(BITMAP_COMP_00000_ID, BITMAP_COMP_00026_ID);
    centerAnimation.setUpdateTicksInterval(2);
    centerAnimation.setVisible(false);
    add(centerAnimation);

    imageOption1.setXY(305, 217);
    imageOption1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_ALLERGY_50PX_ID));
    add(imageOption1);

    imageOption2.setXY(361, 217);
    imageOption2.setBitmap(touchgfx::Bitmap(BITMAP_ICON_ECO_WASH_50PX_ID));
    add(imageOption2);

    imageOption3.setXY(417, 217);
    imageOption3.setBitmap(touchgfx::Bitmap(BITMAP_ICON_PREWASH_50PX_ID));
    add(imageOption3);

    imageRPM.setXY(14, 217);
    imageRPM.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SPIN_SPEED_1000_RPM_50PX_ID));
    add(imageRPM);

    imageHeat.setXY(71, 217);
    imageHeat.setBitmap(touchgfx::Bitmap(BITMAP_ICON_HEAT_60_50PX_ID));
    add(imageHeat);

    imageLevel.setXY(125, 217);
    imageLevel.setBitmap(touchgfx::Bitmap(BITMAP_ICON_SOIL_MEDIUM_50PX_ID));
    add(imageLevel);

    icon1.setXY(-120, 70);
    icon1.setBitmap(touchgfx::Bitmap(BITMAP_SOIL_LEVEL_MEDIUM_ID));
    add(icon1);

    icon2.setXY(-120, 106);
    icon2.setBitmap(touchgfx::Bitmap(BITMAP_HEAT_60_ID));
    add(icon2);

    icon3.setXY(-120, 142);
    icon3.setBitmap(touchgfx::Bitmap(BITMAP_SPIN_1600_ID));
    add(icon3);

    icon4.setXY(480, 71);
    icon4.setBitmap(touchgfx::Bitmap(BITMAP_ALLERGY_ID));
    add(icon4);

    icon5.setXY(480, 105);
    icon5.setBitmap(touchgfx::Bitmap(BITMAP_ECO_WASH_ID));
    add(icon5);

    icon6.setXY(480, 140);
    icon6.setBitmap(touchgfx::Bitmap(BITMAP_PREWASH_ID));
    add(icon6);

    leftReplacementImage.setXY(54, 85);
    leftReplacementImage.setBitmap(touchgfx::Bitmap(BITMAP_ICON_CENTER_ACTIVEWEAR_ID));
    leftReplacementImage.setVisible(false);
    add(leftReplacementImage);

    rightReplacementImage.setXY(346, 85);
    rightReplacementImage.setBitmap(touchgfx::Bitmap(BITMAP_ICON_CENTER_ACTIVEWEAR_ID));
    rightReplacementImage.setVisible(false);
    add(rightReplacementImage);

    textAreaProgramName.setPosition(40, 13, 180, 24);
    textAreaProgramName.setColor(touchgfx::Color::getColorFromRGB(92, 92, 92));
    textAreaProgramName.setLinespacing(0);
    Unicode::snprintf(textAreaProgramNameBuffer, TEXTAREAPROGRAMNAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1TQR).getText());
    textAreaProgramName.setWildcard(textAreaProgramNameBuffer);
    textAreaProgramName.setTypedText(touchgfx::TypedText(T_PROGRAMNAMETEXT));
    add(textAreaProgramName);

    textAreaDash.setPosition(220, 13, 40, 24);
    textAreaDash.setColor(touchgfx::Color::getColorFromRGB(92, 92, 92));
    textAreaDash.setLinespacing(0);
    textAreaDash.setTypedText(touchgfx::TypedText(T_DASHTEXT));
    add(textAreaDash);

    textAreaProgramLength.setPosition(260, 13, 180, 24);
    textAreaProgramLength.setColor(touchgfx::Color::getColorFromRGB(92, 92, 92));
    textAreaProgramLength.setLinespacing(0);
    textAreaProgramLengthBuffer[0] = 0;
    textAreaProgramLength.setWildcard(textAreaProgramLengthBuffer);
    textAreaProgramLength.setTypedText(touchgfx::TypedText(T_PROGRAMLENGTHTEXT));
    add(textAreaProgramLength);

    buttonRun.setXY(48, 179);
    buttonRun.setBitmaps(touchgfx::Bitmap(BITMAP_RUNNING_BUTTON_ID), touchgfx::Bitmap(BITMAP_RUNNING_BUTTON_ID));
    buttonRun.setVisible(false);
    buttonRun.setAction(buttonCallback);
    add(buttonRun);

    buttonPause.setXY(361, 179);
    buttonPause.setBitmaps(touchgfx::Bitmap(BITMAP_PAUSE_STOP_BUTTON_ID), touchgfx::Bitmap(BITMAP_PAUSE_STOP_BUTTON_ID));
    buttonPause.setVisible(false);
    buttonPause.setAction(buttonCallback);
    add(buttonPause);

    washAnimation.setXY(174, 70);
    washAnimation.setBitmaps(BITMAP_WASH_FRAME_01_ID, BITMAP_WASH_FRAME_11_ID);
    washAnimation.setUpdateTicksInterval(4);
    washAnimation.setVisible(false);
    add(washAnimation);

    prewashIcon.setXY(35, 15);
    prewashIcon.setBitmap(touchgfx::Bitmap(BITMAP_TOP_WASH_PREWASH_INACTIVE_ID));
    prewashIcon.setVisible(false);
    add(prewashIcon);

    washingIcon.setXY(113, 15);
    washingIcon.setBitmap(touchgfx::Bitmap(BITMAP_TOP_WASH_WASHING_INACTIVE_ID));
    washingIcon.setVisible(false);
    add(washingIcon);

    rinsingIcon.setXY(293, 15);
    rinsingIcon.setBitmap(touchgfx::Bitmap(BITMAP_TOP_WASH_RINSING_INACTIVE_ID));
    rinsingIcon.setVisible(false);
    add(rinsingIcon);

    spinCycleIcon.setXY(360, 15);
    spinCycleIcon.setBitmap(touchgfx::Bitmap(BITMAP_TOP_WASH_SPIN_CYCLE_INACTIVE_ID));
    spinCycleIcon.setVisible(false);
    add(spinCycleIcon);

    progressBar.setPosition(134, 30, 210, 210);
    progressBar.setCenter(105, 105);
    progressBar.setRadius(97);
    progressBar.setLineWidth(15);
    progressBar.setArc(0, 0);
    progressBar.setCapPrecision(10);
    progressBarPainter.setColor(touchgfx::Color::getColorFromRGB(69, 77, 86));
    progressBar.setPainter(progressBarPainter);
    progressBar.setAlpha(0);
    progressBar.setVisible(false);
    add(progressBar);

    washDoneBackground.setXY(190, 86);
    washDoneBackground.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_DONE_ID));
    washDoneBackground.setVisible(false);
    add(washDoneBackground);
}

WasherContainerBase::~WasherContainerBase()
{

}

void WasherContainerBase::initialize()
{
    washerWheel.initialize();
    for (int i = 0; i < washerWheelListItems.getNumberOfDrawables(); i++)
    {
        washerWheelListItems[i].initialize();
    }
    for (int i = 0; i < washerWheelSelectedListItems.getNumberOfDrawables(); i++)
    {
        washerWheelSelectedListItems[i].initialize();
    }
}

void WasherContainerBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &rightButton)
    {
        //InteractionRight
        //When rightButton clicked call virtual function
        //Call rightButtonClicked
        rightButtonClicked();
    }
    if (&src == &leftButton)
    {
        //InteractionLeft
        //When leftButton clicked call virtual function
        //Call leftButtonClicked
        leftButtonClicked();
    }
    if (&src == &buttonRun)
    {
        //InteractionButtonRun
        //When buttonRun clicked call virtual function
        //Call buttonRunClicked
        buttonRunClicked();
    }
    if (&src == &buttonPause)
    {
        //InteractionButtonPause
        //When buttonPause clicked call virtual function
        //Call buttonPausedClicked
        buttonPausedClicked();
    }
}

void WasherContainerBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &washerWheelListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        WasherWheelItem* cc = (WasherWheelItem*)d;
        washerWheelUpdateItem(*cc, itemIndex);
    }
    if (items == &washerWheelSelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        WasherWheelCenterItem* cc = (WasherWheelCenterItem*)d;
        washerWheelUpdateCenterItem(*cc, itemIndex);
    }
}
