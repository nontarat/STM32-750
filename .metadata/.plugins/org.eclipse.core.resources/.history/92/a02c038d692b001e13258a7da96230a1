/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MAIN_H
#define __MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32h7xx_hal.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include <malloc.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdio.h>
#include <time.h>
#include <math.h>
#include <stdarg.h>
#include "hdr.h"

#ifdef SET_KBD
	#include "mpr121.h"
#endif

#define portKBD  &I2C1
/* USER CODE END Includes */

/* Exported types ------------------------------------------------------------*/
/* USER CODE BEGIN ET */
enum {
	devOK = 0,
	devSPI = 1,
	devUART = 2,
	devI2C = 4,
	devKBD = 8,
	devRTC = 0x10,
	devMem = 0x20,
	devDFP = 0x40,
	devFifo = 0x80,
	devBLE = 0x100
};

typedef enum {
	msg_empty = 0,
	//msg_rst,
	msg_250ms,
	msg_sec,
	msg_kbd,
	msg_showFolder,
	msg_getAllTracks,
	msg_getAllFolders,
	msg_folders,
	msg_newDir,
	msg_newDirSel,
	msg_ukDirSel,
	msg_tail,
	msg_chkMode,
	msg_play,
	msg_rplay,
	msg_stop,
	msg_back,
	msg_fwd,
	msg_volUp,
	msg_volDown,
	msg_volGet,
	msg_track,
	msg_eqSet,
	msg_eqGet,
	msg_dfpRX,
	msg_bleRx,
	msg_bleCmd,
	msg_bleList,
	msg_bleCliSave,
	msg_bleEnableList,
	msg_spiRxDone,
	msg_spiTxDone,
	msg_none
} evt_t;

#define _10ms 1
#define _20ms (_10ms * 2)
#define _30ms (_10ms * 3)
#define _40ms (_10ms * 4)
#define _50ms (_10ms * 5)
#define _60ms (_10ms * 6)
#define _70ms (_10ms * 7)
#define _80ms (_10ms * 8)
#define _90ms (_10ms * 9)
#define _100ms (_10ms * 10)
#define _150ms (_10ms * 15)
#define _200ms (_10ms * 20)
#define _250ms (_10ms * 25)
#define _300ms (_10ms * 30)
#define _350ms (_10ms * 35)
#define _400ms (_10ms * 40)
#define _450ms (_10ms * 45)
#define _500ms (_10ms * 50)
#define _600ms (_10ms * 60)
#define _700ms (_10ms * 70)
#define _800ms (_10ms * 80)
#define _900ms (_10ms * 90)
#define _1s (_100ms * 10)
#define _1s5 (_100ms * 15)
#define _2s (_1s * 2)//2000
#define _3s (_1s * 3)//3000
#define _4s (_1s * 4)//4000
#define _5s (_1s * 5)//5000
#define _10s (_1s * 10)//10000
//#define _15s (_1s * 15)
//#define _20s (_1s * 20)
//#define _25s (_1s * 25)
//#define _30s (_1s * 30)

#define MAX_UART_BUF  768
#define MAX_FIFO_SIZE 48
/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */
uint8_t Report(const char *tag, bool addTime, const char *fmt, ...);

/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define E3_Pin GPIO_PIN_3
#define E3_GPIO_Port GPIOE
#define IRQ_Pin GPIO_PIN_8
#define IRQ_GPIO_Port GPIOB

/* USER CODE BEGIN Private defines */
#define min_wait_ms 350
#define max_wait_ms 1000
#ifdef SET_KBD
	I2C_HandleTypeDef *portKBD;
	int16_t kbdAddr;
#endif
/* USER CODE END Private defines */

#ifdef __cplusplus
}
#endif

#endif /* __MAIN_H */
