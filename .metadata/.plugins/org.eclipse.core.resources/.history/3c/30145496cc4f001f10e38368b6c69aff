/*
 * lcd.c
 *
 *  Created on: Jul 31, 2024
 *      Author: user
 */



#include "lcd.h"
#include "string.h"
#include "stdio.h"
void lcd_init(void) {
    HAL_Delay(50);
    lcd_send_cmd(0x30);
    HAL_Delay(5);
    lcd_send_cmd(0x30);
    HAL_Delay(1);
    lcd_send_cmd(0x30);
    HAL_Delay(10);
    lcd_send_cmd(0x20);
    HAL_Delay(10);
    lcd_send_cmd(0x28);
    HAL_Delay(1);
    lcd_send_cmd(0x0C);
    HAL_Delay(1);
    lcd_send_cmd(0x01);
    HAL_Delay(2);
    lcd_send_cmd(0x06);
    HAL_Delay(1);
}

void lcd_send_cmd(char cmd) {
    lcd_send_to_lcd(cmd, 0);
}

void lcd_send_data(char data) {
    lcd_send_to_lcd(data, 1);
}

void lcd_send_string(char *str) {
    while (*str) lcd_send_data(*str++);
}

void lcd_send_to_lcd(char data, int rs) {
    HAL_GPIO_WritePin(LCD_Port, RS_Pin, rs);
    HAL_GPIO_WritePin(LCD_Port, EN_Pin, GPIO_PIN_SET);
    HAL_GPIO_WritePin(LCD_Port, D4_Pin, (data >> 4) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D5_Pin, (data >> 5) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D6_Pin, (data >> 6) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D7_Pin, (data >> 7) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, EN_Pin, GPIO_PIN_RESET);
    //HAL_Delay(1); // เพิ่มดีเลย์เล็กน้อย

    HAL_GPIO_WritePin(LCD_Port, EN_Pin, GPIO_PIN_SET);
    HAL_GPIO_WritePin(LCD_Port, D4_Pin, data & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D5_Pin, (data >> 1) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D6_Pin, (data >> 2) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, D7_Pin, (data >> 3) & 0x01);
    HAL_GPIO_WritePin(LCD_Port, EN_Pin, GPIO_PIN_RESET);

    HAL_Delay(1);
}

void lcd_set_cursor(uint8_t row, uint8_t col) {
	  uint8_t address;
	    switch(row) {
	        case 0:
	            address = 0x00 + col;
	            break;
	        case 1:
	            address = 0x40 + col;
	            break;
	        default:
	            address = 0x00 + col;
	            break;
	    }
	    lcd_send_cmd(0x80 | address);
}

void lcd_clear(void) {
    lcd_send_cmd(0x01);
    HAL_Delay(2);
}

void lcd_scroll_left(char *str, uint16_t delay) {
    int len = strlen(str);
    for (int i = 0; i < len; i++) {
        lcd_set_cursor(0, 0);
        lcd_send_string(str + i);
        HAL_Delay(delay);
        lcd_clear();
    }
}

void lcd_scroll_right(char *str, uint16_t delay) {
	char buffer[17];
	    size_t len = strlen(str);

	    for (size_t i = 0; i < len + 16; i++) {
	        memset(buffer, ' ', 16);
	        if (i < 16) {
	            strncpy(buffer + 16 - i, str, i);
	        } else {
	            strncpy(buffer, str + (i - 16), 16);
	        }
	        buffer[16] = '\0';
	        lcd_set_cursor(0, 0);
	        lcd_send_string(buffer);
	        HAL_Delay(delay);
	    }
}


void lcd_appear_one_by_one(char *str, uint16_t delay) {
	 while (*str) {
	        lcd_send_data(*str++);
	        HAL_Delay(delay);
	    }
}
