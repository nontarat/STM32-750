/*
 * mpr121.c
 *
 *  Created on: Jul 25, 2023
 *      Author: user
 */
#include "mpr121.h"
/* ------------- Local defines --------------- */

/* Uncomment this define to enable MPR121 IRQ interrupt */
//#define MPR121_INT_ENABLED


/* Number of electrodes of MPR121 */
#define NUM_OF_ELECTRODES	13


/* MPR121 I2C bus address */
#define MPR121_ADDRESS_BYTE	0x5A


static bool write_register(uint8_t reg_addr, uint8_t value)
{
	bool success = true;

	    while ((I2C1->ISR & I2C_ISR_BUSY) != 0);

	    /* send START and wait for completion */
	    I2C1->CR2 |= I2C_CR2_START;
	    while ((I2C1->ISR & I2C_ISR_TXIS) == 0);

	    /* send device address, r/w request and wait for completion */
	    I2C1->TXDR = (MPR121_ADDRESS_BYTE << 1) | I2C_CR2_WRN;  // Write address
	    while ((I2C1->ISR & I2C_ISR_TXE) == 0);
	    while ((I2C1->ISR & I2C_ISR_TC) == 0);

	    /* check SR2 and go on if OK */
	    if ((I2C1->ISR & I2C_ISR_MSL) && (I2C1->ISR & I2C_ISR_BUSY)) {

	        /* send register address */
	        I2C1->TXDR = reg_addr;
	        while ((I2C1->ISR & I2C_ISR_TXE) == 0);
	        while ((I2C1->ISR & I2C_ISR_TC) == 0);

	        /* send data byte */
	        I2C1->TXDR = value;
	        while ((I2C1->ISR & I2C_ISR_TXE) == 0);
	        while ((I2C1->ISR & I2C_ISR_TC) == 0);

	        /* send stop */
	        I2C1->CR2 |= I2C_CR2_STOP;

	        /* ATTENTION: consider to wait for a while */
	    }
	    else {
	        /* error */
	        success = false;
	    }

	    return success;
}

