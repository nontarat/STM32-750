/*
 * Sensor.h
 *
 *  Created on: Oct 28, 2023
 *      Author: user
 */

#ifndef COMMON_BASE_CLASSES_SENSOR_H_
#define COMMON_BASE_CLASSES_SENSOR_H_

/**
 *  Direction structure
 */
enum Direction{
    CW      = 1,  //clockwise
    CCW     = -1, // counter clockwise
    UNKNOWN = 0   //not yet known or invalid state
};


/**
 *  Pullup configuration structure
 */
enum Pullup{
    INTERN, //!< Use internal pullups
    EXTERN //!< Use external pullups
};

/**
 *  Sensor abstract class definition
 * Each sensor needs to have these functions implemented
 */
class Sensor {
public:
	//Sensor();
	//virtual ~Sensor();
	 /** get current angle (rad) */
	        virtual float getAngle()=0;
	        /** get current angular velocity (rad/s)*/
	        virtual float getVelocity();

	        /**
	         * returns 0 if it does need search for absolute zero
	         * 0 - magnetic sensor (& encoder with index which is found)
	         * 1 - encoder with index (with index not found yet)
	         */
	        virtual int needsSearch();

	        /** NAT: set angle to zero:         */
	        virtual void setAngle(float);

	    private:
	        // velocity calculation variables
	        float angle_prev=0; //!< angle in previous velocity calculation step
	        long velocity_calc_timestamp=0; //!< last velocity calculation timestamp
};

#endif /* COMMON_BASE_CLASSES_SENSOR_H_ */
