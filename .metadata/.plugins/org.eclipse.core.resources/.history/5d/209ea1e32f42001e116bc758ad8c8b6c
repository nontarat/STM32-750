#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

#include "main.h"
extern "C"
{



	extern ADC_HandleTypeDef hadc3;
	 long map(long x, long in_min, long in_max, long out_min, long out_max)
	 {
	  return (x - in_min) * (out_max - out_min + 1) / (in_max - in_min + 1) + out_min;
	 }
int converted_value= 0;
}

Model::Model() : modelListener(0), ADC_VAL(0)
{

}

void Model::tick()
{

	HAL_ADC_Start (&hadc3);
	HAL_ADC_PollForConversion (&hadc3, 10);
	uint16_t value = HAL_ADC_GetValue (&hadc3);
	HAL_ADC_Stop (&hadc3);
	ADC_VAL = map(value, 10000, 65535, 0, 100);
	converted_value = map(value, 10000, 65535, 0, 100);

	modelListener->setADC (ADC_VAL);
}
