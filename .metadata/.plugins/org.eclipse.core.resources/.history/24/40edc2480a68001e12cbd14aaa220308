/*
 * pid.hpp
 *
 *  Created on: Oct 11, 2023
 *      Author: user
 */

#ifndef SRC_COMMON_PID_HPP_
#define SRC_COMMON_PID_HPP_
#include "time_utils.h"
#include "foc_utils.h"
class pid {
public:
	pid(float P, float I, float D, float ramp, float limit);
	virtual ~pid();
	/**
     *
     * @param P - Proportional gain
     * @param I - Integral gain
     * @param D - Derivative gain
     * @param ramp - Maximum speed of change of the output value
     * @param limit - Maximum output value
     */
    //~PIDController() = default;

    float operator() (float error);

    float P; //!< Proportional gain
    float I; //!< Integral gain
    float D; //!< Derivative gain
    float output_ramp; //!< Maximum speed of change of the output value
    float limit; //!< Maximum output value
};

#endif /* SRC_COMMON_PID_HPP_ */
